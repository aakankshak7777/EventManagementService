/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kmbl.eventmanagementservice.Schema;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class CollectCallbackEventAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 985967079132865814L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CollectCallbackEventAvro\",\"namespace\":\"com.kmbl.eventmanagementservice.Schema\",\"fields\":[{\"name\":\"transactionId\",\"type\":\"string\"},{\"name\":\"aggregatorCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"merchantCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"status\",\"type\":[\"string\",\"null\"]},{\"name\":\"statusCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"description\",\"type\":[\"string\",\"null\"]},{\"name\":\"remarks\",\"type\":[\"string\",\"null\"]},{\"name\":\"transactionReferenceNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"rrn\",\"type\":[\"string\",\"null\"]},{\"name\":\"amount\",\"type\":[\"string\",\"null\"]},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"payerVpa\",\"type\":[\"string\",\"null\"]},{\"name\":\"payeeVpa\",\"type\":[\"string\",\"null\"]},{\"name\":\"refUrl\",\"type\":[\"string\",\"null\"]},{\"name\":\"refId\",\"type\":[\"string\",\"null\"]},{\"name\":\"initMode\",\"type\":[\"string\",\"null\"]},{\"name\":\"transactionTimestamp\",\"type\":\"long\"},{\"name\":\"checksum\",\"type\":[\"string\",\"null\"]},{\"name\":\"accType\",\"type\":[\"string\",\"null\"]},{\"name\":\"cardType\",\"type\":[\"string\",\"null\"]},{\"name\":\"bin\",\"type\":[\"string\",\"null\"]},{\"name\":\"payerMobileNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"payerAccountNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"payerAccountName\",\"type\":[\"string\",\"null\"]},{\"name\":\"payerAccountIFSC\",\"type\":[\"string\",\"null\"]},{\"name\":\"creationTime\",\"type\":[\"long\",\"null\"]},{\"name\":\"createdBy\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CollectCallbackEventAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CollectCallbackEventAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CollectCallbackEventAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CollectCallbackEventAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CollectCallbackEventAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CollectCallbackEventAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CollectCallbackEventAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CollectCallbackEventAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CollectCallbackEventAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence transactionId;
  private java.lang.CharSequence aggregatorCode;
  private java.lang.CharSequence merchantCode;
  private java.lang.CharSequence status;
  private java.lang.CharSequence statusCode;
  private java.lang.CharSequence description;
  private java.lang.CharSequence remarks;
  private java.lang.CharSequence transactionReferenceNumber;
  private java.lang.CharSequence rrn;
  private java.lang.CharSequence amount;
  private java.lang.CharSequence type;
  private java.lang.CharSequence payerVpa;
  private java.lang.CharSequence payeeVpa;
  private java.lang.CharSequence refUrl;
  private java.lang.CharSequence refId;
  private java.lang.CharSequence initMode;
  private long transactionTimestamp;
  private java.lang.CharSequence checksum;
  private java.lang.CharSequence accType;
  private java.lang.CharSequence cardType;
  private java.lang.CharSequence bin;
  private java.lang.CharSequence payerMobileNumber;
  private java.lang.CharSequence payerAccountNumber;
  private java.lang.CharSequence payerAccountName;
  private java.lang.CharSequence payerAccountIFSC;
  private java.lang.Long creationTime;
  private java.lang.CharSequence createdBy;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CollectCallbackEventAvro() {}

  /**
   * All-args constructor.
   * @param transactionId The new value for transactionId
   * @param aggregatorCode The new value for aggregatorCode
   * @param merchantCode The new value for merchantCode
   * @param status The new value for status
   * @param statusCode The new value for statusCode
   * @param description The new value for description
   * @param remarks The new value for remarks
   * @param transactionReferenceNumber The new value for transactionReferenceNumber
   * @param rrn The new value for rrn
   * @param amount The new value for amount
   * @param type The new value for type
   * @param payerVpa The new value for payerVpa
   * @param payeeVpa The new value for payeeVpa
   * @param refUrl The new value for refUrl
   * @param refId The new value for refId
   * @param initMode The new value for initMode
   * @param transactionTimestamp The new value for transactionTimestamp
   * @param checksum The new value for checksum
   * @param accType The new value for accType
   * @param cardType The new value for cardType
   * @param bin The new value for bin
   * @param payerMobileNumber The new value for payerMobileNumber
   * @param payerAccountNumber The new value for payerAccountNumber
   * @param payerAccountName The new value for payerAccountName
   * @param payerAccountIFSC The new value for payerAccountIFSC
   * @param creationTime The new value for creationTime
   * @param createdBy The new value for createdBy
   */
  public CollectCallbackEventAvro(java.lang.CharSequence transactionId, java.lang.CharSequence aggregatorCode, java.lang.CharSequence merchantCode, java.lang.CharSequence status, java.lang.CharSequence statusCode, java.lang.CharSequence description, java.lang.CharSequence remarks, java.lang.CharSequence transactionReferenceNumber, java.lang.CharSequence rrn, java.lang.CharSequence amount, java.lang.CharSequence type, java.lang.CharSequence payerVpa, java.lang.CharSequence payeeVpa, java.lang.CharSequence refUrl, java.lang.CharSequence refId, java.lang.CharSequence initMode, java.lang.Long transactionTimestamp, java.lang.CharSequence checksum, java.lang.CharSequence accType, java.lang.CharSequence cardType, java.lang.CharSequence bin, java.lang.CharSequence payerMobileNumber, java.lang.CharSequence payerAccountNumber, java.lang.CharSequence payerAccountName, java.lang.CharSequence payerAccountIFSC, java.lang.Long creationTime, java.lang.CharSequence createdBy) {
    this.transactionId = transactionId;
    this.aggregatorCode = aggregatorCode;
    this.merchantCode = merchantCode;
    this.status = status;
    this.statusCode = statusCode;
    this.description = description;
    this.remarks = remarks;
    this.transactionReferenceNumber = transactionReferenceNumber;
    this.rrn = rrn;
    this.amount = amount;
    this.type = type;
    this.payerVpa = payerVpa;
    this.payeeVpa = payeeVpa;
    this.refUrl = refUrl;
    this.refId = refId;
    this.initMode = initMode;
    this.transactionTimestamp = transactionTimestamp;
    this.checksum = checksum;
    this.accType = accType;
    this.cardType = cardType;
    this.bin = bin;
    this.payerMobileNumber = payerMobileNumber;
    this.payerAccountNumber = payerAccountNumber;
    this.payerAccountName = payerAccountName;
    this.payerAccountIFSC = payerAccountIFSC;
    this.creationTime = creationTime;
    this.createdBy = createdBy;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return transactionId;
    case 1: return aggregatorCode;
    case 2: return merchantCode;
    case 3: return status;
    case 4: return statusCode;
    case 5: return description;
    case 6: return remarks;
    case 7: return transactionReferenceNumber;
    case 8: return rrn;
    case 9: return amount;
    case 10: return type;
    case 11: return payerVpa;
    case 12: return payeeVpa;
    case 13: return refUrl;
    case 14: return refId;
    case 15: return initMode;
    case 16: return transactionTimestamp;
    case 17: return checksum;
    case 18: return accType;
    case 19: return cardType;
    case 20: return bin;
    case 21: return payerMobileNumber;
    case 22: return payerAccountNumber;
    case 23: return payerAccountName;
    case 24: return payerAccountIFSC;
    case 25: return creationTime;
    case 26: return createdBy;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: transactionId = (java.lang.CharSequence)value$; break;
    case 1: aggregatorCode = (java.lang.CharSequence)value$; break;
    case 2: merchantCode = (java.lang.CharSequence)value$; break;
    case 3: status = (java.lang.CharSequence)value$; break;
    case 4: statusCode = (java.lang.CharSequence)value$; break;
    case 5: description = (java.lang.CharSequence)value$; break;
    case 6: remarks = (java.lang.CharSequence)value$; break;
    case 7: transactionReferenceNumber = (java.lang.CharSequence)value$; break;
    case 8: rrn = (java.lang.CharSequence)value$; break;
    case 9: amount = (java.lang.CharSequence)value$; break;
    case 10: type = (java.lang.CharSequence)value$; break;
    case 11: payerVpa = (java.lang.CharSequence)value$; break;
    case 12: payeeVpa = (java.lang.CharSequence)value$; break;
    case 13: refUrl = (java.lang.CharSequence)value$; break;
    case 14: refId = (java.lang.CharSequence)value$; break;
    case 15: initMode = (java.lang.CharSequence)value$; break;
    case 16: transactionTimestamp = (java.lang.Long)value$; break;
    case 17: checksum = (java.lang.CharSequence)value$; break;
    case 18: accType = (java.lang.CharSequence)value$; break;
    case 19: cardType = (java.lang.CharSequence)value$; break;
    case 20: bin = (java.lang.CharSequence)value$; break;
    case 21: payerMobileNumber = (java.lang.CharSequence)value$; break;
    case 22: payerAccountNumber = (java.lang.CharSequence)value$; break;
    case 23: payerAccountName = (java.lang.CharSequence)value$; break;
    case 24: payerAccountIFSC = (java.lang.CharSequence)value$; break;
    case 25: creationTime = (java.lang.Long)value$; break;
    case 26: createdBy = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'transactionId' field.
   * @return The value of the 'transactionId' field.
   */
  public java.lang.CharSequence getTransactionId() {
    return transactionId;
  }


  /**
   * Sets the value of the 'transactionId' field.
   * @param value the value to set.
   */
  public void setTransactionId(java.lang.CharSequence value) {
    this.transactionId = value;
  }

  /**
   * Gets the value of the 'aggregatorCode' field.
   * @return The value of the 'aggregatorCode' field.
   */
  public java.lang.CharSequence getAggregatorCode() {
    return aggregatorCode;
  }


  /**
   * Sets the value of the 'aggregatorCode' field.
   * @param value the value to set.
   */
  public void setAggregatorCode(java.lang.CharSequence value) {
    this.aggregatorCode = value;
  }

  /**
   * Gets the value of the 'merchantCode' field.
   * @return The value of the 'merchantCode' field.
   */
  public java.lang.CharSequence getMerchantCode() {
    return merchantCode;
  }


  /**
   * Sets the value of the 'merchantCode' field.
   * @param value the value to set.
   */
  public void setMerchantCode(java.lang.CharSequence value) {
    this.merchantCode = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'statusCode' field.
   * @return The value of the 'statusCode' field.
   */
  public java.lang.CharSequence getStatusCode() {
    return statusCode;
  }


  /**
   * Sets the value of the 'statusCode' field.
   * @param value the value to set.
   */
  public void setStatusCode(java.lang.CharSequence value) {
    this.statusCode = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'remarks' field.
   * @return The value of the 'remarks' field.
   */
  public java.lang.CharSequence getRemarks() {
    return remarks;
  }


  /**
   * Sets the value of the 'remarks' field.
   * @param value the value to set.
   */
  public void setRemarks(java.lang.CharSequence value) {
    this.remarks = value;
  }

  /**
   * Gets the value of the 'transactionReferenceNumber' field.
   * @return The value of the 'transactionReferenceNumber' field.
   */
  public java.lang.CharSequence getTransactionReferenceNumber() {
    return transactionReferenceNumber;
  }


  /**
   * Sets the value of the 'transactionReferenceNumber' field.
   * @param value the value to set.
   */
  public void setTransactionReferenceNumber(java.lang.CharSequence value) {
    this.transactionReferenceNumber = value;
  }

  /**
   * Gets the value of the 'rrn' field.
   * @return The value of the 'rrn' field.
   */
  public java.lang.CharSequence getRrn() {
    return rrn;
  }


  /**
   * Sets the value of the 'rrn' field.
   * @param value the value to set.
   */
  public void setRrn(java.lang.CharSequence value) {
    this.rrn = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.lang.CharSequence getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.lang.CharSequence value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'payerVpa' field.
   * @return The value of the 'payerVpa' field.
   */
  public java.lang.CharSequence getPayerVpa() {
    return payerVpa;
  }


  /**
   * Sets the value of the 'payerVpa' field.
   * @param value the value to set.
   */
  public void setPayerVpa(java.lang.CharSequence value) {
    this.payerVpa = value;
  }

  /**
   * Gets the value of the 'payeeVpa' field.
   * @return The value of the 'payeeVpa' field.
   */
  public java.lang.CharSequence getPayeeVpa() {
    return payeeVpa;
  }


  /**
   * Sets the value of the 'payeeVpa' field.
   * @param value the value to set.
   */
  public void setPayeeVpa(java.lang.CharSequence value) {
    this.payeeVpa = value;
  }

  /**
   * Gets the value of the 'refUrl' field.
   * @return The value of the 'refUrl' field.
   */
  public java.lang.CharSequence getRefUrl() {
    return refUrl;
  }


  /**
   * Sets the value of the 'refUrl' field.
   * @param value the value to set.
   */
  public void setRefUrl(java.lang.CharSequence value) {
    this.refUrl = value;
  }

  /**
   * Gets the value of the 'refId' field.
   * @return The value of the 'refId' field.
   */
  public java.lang.CharSequence getRefId() {
    return refId;
  }


  /**
   * Sets the value of the 'refId' field.
   * @param value the value to set.
   */
  public void setRefId(java.lang.CharSequence value) {
    this.refId = value;
  }

  /**
   * Gets the value of the 'initMode' field.
   * @return The value of the 'initMode' field.
   */
  public java.lang.CharSequence getInitMode() {
    return initMode;
  }


  /**
   * Sets the value of the 'initMode' field.
   * @param value the value to set.
   */
  public void setInitMode(java.lang.CharSequence value) {
    this.initMode = value;
  }

  /**
   * Gets the value of the 'transactionTimestamp' field.
   * @return The value of the 'transactionTimestamp' field.
   */
  public long getTransactionTimestamp() {
    return transactionTimestamp;
  }


  /**
   * Sets the value of the 'transactionTimestamp' field.
   * @param value the value to set.
   */
  public void setTransactionTimestamp(long value) {
    this.transactionTimestamp = value;
  }

  /**
   * Gets the value of the 'checksum' field.
   * @return The value of the 'checksum' field.
   */
  public java.lang.CharSequence getChecksum() {
    return checksum;
  }


  /**
   * Sets the value of the 'checksum' field.
   * @param value the value to set.
   */
  public void setChecksum(java.lang.CharSequence value) {
    this.checksum = value;
  }

  /**
   * Gets the value of the 'accType' field.
   * @return The value of the 'accType' field.
   */
  public java.lang.CharSequence getAccType() {
    return accType;
  }


  /**
   * Sets the value of the 'accType' field.
   * @param value the value to set.
   */
  public void setAccType(java.lang.CharSequence value) {
    this.accType = value;
  }

  /**
   * Gets the value of the 'cardType' field.
   * @return The value of the 'cardType' field.
   */
  public java.lang.CharSequence getCardType() {
    return cardType;
  }


  /**
   * Sets the value of the 'cardType' field.
   * @param value the value to set.
   */
  public void setCardType(java.lang.CharSequence value) {
    this.cardType = value;
  }

  /**
   * Gets the value of the 'bin' field.
   * @return The value of the 'bin' field.
   */
  public java.lang.CharSequence getBin() {
    return bin;
  }


  /**
   * Sets the value of the 'bin' field.
   * @param value the value to set.
   */
  public void setBin(java.lang.CharSequence value) {
    this.bin = value;
  }

  /**
   * Gets the value of the 'payerMobileNumber' field.
   * @return The value of the 'payerMobileNumber' field.
   */
  public java.lang.CharSequence getPayerMobileNumber() {
    return payerMobileNumber;
  }


  /**
   * Sets the value of the 'payerMobileNumber' field.
   * @param value the value to set.
   */
  public void setPayerMobileNumber(java.lang.CharSequence value) {
    this.payerMobileNumber = value;
  }

  /**
   * Gets the value of the 'payerAccountNumber' field.
   * @return The value of the 'payerAccountNumber' field.
   */
  public java.lang.CharSequence getPayerAccountNumber() {
    return payerAccountNumber;
  }


  /**
   * Sets the value of the 'payerAccountNumber' field.
   * @param value the value to set.
   */
  public void setPayerAccountNumber(java.lang.CharSequence value) {
    this.payerAccountNumber = value;
  }

  /**
   * Gets the value of the 'payerAccountName' field.
   * @return The value of the 'payerAccountName' field.
   */
  public java.lang.CharSequence getPayerAccountName() {
    return payerAccountName;
  }


  /**
   * Sets the value of the 'payerAccountName' field.
   * @param value the value to set.
   */
  public void setPayerAccountName(java.lang.CharSequence value) {
    this.payerAccountName = value;
  }

  /**
   * Gets the value of the 'payerAccountIFSC' field.
   * @return The value of the 'payerAccountIFSC' field.
   */
  public java.lang.CharSequence getPayerAccountIFSC() {
    return payerAccountIFSC;
  }


  /**
   * Sets the value of the 'payerAccountIFSC' field.
   * @param value the value to set.
   */
  public void setPayerAccountIFSC(java.lang.CharSequence value) {
    this.payerAccountIFSC = value;
  }

  /**
   * Gets the value of the 'creationTime' field.
   * @return The value of the 'creationTime' field.
   */
  public java.lang.Long getCreationTime() {
    return creationTime;
  }


  /**
   * Sets the value of the 'creationTime' field.
   * @param value the value to set.
   */
  public void setCreationTime(java.lang.Long value) {
    this.creationTime = value;
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.lang.CharSequence getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.lang.CharSequence value) {
    this.createdBy = value;
  }

  /**
   * Creates a new CollectCallbackEventAvro RecordBuilder.
   * @return A new CollectCallbackEventAvro RecordBuilder
   */
  public static com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder newBuilder() {
    return new com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder();
  }

  /**
   * Creates a new CollectCallbackEventAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CollectCallbackEventAvro RecordBuilder
   */
  public static com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder newBuilder(com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder other) {
    if (other == null) {
      return new com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder();
    } else {
      return new com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder(other);
    }
  }

  /**
   * Creates a new CollectCallbackEventAvro RecordBuilder by copying an existing CollectCallbackEventAvro instance.
   * @param other The existing instance to copy.
   * @return A new CollectCallbackEventAvro RecordBuilder
   */
  public static com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder newBuilder(com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro other) {
    if (other == null) {
      return new com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder();
    } else {
      return new com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for CollectCallbackEventAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CollectCallbackEventAvro>
    implements org.apache.avro.data.RecordBuilder<CollectCallbackEventAvro> {

    private java.lang.CharSequence transactionId;
    private java.lang.CharSequence aggregatorCode;
    private java.lang.CharSequence merchantCode;
    private java.lang.CharSequence status;
    private java.lang.CharSequence statusCode;
    private java.lang.CharSequence description;
    private java.lang.CharSequence remarks;
    private java.lang.CharSequence transactionReferenceNumber;
    private java.lang.CharSequence rrn;
    private java.lang.CharSequence amount;
    private java.lang.CharSequence type;
    private java.lang.CharSequence payerVpa;
    private java.lang.CharSequence payeeVpa;
    private java.lang.CharSequence refUrl;
    private java.lang.CharSequence refId;
    private java.lang.CharSequence initMode;
    private long transactionTimestamp;
    private java.lang.CharSequence checksum;
    private java.lang.CharSequence accType;
    private java.lang.CharSequence cardType;
    private java.lang.CharSequence bin;
    private java.lang.CharSequence payerMobileNumber;
    private java.lang.CharSequence payerAccountNumber;
    private java.lang.CharSequence payerAccountName;
    private java.lang.CharSequence payerAccountIFSC;
    private java.lang.Long creationTime;
    private java.lang.CharSequence createdBy;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[0].schema(), other.transactionId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.aggregatorCode)) {
        this.aggregatorCode = data().deepCopy(fields()[1].schema(), other.aggregatorCode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.merchantCode)) {
        this.merchantCode = data().deepCopy(fields()[2].schema(), other.merchantCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[4].schema(), other.statusCode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.remarks)) {
        this.remarks = data().deepCopy(fields()[6].schema(), other.remarks);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.transactionReferenceNumber)) {
        this.transactionReferenceNumber = data().deepCopy(fields()[7].schema(), other.transactionReferenceNumber);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.rrn)) {
        this.rrn = data().deepCopy(fields()[8].schema(), other.rrn);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.amount)) {
        this.amount = data().deepCopy(fields()[9].schema(), other.amount);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.type)) {
        this.type = data().deepCopy(fields()[10].schema(), other.type);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.payerVpa)) {
        this.payerVpa = data().deepCopy(fields()[11].schema(), other.payerVpa);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.payeeVpa)) {
        this.payeeVpa = data().deepCopy(fields()[12].schema(), other.payeeVpa);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.refUrl)) {
        this.refUrl = data().deepCopy(fields()[13].schema(), other.refUrl);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.refId)) {
        this.refId = data().deepCopy(fields()[14].schema(), other.refId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.initMode)) {
        this.initMode = data().deepCopy(fields()[15].schema(), other.initMode);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.transactionTimestamp)) {
        this.transactionTimestamp = data().deepCopy(fields()[16].schema(), other.transactionTimestamp);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.checksum)) {
        this.checksum = data().deepCopy(fields()[17].schema(), other.checksum);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.accType)) {
        this.accType = data().deepCopy(fields()[18].schema(), other.accType);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.cardType)) {
        this.cardType = data().deepCopy(fields()[19].schema(), other.cardType);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.bin)) {
        this.bin = data().deepCopy(fields()[20].schema(), other.bin);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.payerMobileNumber)) {
        this.payerMobileNumber = data().deepCopy(fields()[21].schema(), other.payerMobileNumber);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.payerAccountNumber)) {
        this.payerAccountNumber = data().deepCopy(fields()[22].schema(), other.payerAccountNumber);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.payerAccountName)) {
        this.payerAccountName = data().deepCopy(fields()[23].schema(), other.payerAccountName);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.payerAccountIFSC)) {
        this.payerAccountIFSC = data().deepCopy(fields()[24].schema(), other.payerAccountIFSC);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.creationTime)) {
        this.creationTime = data().deepCopy(fields()[25].schema(), other.creationTime);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[26].schema(), other.createdBy);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
    }

    /**
     * Creates a Builder by copying an existing CollectCallbackEventAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[0].schema(), other.transactionId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aggregatorCode)) {
        this.aggregatorCode = data().deepCopy(fields()[1].schema(), other.aggregatorCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.merchantCode)) {
        this.merchantCode = data().deepCopy(fields()[2].schema(), other.merchantCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[4].schema(), other.statusCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.remarks)) {
        this.remarks = data().deepCopy(fields()[6].schema(), other.remarks);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.transactionReferenceNumber)) {
        this.transactionReferenceNumber = data().deepCopy(fields()[7].schema(), other.transactionReferenceNumber);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.rrn)) {
        this.rrn = data().deepCopy(fields()[8].schema(), other.rrn);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.amount)) {
        this.amount = data().deepCopy(fields()[9].schema(), other.amount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.type)) {
        this.type = data().deepCopy(fields()[10].schema(), other.type);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.payerVpa)) {
        this.payerVpa = data().deepCopy(fields()[11].schema(), other.payerVpa);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.payeeVpa)) {
        this.payeeVpa = data().deepCopy(fields()[12].schema(), other.payeeVpa);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.refUrl)) {
        this.refUrl = data().deepCopy(fields()[13].schema(), other.refUrl);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.refId)) {
        this.refId = data().deepCopy(fields()[14].schema(), other.refId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.initMode)) {
        this.initMode = data().deepCopy(fields()[15].schema(), other.initMode);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.transactionTimestamp)) {
        this.transactionTimestamp = data().deepCopy(fields()[16].schema(), other.transactionTimestamp);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.checksum)) {
        this.checksum = data().deepCopy(fields()[17].schema(), other.checksum);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.accType)) {
        this.accType = data().deepCopy(fields()[18].schema(), other.accType);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.cardType)) {
        this.cardType = data().deepCopy(fields()[19].schema(), other.cardType);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.bin)) {
        this.bin = data().deepCopy(fields()[20].schema(), other.bin);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.payerMobileNumber)) {
        this.payerMobileNumber = data().deepCopy(fields()[21].schema(), other.payerMobileNumber);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.payerAccountNumber)) {
        this.payerAccountNumber = data().deepCopy(fields()[22].schema(), other.payerAccountNumber);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.payerAccountName)) {
        this.payerAccountName = data().deepCopy(fields()[23].schema(), other.payerAccountName);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.payerAccountIFSC)) {
        this.payerAccountIFSC = data().deepCopy(fields()[24].schema(), other.payerAccountIFSC);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.creationTime)) {
        this.creationTime = data().deepCopy(fields()[25].schema(), other.creationTime);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[26].schema(), other.createdBy);
        fieldSetFlags()[26] = true;
      }
    }

    /**
      * Gets the value of the 'transactionId' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransactionId() {
      return transactionId;
    }


    /**
      * Sets the value of the 'transactionId' field.
      * @param value The value of 'transactionId'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setTransactionId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.transactionId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionId' field has been set.
      * @return True if the 'transactionId' field has been set, false otherwise.
      */
    public boolean hasTransactionId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'transactionId' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearTransactionId() {
      transactionId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'aggregatorCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getAggregatorCode() {
      return aggregatorCode;
    }


    /**
      * Sets the value of the 'aggregatorCode' field.
      * @param value The value of 'aggregatorCode'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setAggregatorCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.aggregatorCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'aggregatorCode' field has been set.
      * @return True if the 'aggregatorCode' field has been set, false otherwise.
      */
    public boolean hasAggregatorCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'aggregatorCode' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearAggregatorCode() {
      aggregatorCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'merchantCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getMerchantCode() {
      return merchantCode;
    }


    /**
      * Sets the value of the 'merchantCode' field.
      * @param value The value of 'merchantCode'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setMerchantCode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.merchantCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'merchantCode' field has been set.
      * @return True if the 'merchantCode' field has been set, false otherwise.
      */
    public boolean hasMerchantCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'merchantCode' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearMerchantCode() {
      merchantCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'statusCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatusCode() {
      return statusCode;
    }


    /**
      * Sets the value of the 'statusCode' field.
      * @param value The value of 'statusCode'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setStatusCode(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.statusCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'statusCode' field has been set.
      * @return True if the 'statusCode' field has been set, false otherwise.
      */
    public boolean hasStatusCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'statusCode' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearStatusCode() {
      statusCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.description = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearDescription() {
      description = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'remarks' field.
      * @return The value.
      */
    public java.lang.CharSequence getRemarks() {
      return remarks;
    }


    /**
      * Sets the value of the 'remarks' field.
      * @param value The value of 'remarks'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setRemarks(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.remarks = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'remarks' field has been set.
      * @return True if the 'remarks' field has been set, false otherwise.
      */
    public boolean hasRemarks() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'remarks' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearRemarks() {
      remarks = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionReferenceNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransactionReferenceNumber() {
      return transactionReferenceNumber;
    }


    /**
      * Sets the value of the 'transactionReferenceNumber' field.
      * @param value The value of 'transactionReferenceNumber'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setTransactionReferenceNumber(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.transactionReferenceNumber = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionReferenceNumber' field has been set.
      * @return True if the 'transactionReferenceNumber' field has been set, false otherwise.
      */
    public boolean hasTransactionReferenceNumber() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'transactionReferenceNumber' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearTransactionReferenceNumber() {
      transactionReferenceNumber = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'rrn' field.
      * @return The value.
      */
    public java.lang.CharSequence getRrn() {
      return rrn;
    }


    /**
      * Sets the value of the 'rrn' field.
      * @param value The value of 'rrn'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setRrn(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.rrn = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'rrn' field has been set.
      * @return True if the 'rrn' field has been set, false otherwise.
      */
    public boolean hasRrn() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'rrn' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearRrn() {
      rrn = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.lang.CharSequence getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setAmount(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.amount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setType(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.type = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearType() {
      type = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'payerVpa' field.
      * @return The value.
      */
    public java.lang.CharSequence getPayerVpa() {
      return payerVpa;
    }


    /**
      * Sets the value of the 'payerVpa' field.
      * @param value The value of 'payerVpa'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setPayerVpa(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.payerVpa = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'payerVpa' field has been set.
      * @return True if the 'payerVpa' field has been set, false otherwise.
      */
    public boolean hasPayerVpa() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'payerVpa' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearPayerVpa() {
      payerVpa = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'payeeVpa' field.
      * @return The value.
      */
    public java.lang.CharSequence getPayeeVpa() {
      return payeeVpa;
    }


    /**
      * Sets the value of the 'payeeVpa' field.
      * @param value The value of 'payeeVpa'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setPayeeVpa(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.payeeVpa = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'payeeVpa' field has been set.
      * @return True if the 'payeeVpa' field has been set, false otherwise.
      */
    public boolean hasPayeeVpa() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'payeeVpa' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearPayeeVpa() {
      payeeVpa = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'refUrl' field.
      * @return The value.
      */
    public java.lang.CharSequence getRefUrl() {
      return refUrl;
    }


    /**
      * Sets the value of the 'refUrl' field.
      * @param value The value of 'refUrl'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setRefUrl(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.refUrl = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'refUrl' field has been set.
      * @return True if the 'refUrl' field has been set, false otherwise.
      */
    public boolean hasRefUrl() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'refUrl' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearRefUrl() {
      refUrl = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'refId' field.
      * @return The value.
      */
    public java.lang.CharSequence getRefId() {
      return refId;
    }


    /**
      * Sets the value of the 'refId' field.
      * @param value The value of 'refId'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setRefId(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.refId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'refId' field has been set.
      * @return True if the 'refId' field has been set, false otherwise.
      */
    public boolean hasRefId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'refId' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearRefId() {
      refId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'initMode' field.
      * @return The value.
      */
    public java.lang.CharSequence getInitMode() {
      return initMode;
    }


    /**
      * Sets the value of the 'initMode' field.
      * @param value The value of 'initMode'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setInitMode(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.initMode = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'initMode' field has been set.
      * @return True if the 'initMode' field has been set, false otherwise.
      */
    public boolean hasInitMode() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'initMode' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearInitMode() {
      initMode = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionTimestamp' field.
      * @return The value.
      */
    public long getTransactionTimestamp() {
      return transactionTimestamp;
    }


    /**
      * Sets the value of the 'transactionTimestamp' field.
      * @param value The value of 'transactionTimestamp'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setTransactionTimestamp(long value) {
      validate(fields()[16], value);
      this.transactionTimestamp = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionTimestamp' field has been set.
      * @return True if the 'transactionTimestamp' field has been set, false otherwise.
      */
    public boolean hasTransactionTimestamp() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'transactionTimestamp' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearTransactionTimestamp() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'checksum' field.
      * @return The value.
      */
    public java.lang.CharSequence getChecksum() {
      return checksum;
    }


    /**
      * Sets the value of the 'checksum' field.
      * @param value The value of 'checksum'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setChecksum(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.checksum = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'checksum' field has been set.
      * @return True if the 'checksum' field has been set, false otherwise.
      */
    public boolean hasChecksum() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'checksum' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearChecksum() {
      checksum = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'accType' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccType() {
      return accType;
    }


    /**
      * Sets the value of the 'accType' field.
      * @param value The value of 'accType'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setAccType(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.accType = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'accType' field has been set.
      * @return True if the 'accType' field has been set, false otherwise.
      */
    public boolean hasAccType() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'accType' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearAccType() {
      accType = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'cardType' field.
      * @return The value.
      */
    public java.lang.CharSequence getCardType() {
      return cardType;
    }


    /**
      * Sets the value of the 'cardType' field.
      * @param value The value of 'cardType'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setCardType(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.cardType = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'cardType' field has been set.
      * @return True if the 'cardType' field has been set, false otherwise.
      */
    public boolean hasCardType() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'cardType' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearCardType() {
      cardType = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'bin' field.
      * @return The value.
      */
    public java.lang.CharSequence getBin() {
      return bin;
    }


    /**
      * Sets the value of the 'bin' field.
      * @param value The value of 'bin'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setBin(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.bin = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'bin' field has been set.
      * @return True if the 'bin' field has been set, false otherwise.
      */
    public boolean hasBin() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'bin' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearBin() {
      bin = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'payerMobileNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getPayerMobileNumber() {
      return payerMobileNumber;
    }


    /**
      * Sets the value of the 'payerMobileNumber' field.
      * @param value The value of 'payerMobileNumber'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setPayerMobileNumber(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.payerMobileNumber = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'payerMobileNumber' field has been set.
      * @return True if the 'payerMobileNumber' field has been set, false otherwise.
      */
    public boolean hasPayerMobileNumber() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'payerMobileNumber' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearPayerMobileNumber() {
      payerMobileNumber = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'payerAccountNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getPayerAccountNumber() {
      return payerAccountNumber;
    }


    /**
      * Sets the value of the 'payerAccountNumber' field.
      * @param value The value of 'payerAccountNumber'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setPayerAccountNumber(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.payerAccountNumber = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'payerAccountNumber' field has been set.
      * @return True if the 'payerAccountNumber' field has been set, false otherwise.
      */
    public boolean hasPayerAccountNumber() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'payerAccountNumber' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearPayerAccountNumber() {
      payerAccountNumber = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'payerAccountName' field.
      * @return The value.
      */
    public java.lang.CharSequence getPayerAccountName() {
      return payerAccountName;
    }


    /**
      * Sets the value of the 'payerAccountName' field.
      * @param value The value of 'payerAccountName'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setPayerAccountName(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.payerAccountName = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'payerAccountName' field has been set.
      * @return True if the 'payerAccountName' field has been set, false otherwise.
      */
    public boolean hasPayerAccountName() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'payerAccountName' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearPayerAccountName() {
      payerAccountName = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'payerAccountIFSC' field.
      * @return The value.
      */
    public java.lang.CharSequence getPayerAccountIFSC() {
      return payerAccountIFSC;
    }


    /**
      * Sets the value of the 'payerAccountIFSC' field.
      * @param value The value of 'payerAccountIFSC'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setPayerAccountIFSC(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.payerAccountIFSC = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'payerAccountIFSC' field has been set.
      * @return True if the 'payerAccountIFSC' field has been set, false otherwise.
      */
    public boolean hasPayerAccountIFSC() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'payerAccountIFSC' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearPayerAccountIFSC() {
      payerAccountIFSC = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationTime' field.
      * @return The value.
      */
    public java.lang.Long getCreationTime() {
      return creationTime;
    }


    /**
      * Sets the value of the 'creationTime' field.
      * @param value The value of 'creationTime'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setCreationTime(java.lang.Long value) {
      validate(fields()[25], value);
      this.creationTime = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'creationTime' field has been set.
      * @return True if the 'creationTime' field has been set, false otherwise.
      */
    public boolean hasCreationTime() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'creationTime' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearCreationTime() {
      creationTime = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder setCreatedBy(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.createdBy = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public com.kmbl.eventmanagementservice.Schema.CollectCallbackEventAvro.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CollectCallbackEventAvro build() {
      try {
        CollectCallbackEventAvro record = new CollectCallbackEventAvro();
        record.transactionId = fieldSetFlags()[0] ? this.transactionId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.aggregatorCode = fieldSetFlags()[1] ? this.aggregatorCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.merchantCode = fieldSetFlags()[2] ? this.merchantCode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.statusCode = fieldSetFlags()[4] ? this.statusCode : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.description = fieldSetFlags()[5] ? this.description : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.remarks = fieldSetFlags()[6] ? this.remarks : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.transactionReferenceNumber = fieldSetFlags()[7] ? this.transactionReferenceNumber : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.rrn = fieldSetFlags()[8] ? this.rrn : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.amount = fieldSetFlags()[9] ? this.amount : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.type = fieldSetFlags()[10] ? this.type : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.payerVpa = fieldSetFlags()[11] ? this.payerVpa : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.payeeVpa = fieldSetFlags()[12] ? this.payeeVpa : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.refUrl = fieldSetFlags()[13] ? this.refUrl : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.refId = fieldSetFlags()[14] ? this.refId : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.initMode = fieldSetFlags()[15] ? this.initMode : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.transactionTimestamp = fieldSetFlags()[16] ? this.transactionTimestamp : (java.lang.Long) defaultValue(fields()[16]);
        record.checksum = fieldSetFlags()[17] ? this.checksum : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.accType = fieldSetFlags()[18] ? this.accType : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.cardType = fieldSetFlags()[19] ? this.cardType : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.bin = fieldSetFlags()[20] ? this.bin : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.payerMobileNumber = fieldSetFlags()[21] ? this.payerMobileNumber : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.payerAccountNumber = fieldSetFlags()[22] ? this.payerAccountNumber : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.payerAccountName = fieldSetFlags()[23] ? this.payerAccountName : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.payerAccountIFSC = fieldSetFlags()[24] ? this.payerAccountIFSC : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.creationTime = fieldSetFlags()[25] ? this.creationTime : (java.lang.Long) defaultValue(fields()[25]);
        record.createdBy = fieldSetFlags()[26] ? this.createdBy : (java.lang.CharSequence) defaultValue(fields()[26]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CollectCallbackEventAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<CollectCallbackEventAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CollectCallbackEventAvro>
    READER$ = (org.apache.avro.io.DatumReader<CollectCallbackEventAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.transactionId);

    if (this.aggregatorCode == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.aggregatorCode);
    }

    if (this.merchantCode == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.merchantCode);
    }

    if (this.status == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.status);
    }

    if (this.statusCode == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.statusCode);
    }

    if (this.description == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.description);
    }

    if (this.remarks == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.remarks);
    }

    if (this.transactionReferenceNumber == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.transactionReferenceNumber);
    }

    if (this.rrn == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.rrn);
    }

    if (this.amount == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.amount);
    }

    out.writeString(this.type);

    if (this.payerVpa == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.payerVpa);
    }

    if (this.payeeVpa == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.payeeVpa);
    }

    if (this.refUrl == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.refUrl);
    }

    if (this.refId == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.refId);
    }

    if (this.initMode == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.initMode);
    }

    out.writeLong(this.transactionTimestamp);

    if (this.checksum == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.checksum);
    }

    if (this.accType == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.accType);
    }

    if (this.cardType == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.cardType);
    }

    if (this.bin == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.bin);
    }

    if (this.payerMobileNumber == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.payerMobileNumber);
    }

    if (this.payerAccountNumber == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.payerAccountNumber);
    }

    if (this.payerAccountName == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.payerAccountName);
    }

    if (this.payerAccountIFSC == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.payerAccountIFSC);
    }

    if (this.creationTime == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.creationTime);
    }

    if (this.createdBy == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.createdBy);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.transactionId = in.readString(this.transactionId instanceof Utf8 ? (Utf8)this.transactionId : null);

      if (in.readIndex() != 0) {
        in.readNull();
        this.aggregatorCode = null;
      } else {
        this.aggregatorCode = in.readString(this.aggregatorCode instanceof Utf8 ? (Utf8)this.aggregatorCode : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.merchantCode = null;
      } else {
        this.merchantCode = in.readString(this.merchantCode instanceof Utf8 ? (Utf8)this.merchantCode : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.status = null;
      } else {
        this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.statusCode = null;
      } else {
        this.statusCode = in.readString(this.statusCode instanceof Utf8 ? (Utf8)this.statusCode : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.description = null;
      } else {
        this.description = in.readString(this.description instanceof Utf8 ? (Utf8)this.description : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.remarks = null;
      } else {
        this.remarks = in.readString(this.remarks instanceof Utf8 ? (Utf8)this.remarks : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.transactionReferenceNumber = null;
      } else {
        this.transactionReferenceNumber = in.readString(this.transactionReferenceNumber instanceof Utf8 ? (Utf8)this.transactionReferenceNumber : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.rrn = null;
      } else {
        this.rrn = in.readString(this.rrn instanceof Utf8 ? (Utf8)this.rrn : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.amount = null;
      } else {
        this.amount = in.readString(this.amount instanceof Utf8 ? (Utf8)this.amount : null);
      }

      this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);

      if (in.readIndex() != 0) {
        in.readNull();
        this.payerVpa = null;
      } else {
        this.payerVpa = in.readString(this.payerVpa instanceof Utf8 ? (Utf8)this.payerVpa : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.payeeVpa = null;
      } else {
        this.payeeVpa = in.readString(this.payeeVpa instanceof Utf8 ? (Utf8)this.payeeVpa : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.refUrl = null;
      } else {
        this.refUrl = in.readString(this.refUrl instanceof Utf8 ? (Utf8)this.refUrl : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.refId = null;
      } else {
        this.refId = in.readString(this.refId instanceof Utf8 ? (Utf8)this.refId : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.initMode = null;
      } else {
        this.initMode = in.readString(this.initMode instanceof Utf8 ? (Utf8)this.initMode : null);
      }

      this.transactionTimestamp = in.readLong();

      if (in.readIndex() != 0) {
        in.readNull();
        this.checksum = null;
      } else {
        this.checksum = in.readString(this.checksum instanceof Utf8 ? (Utf8)this.checksum : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.accType = null;
      } else {
        this.accType = in.readString(this.accType instanceof Utf8 ? (Utf8)this.accType : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.cardType = null;
      } else {
        this.cardType = in.readString(this.cardType instanceof Utf8 ? (Utf8)this.cardType : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.bin = null;
      } else {
        this.bin = in.readString(this.bin instanceof Utf8 ? (Utf8)this.bin : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.payerMobileNumber = null;
      } else {
        this.payerMobileNumber = in.readString(this.payerMobileNumber instanceof Utf8 ? (Utf8)this.payerMobileNumber : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.payerAccountNumber = null;
      } else {
        this.payerAccountNumber = in.readString(this.payerAccountNumber instanceof Utf8 ? (Utf8)this.payerAccountNumber : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.payerAccountName = null;
      } else {
        this.payerAccountName = in.readString(this.payerAccountName instanceof Utf8 ? (Utf8)this.payerAccountName : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.payerAccountIFSC = null;
      } else {
        this.payerAccountIFSC = in.readString(this.payerAccountIFSC instanceof Utf8 ? (Utf8)this.payerAccountIFSC : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.creationTime = null;
      } else {
        this.creationTime = in.readLong();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.createdBy = null;
      } else {
        this.createdBy = in.readString(this.createdBy instanceof Utf8 ? (Utf8)this.createdBy : null);
      }

    } else {
      for (int i = 0; i < 27; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.transactionId = in.readString(this.transactionId instanceof Utf8 ? (Utf8)this.transactionId : null);
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.aggregatorCode = null;
          } else {
            this.aggregatorCode = in.readString(this.aggregatorCode instanceof Utf8 ? (Utf8)this.aggregatorCode : null);
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.merchantCode = null;
          } else {
            this.merchantCode = in.readString(this.merchantCode instanceof Utf8 ? (Utf8)this.merchantCode : null);
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.status = null;
          } else {
            this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.statusCode = null;
          } else {
            this.statusCode = in.readString(this.statusCode instanceof Utf8 ? (Utf8)this.statusCode : null);
          }
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.description = null;
          } else {
            this.description = in.readString(this.description instanceof Utf8 ? (Utf8)this.description : null);
          }
          break;

        case 6:
          if (in.readIndex() != 0) {
            in.readNull();
            this.remarks = null;
          } else {
            this.remarks = in.readString(this.remarks instanceof Utf8 ? (Utf8)this.remarks : null);
          }
          break;

        case 7:
          if (in.readIndex() != 0) {
            in.readNull();
            this.transactionReferenceNumber = null;
          } else {
            this.transactionReferenceNumber = in.readString(this.transactionReferenceNumber instanceof Utf8 ? (Utf8)this.transactionReferenceNumber : null);
          }
          break;

        case 8:
          if (in.readIndex() != 0) {
            in.readNull();
            this.rrn = null;
          } else {
            this.rrn = in.readString(this.rrn instanceof Utf8 ? (Utf8)this.rrn : null);
          }
          break;

        case 9:
          if (in.readIndex() != 0) {
            in.readNull();
            this.amount = null;
          } else {
            this.amount = in.readString(this.amount instanceof Utf8 ? (Utf8)this.amount : null);
          }
          break;

        case 10:
          this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          break;

        case 11:
          if (in.readIndex() != 0) {
            in.readNull();
            this.payerVpa = null;
          } else {
            this.payerVpa = in.readString(this.payerVpa instanceof Utf8 ? (Utf8)this.payerVpa : null);
          }
          break;

        case 12:
          if (in.readIndex() != 0) {
            in.readNull();
            this.payeeVpa = null;
          } else {
            this.payeeVpa = in.readString(this.payeeVpa instanceof Utf8 ? (Utf8)this.payeeVpa : null);
          }
          break;

        case 13:
          if (in.readIndex() != 0) {
            in.readNull();
            this.refUrl = null;
          } else {
            this.refUrl = in.readString(this.refUrl instanceof Utf8 ? (Utf8)this.refUrl : null);
          }
          break;

        case 14:
          if (in.readIndex() != 0) {
            in.readNull();
            this.refId = null;
          } else {
            this.refId = in.readString(this.refId instanceof Utf8 ? (Utf8)this.refId : null);
          }
          break;

        case 15:
          if (in.readIndex() != 0) {
            in.readNull();
            this.initMode = null;
          } else {
            this.initMode = in.readString(this.initMode instanceof Utf8 ? (Utf8)this.initMode : null);
          }
          break;

        case 16:
          this.transactionTimestamp = in.readLong();
          break;

        case 17:
          if (in.readIndex() != 0) {
            in.readNull();
            this.checksum = null;
          } else {
            this.checksum = in.readString(this.checksum instanceof Utf8 ? (Utf8)this.checksum : null);
          }
          break;

        case 18:
          if (in.readIndex() != 0) {
            in.readNull();
            this.accType = null;
          } else {
            this.accType = in.readString(this.accType instanceof Utf8 ? (Utf8)this.accType : null);
          }
          break;

        case 19:
          if (in.readIndex() != 0) {
            in.readNull();
            this.cardType = null;
          } else {
            this.cardType = in.readString(this.cardType instanceof Utf8 ? (Utf8)this.cardType : null);
          }
          break;

        case 20:
          if (in.readIndex() != 0) {
            in.readNull();
            this.bin = null;
          } else {
            this.bin = in.readString(this.bin instanceof Utf8 ? (Utf8)this.bin : null);
          }
          break;

        case 21:
          if (in.readIndex() != 0) {
            in.readNull();
            this.payerMobileNumber = null;
          } else {
            this.payerMobileNumber = in.readString(this.payerMobileNumber instanceof Utf8 ? (Utf8)this.payerMobileNumber : null);
          }
          break;

        case 22:
          if (in.readIndex() != 0) {
            in.readNull();
            this.payerAccountNumber = null;
          } else {
            this.payerAccountNumber = in.readString(this.payerAccountNumber instanceof Utf8 ? (Utf8)this.payerAccountNumber : null);
          }
          break;

        case 23:
          if (in.readIndex() != 0) {
            in.readNull();
            this.payerAccountName = null;
          } else {
            this.payerAccountName = in.readString(this.payerAccountName instanceof Utf8 ? (Utf8)this.payerAccountName : null);
          }
          break;

        case 24:
          if (in.readIndex() != 0) {
            in.readNull();
            this.payerAccountIFSC = null;
          } else {
            this.payerAccountIFSC = in.readString(this.payerAccountIFSC instanceof Utf8 ? (Utf8)this.payerAccountIFSC : null);
          }
          break;

        case 25:
          if (in.readIndex() != 0) {
            in.readNull();
            this.creationTime = null;
          } else {
            this.creationTime = in.readLong();
          }
          break;

        case 26:
          if (in.readIndex() != 0) {
            in.readNull();
            this.createdBy = null;
          } else {
            this.createdBy = in.readString(this.createdBy instanceof Utf8 ? (Utf8)this.createdBy : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}
