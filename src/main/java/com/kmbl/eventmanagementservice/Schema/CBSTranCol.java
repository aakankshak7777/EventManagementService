/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kmbl.eventmanagementservice.Schema;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class CBSTranCol extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7177988641148001433L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CBSTranCol\",\"namespace\":\"com.kmbl.eventmanagementservice.Schema\",\"fields\":[{\"name\":\"ID\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"AMOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CBSRC\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CREDITACCOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CUSTOMERID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"DEBITACCOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"MSGID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"REVERSAL\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"REVERSALSTATUS\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"RRN\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"STAN\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"TXN_DATE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"TXNID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"TYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"UPIRC\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ORGTXNID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"REMARKS\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CUSTOMERACCOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"NAME\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYEEVPA\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYERVPA\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"SEQNO\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"COMMISSIONAMOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CUSTOMERREFID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"TRANTYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CREDITBANKNAME\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"DEBITBANKNAME\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"OTHERSACCOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CHANNEL\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"APPID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PREAPPROVED\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"BENEFICIARYNAME\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"OTHERMOBILENO\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"REMITTERNAME\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"APPROVALNUM\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"MCCCODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"SERVERIP\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CBSRESP_DATE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"INITMODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PURPOSECODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CREDITACCOUNTTYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CREDITIFSC\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"DEBITACCOUNTTYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"DEBITIFSC\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ORDERID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYEECODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYERCODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"SUBTYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"REMITTORMOBILENUMBER\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYEEIMEI\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYERIMEI\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"GMTDATE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYEEACCOUNTTYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYERACCOUNTTYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYERCONSENTNAME\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYERCONSENTTYPE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"PAYERCONSENTVALUE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ADJCODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ADJFLAG\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CREATE_DATE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CREDITACCTNARRATION_103\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"DE46\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"DEBITACCTNARRATION_102\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"GST\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"LOANNUMBER\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"LOCALTIME\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"NARRATION_125\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"P2PTXNCHARGES\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"SCHEMECODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"TXNAMOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"BATCH_ID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"BASEAMOUNT\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"BASECURR\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CONCODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"FX\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"MKUP\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ADDITIONAL4\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"D12\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ADDITIONAL1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ADDITIONAL2\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ADDITIONAL3\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ADDITIONAL5\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"CBS_ROUTING\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CBSTranCol> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CBSTranCol> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CBSTranCol> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CBSTranCol> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CBSTranCol> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CBSTranCol to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CBSTranCol from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CBSTranCol instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CBSTranCol fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private Double ID;
  private CharSequence AMOUNT;
  private CharSequence CBSRC;
  private CharSequence CREDITACCOUNT;
  private CharSequence CUSTOMERID;
  private CharSequence DEBITACCOUNT;
  private CharSequence MSGID;
  private Long REVERSAL;
  private CharSequence REVERSALSTATUS;
  private CharSequence RRN;
  private CharSequence STAN;
  private CharSequence TXN_DATE;
  private CharSequence TXNID;
  private CharSequence TYPE;
  private CharSequence UPIRC;
  private CharSequence ORGTXNID;
  private CharSequence REMARKS;
  private CharSequence CUSTOMERACCOUNT;
  private CharSequence NAME;
  private CharSequence PAYEEVPA;
  private CharSequence PAYERVPA;
  private CharSequence SEQNO;
  private CharSequence COMMISSIONAMOUNT;
  private CharSequence CUSTOMERREFID;
  private CharSequence TRANTYPE;
  private CharSequence CREDITBANKNAME;
  private CharSequence DEBITBANKNAME;
  private CharSequence OTHERSACCOUNT;
  private CharSequence CHANNEL;
  private CharSequence APPID;
  private CharSequence PREAPPROVED;
  private CharSequence BENEFICIARYNAME;
  private CharSequence OTHERMOBILENO;
  private CharSequence REMITTERNAME;
  private CharSequence APPROVALNUM;
  private CharSequence MCCCODE;
  private CharSequence SERVERIP;
  private CharSequence CBSRESP_DATE;
  private CharSequence INITMODE;
  private CharSequence PURPOSECODE;
  private CharSequence CREDITACCOUNTTYPE;
  private CharSequence CREDITIFSC;
  private CharSequence DEBITACCOUNTTYPE;
  private CharSequence DEBITIFSC;
  private CharSequence ORDERID;
  private CharSequence PAYEECODE;
  private CharSequence PAYERCODE;
  private CharSequence SUBTYPE;
  private CharSequence REMITTORMOBILENUMBER;
  private CharSequence PAYEEIMEI;
  private CharSequence PAYERIMEI;
  private CharSequence GMTDATE;
  private CharSequence PAYEEACCOUNTTYPE;
  private CharSequence PAYERACCOUNTTYPE;
  private CharSequence PAYERCONSENTNAME;
  private CharSequence PAYERCONSENTTYPE;
  private CharSequence PAYERCONSENTVALUE;
  private CharSequence ADJCODE;
  private CharSequence ADJFLAG;
  private CharSequence CREATE_DATE;
  private CharSequence CREDITACCTNARRATION_103;
  private CharSequence DE46;
  private CharSequence DEBITACCTNARRATION_102;
  private CharSequence GST;
  private CharSequence LOANNUMBER;
  private CharSequence LOCALTIME;
  private CharSequence NARRATION_125;
  private CharSequence P2PTXNCHARGES;
  private CharSequence SCHEMECODE;
  private CharSequence TXNAMOUNT;
  private CharSequence BATCH_ID;
  private CharSequence BASEAMOUNT;
  private CharSequence BASECURR;
  private CharSequence CONCODE;
  private CharSequence FX;
  private CharSequence MKUP;
  private CharSequence ADDITIONAL4;
  private CharSequence D12;
  private CharSequence ADDITIONAL1;
  private CharSequence ADDITIONAL2;
  private CharSequence ADDITIONAL3;
  private CharSequence ADDITIONAL5;
  private CharSequence CBS_ROUTING;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CBSTranCol() {}

  /**
   * All-args constructor.
   * @param ID The new value for ID
   * @param AMOUNT The new value for AMOUNT
   * @param CBSRC The new value for CBSRC
   * @param CREDITACCOUNT The new value for CREDITACCOUNT
   * @param CUSTOMERID The new value for CUSTOMERID
   * @param DEBITACCOUNT The new value for DEBITACCOUNT
   * @param MSGID The new value for MSGID
   * @param REVERSAL The new value for REVERSAL
   * @param REVERSALSTATUS The new value for REVERSALSTATUS
   * @param RRN The new value for RRN
   * @param STAN The new value for STAN
   * @param TXN_DATE The new value for TXN_DATE
   * @param TXNID The new value for TXNID
   * @param TYPE The new value for TYPE
   * @param UPIRC The new value for UPIRC
   * @param ORGTXNID The new value for ORGTXNID
   * @param REMARKS The new value for REMARKS
   * @param CUSTOMERACCOUNT The new value for CUSTOMERACCOUNT
   * @param NAME The new value for NAME
   * @param PAYEEVPA The new value for PAYEEVPA
   * @param PAYERVPA The new value for PAYERVPA
   * @param SEQNO The new value for SEQNO
   * @param COMMISSIONAMOUNT The new value for COMMISSIONAMOUNT
   * @param CUSTOMERREFID The new value for CUSTOMERREFID
   * @param TRANTYPE The new value for TRANTYPE
   * @param CREDITBANKNAME The new value for CREDITBANKNAME
   * @param DEBITBANKNAME The new value for DEBITBANKNAME
   * @param OTHERSACCOUNT The new value for OTHERSACCOUNT
   * @param CHANNEL The new value for CHANNEL
   * @param APPID The new value for APPID
   * @param PREAPPROVED The new value for PREAPPROVED
   * @param BENEFICIARYNAME The new value for BENEFICIARYNAME
   * @param OTHERMOBILENO The new value for OTHERMOBILENO
   * @param REMITTERNAME The new value for REMITTERNAME
   * @param APPROVALNUM The new value for APPROVALNUM
   * @param MCCCODE The new value for MCCCODE
   * @param SERVERIP The new value for SERVERIP
   * @param CBSRESP_DATE The new value for CBSRESP_DATE
   * @param INITMODE The new value for INITMODE
   * @param PURPOSECODE The new value for PURPOSECODE
   * @param CREDITACCOUNTTYPE The new value for CREDITACCOUNTTYPE
   * @param CREDITIFSC The new value for CREDITIFSC
   * @param DEBITACCOUNTTYPE The new value for DEBITACCOUNTTYPE
   * @param DEBITIFSC The new value for DEBITIFSC
   * @param ORDERID The new value for ORDERID
   * @param PAYEECODE The new value for PAYEECODE
   * @param PAYERCODE The new value for PAYERCODE
   * @param SUBTYPE The new value for SUBTYPE
   * @param REMITTORMOBILENUMBER The new value for REMITTORMOBILENUMBER
   * @param PAYEEIMEI The new value for PAYEEIMEI
   * @param PAYERIMEI The new value for PAYERIMEI
   * @param GMTDATE The new value for GMTDATE
   * @param PAYEEACCOUNTTYPE The new value for PAYEEACCOUNTTYPE
   * @param PAYERACCOUNTTYPE The new value for PAYERACCOUNTTYPE
   * @param PAYERCONSENTNAME The new value for PAYERCONSENTNAME
   * @param PAYERCONSENTTYPE The new value for PAYERCONSENTTYPE
   * @param PAYERCONSENTVALUE The new value for PAYERCONSENTVALUE
   * @param ADJCODE The new value for ADJCODE
   * @param ADJFLAG The new value for ADJFLAG
   * @param CREATE_DATE The new value for CREATE_DATE
   * @param CREDITACCTNARRATION_103 The new value for CREDITACCTNARRATION_103
   * @param DE46 The new value for DE46
   * @param DEBITACCTNARRATION_102 The new value for DEBITACCTNARRATION_102
   * @param GST The new value for GST
   * @param LOANNUMBER The new value for LOANNUMBER
   * @param LOCALTIME The new value for LOCALTIME
   * @param NARRATION_125 The new value for NARRATION_125
   * @param P2PTXNCHARGES The new value for P2PTXNCHARGES
   * @param SCHEMECODE The new value for SCHEMECODE
   * @param TXNAMOUNT The new value for TXNAMOUNT
   * @param BATCH_ID The new value for BATCH_ID
   * @param BASEAMOUNT The new value for BASEAMOUNT
   * @param BASECURR The new value for BASECURR
   * @param CONCODE The new value for CONCODE
   * @param FX The new value for FX
   * @param MKUP The new value for MKUP
   * @param ADDITIONAL4 The new value for ADDITIONAL4
   * @param D12 The new value for D12
   * @param ADDITIONAL1 The new value for ADDITIONAL1
   * @param ADDITIONAL2 The new value for ADDITIONAL2
   * @param ADDITIONAL3 The new value for ADDITIONAL3
   * @param ADDITIONAL5 The new value for ADDITIONAL5
   * @param CBS_ROUTING The new value for CBS_ROUTING
   */
  public CBSTranCol(Double ID, CharSequence AMOUNT, CharSequence CBSRC, CharSequence CREDITACCOUNT, CharSequence CUSTOMERID, CharSequence DEBITACCOUNT, CharSequence MSGID, Long REVERSAL, CharSequence REVERSALSTATUS, CharSequence RRN, CharSequence STAN, CharSequence TXN_DATE, CharSequence TXNID, CharSequence TYPE, CharSequence UPIRC, CharSequence ORGTXNID, CharSequence REMARKS, CharSequence CUSTOMERACCOUNT, CharSequence NAME, CharSequence PAYEEVPA, CharSequence PAYERVPA, CharSequence SEQNO, CharSequence COMMISSIONAMOUNT, CharSequence CUSTOMERREFID, CharSequence TRANTYPE, CharSequence CREDITBANKNAME, CharSequence DEBITBANKNAME, CharSequence OTHERSACCOUNT, CharSequence CHANNEL, CharSequence APPID, CharSequence PREAPPROVED, CharSequence BENEFICIARYNAME, CharSequence OTHERMOBILENO, CharSequence REMITTERNAME, CharSequence APPROVALNUM, CharSequence MCCCODE, CharSequence SERVERIP, CharSequence CBSRESP_DATE, CharSequence INITMODE, CharSequence PURPOSECODE, CharSequence CREDITACCOUNTTYPE, CharSequence CREDITIFSC, CharSequence DEBITACCOUNTTYPE, CharSequence DEBITIFSC, CharSequence ORDERID, CharSequence PAYEECODE, CharSequence PAYERCODE, CharSequence SUBTYPE, CharSequence REMITTORMOBILENUMBER, CharSequence PAYEEIMEI, CharSequence PAYERIMEI, CharSequence GMTDATE, CharSequence PAYEEACCOUNTTYPE, CharSequence PAYERACCOUNTTYPE, CharSequence PAYERCONSENTNAME, CharSequence PAYERCONSENTTYPE, CharSequence PAYERCONSENTVALUE, CharSequence ADJCODE, CharSequence ADJFLAG, CharSequence CREATE_DATE, CharSequence CREDITACCTNARRATION_103, CharSequence DE46, CharSequence DEBITACCTNARRATION_102, CharSequence GST, CharSequence LOANNUMBER, CharSequence LOCALTIME, CharSequence NARRATION_125, CharSequence P2PTXNCHARGES, CharSequence SCHEMECODE, CharSequence TXNAMOUNT, CharSequence BATCH_ID, CharSequence BASEAMOUNT, CharSequence BASECURR, CharSequence CONCODE, CharSequence FX, CharSequence MKUP, CharSequence ADDITIONAL4, CharSequence D12, CharSequence ADDITIONAL1, CharSequence ADDITIONAL2, CharSequence ADDITIONAL3, CharSequence ADDITIONAL5, CharSequence CBS_ROUTING) {
    this.ID = ID;
    this.AMOUNT = AMOUNT;
    this.CBSRC = CBSRC;
    this.CREDITACCOUNT = CREDITACCOUNT;
    this.CUSTOMERID = CUSTOMERID;
    this.DEBITACCOUNT = DEBITACCOUNT;
    this.MSGID = MSGID;
    this.REVERSAL = REVERSAL;
    this.REVERSALSTATUS = REVERSALSTATUS;
    this.RRN = RRN;
    this.STAN = STAN;
    this.TXN_DATE = TXN_DATE;
    this.TXNID = TXNID;
    this.TYPE = TYPE;
    this.UPIRC = UPIRC;
    this.ORGTXNID = ORGTXNID;
    this.REMARKS = REMARKS;
    this.CUSTOMERACCOUNT = CUSTOMERACCOUNT;
    this.NAME = NAME;
    this.PAYEEVPA = PAYEEVPA;
    this.PAYERVPA = PAYERVPA;
    this.SEQNO = SEQNO;
    this.COMMISSIONAMOUNT = COMMISSIONAMOUNT;
    this.CUSTOMERREFID = CUSTOMERREFID;
    this.TRANTYPE = TRANTYPE;
    this.CREDITBANKNAME = CREDITBANKNAME;
    this.DEBITBANKNAME = DEBITBANKNAME;
    this.OTHERSACCOUNT = OTHERSACCOUNT;
    this.CHANNEL = CHANNEL;
    this.APPID = APPID;
    this.PREAPPROVED = PREAPPROVED;
    this.BENEFICIARYNAME = BENEFICIARYNAME;
    this.OTHERMOBILENO = OTHERMOBILENO;
    this.REMITTERNAME = REMITTERNAME;
    this.APPROVALNUM = APPROVALNUM;
    this.MCCCODE = MCCCODE;
    this.SERVERIP = SERVERIP;
    this.CBSRESP_DATE = CBSRESP_DATE;
    this.INITMODE = INITMODE;
    this.PURPOSECODE = PURPOSECODE;
    this.CREDITACCOUNTTYPE = CREDITACCOUNTTYPE;
    this.CREDITIFSC = CREDITIFSC;
    this.DEBITACCOUNTTYPE = DEBITACCOUNTTYPE;
    this.DEBITIFSC = DEBITIFSC;
    this.ORDERID = ORDERID;
    this.PAYEECODE = PAYEECODE;
    this.PAYERCODE = PAYERCODE;
    this.SUBTYPE = SUBTYPE;
    this.REMITTORMOBILENUMBER = REMITTORMOBILENUMBER;
    this.PAYEEIMEI = PAYEEIMEI;
    this.PAYERIMEI = PAYERIMEI;
    this.GMTDATE = GMTDATE;
    this.PAYEEACCOUNTTYPE = PAYEEACCOUNTTYPE;
    this.PAYERACCOUNTTYPE = PAYERACCOUNTTYPE;
    this.PAYERCONSENTNAME = PAYERCONSENTNAME;
    this.PAYERCONSENTTYPE = PAYERCONSENTTYPE;
    this.PAYERCONSENTVALUE = PAYERCONSENTVALUE;
    this.ADJCODE = ADJCODE;
    this.ADJFLAG = ADJFLAG;
    this.CREATE_DATE = CREATE_DATE;
    this.CREDITACCTNARRATION_103 = CREDITACCTNARRATION_103;
    this.DE46 = DE46;
    this.DEBITACCTNARRATION_102 = DEBITACCTNARRATION_102;
    this.GST = GST;
    this.LOANNUMBER = LOANNUMBER;
    this.LOCALTIME = LOCALTIME;
    this.NARRATION_125 = NARRATION_125;
    this.P2PTXNCHARGES = P2PTXNCHARGES;
    this.SCHEMECODE = SCHEMECODE;
    this.TXNAMOUNT = TXNAMOUNT;
    this.BATCH_ID = BATCH_ID;
    this.BASEAMOUNT = BASEAMOUNT;
    this.BASECURR = BASECURR;
    this.CONCODE = CONCODE;
    this.FX = FX;
    this.MKUP = MKUP;
    this.ADDITIONAL4 = ADDITIONAL4;
    this.D12 = D12;
    this.ADDITIONAL1 = ADDITIONAL1;
    this.ADDITIONAL2 = ADDITIONAL2;
    this.ADDITIONAL3 = ADDITIONAL3;
    this.ADDITIONAL5 = ADDITIONAL5;
    this.CBS_ROUTING = CBS_ROUTING;
  }

  @Override
  public SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return AMOUNT;
    case 2: return CBSRC;
    case 3: return CREDITACCOUNT;
    case 4: return CUSTOMERID;
    case 5: return DEBITACCOUNT;
    case 6: return MSGID;
    case 7: return REVERSAL;
    case 8: return REVERSALSTATUS;
    case 9: return RRN;
    case 10: return STAN;
    case 11: return TXN_DATE;
    case 12: return TXNID;
    case 13: return TYPE;
    case 14: return UPIRC;
    case 15: return ORGTXNID;
    case 16: return REMARKS;
    case 17: return CUSTOMERACCOUNT;
    case 18: return NAME;
    case 19: return PAYEEVPA;
    case 20: return PAYERVPA;
    case 21: return SEQNO;
    case 22: return COMMISSIONAMOUNT;
    case 23: return CUSTOMERREFID;
    case 24: return TRANTYPE;
    case 25: return CREDITBANKNAME;
    case 26: return DEBITBANKNAME;
    case 27: return OTHERSACCOUNT;
    case 28: return CHANNEL;
    case 29: return APPID;
    case 30: return PREAPPROVED;
    case 31: return BENEFICIARYNAME;
    case 32: return OTHERMOBILENO;
    case 33: return REMITTERNAME;
    case 34: return APPROVALNUM;
    case 35: return MCCCODE;
    case 36: return SERVERIP;
    case 37: return CBSRESP_DATE;
    case 38: return INITMODE;
    case 39: return PURPOSECODE;
    case 40: return CREDITACCOUNTTYPE;
    case 41: return CREDITIFSC;
    case 42: return DEBITACCOUNTTYPE;
    case 43: return DEBITIFSC;
    case 44: return ORDERID;
    case 45: return PAYEECODE;
    case 46: return PAYERCODE;
    case 47: return SUBTYPE;
    case 48: return REMITTORMOBILENUMBER;
    case 49: return PAYEEIMEI;
    case 50: return PAYERIMEI;
    case 51: return GMTDATE;
    case 52: return PAYEEACCOUNTTYPE;
    case 53: return PAYERACCOUNTTYPE;
    case 54: return PAYERCONSENTNAME;
    case 55: return PAYERCONSENTTYPE;
    case 56: return PAYERCONSENTVALUE;
    case 57: return ADJCODE;
    case 58: return ADJFLAG;
    case 59: return CREATE_DATE;
    case 60: return CREDITACCTNARRATION_103;
    case 61: return DE46;
    case 62: return DEBITACCTNARRATION_102;
    case 63: return GST;
    case 64: return LOANNUMBER;
    case 65: return LOCALTIME;
    case 66: return NARRATION_125;
    case 67: return P2PTXNCHARGES;
    case 68: return SCHEMECODE;
    case 69: return TXNAMOUNT;
    case 70: return BATCH_ID;
    case 71: return BASEAMOUNT;
    case 72: return BASECURR;
    case 73: return CONCODE;
    case 74: return FX;
    case 75: return MKUP;
    case 76: return ADDITIONAL4;
    case 77: return D12;
    case 78: return ADDITIONAL1;
    case 79: return ADDITIONAL2;
    case 80: return ADDITIONAL3;
    case 81: return ADDITIONAL5;
    case 82: return CBS_ROUTING;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: ID = (Double)value$; break;
    case 1: AMOUNT = (CharSequence)value$; break;
    case 2: CBSRC = (CharSequence)value$; break;
    case 3: CREDITACCOUNT = (CharSequence)value$; break;
    case 4: CUSTOMERID = (CharSequence)value$; break;
    case 5: DEBITACCOUNT = (CharSequence)value$; break;
    case 6: MSGID = (CharSequence)value$; break;
    case 7: REVERSAL = (Long)value$; break;
    case 8: REVERSALSTATUS = (CharSequence)value$; break;
    case 9: RRN = (CharSequence)value$; break;
    case 10: STAN = (CharSequence)value$; break;
    case 11: TXN_DATE = (CharSequence)value$; break;
    case 12: TXNID = (CharSequence)value$; break;
    case 13: TYPE = (CharSequence)value$; break;
    case 14: UPIRC = (CharSequence)value$; break;
    case 15: ORGTXNID = (CharSequence)value$; break;
    case 16: REMARKS = (CharSequence)value$; break;
    case 17: CUSTOMERACCOUNT = (CharSequence)value$; break;
    case 18: NAME = (CharSequence)value$; break;
    case 19: PAYEEVPA = (CharSequence)value$; break;
    case 20: PAYERVPA = (CharSequence)value$; break;
    case 21: SEQNO = (CharSequence)value$; break;
    case 22: COMMISSIONAMOUNT = (CharSequence)value$; break;
    case 23: CUSTOMERREFID = (CharSequence)value$; break;
    case 24: TRANTYPE = (CharSequence)value$; break;
    case 25: CREDITBANKNAME = (CharSequence)value$; break;
    case 26: DEBITBANKNAME = (CharSequence)value$; break;
    case 27: OTHERSACCOUNT = (CharSequence)value$; break;
    case 28: CHANNEL = (CharSequence)value$; break;
    case 29: APPID = (CharSequence)value$; break;
    case 30: PREAPPROVED = (CharSequence)value$; break;
    case 31: BENEFICIARYNAME = (CharSequence)value$; break;
    case 32: OTHERMOBILENO = (CharSequence)value$; break;
    case 33: REMITTERNAME = (CharSequence)value$; break;
    case 34: APPROVALNUM = (CharSequence)value$; break;
    case 35: MCCCODE = (CharSequence)value$; break;
    case 36: SERVERIP = (CharSequence)value$; break;
    case 37: CBSRESP_DATE = (CharSequence)value$; break;
    case 38: INITMODE = (CharSequence)value$; break;
    case 39: PURPOSECODE = (CharSequence)value$; break;
    case 40: CREDITACCOUNTTYPE = (CharSequence)value$; break;
    case 41: CREDITIFSC = (CharSequence)value$; break;
    case 42: DEBITACCOUNTTYPE = (CharSequence)value$; break;
    case 43: DEBITIFSC = (CharSequence)value$; break;
    case 44: ORDERID = (CharSequence)value$; break;
    case 45: PAYEECODE = (CharSequence)value$; break;
    case 46: PAYERCODE = (CharSequence)value$; break;
    case 47: SUBTYPE = (CharSequence)value$; break;
    case 48: REMITTORMOBILENUMBER = (CharSequence)value$; break;
    case 49: PAYEEIMEI = (CharSequence)value$; break;
    case 50: PAYERIMEI = (CharSequence)value$; break;
    case 51: GMTDATE = (CharSequence)value$; break;
    case 52: PAYEEACCOUNTTYPE = (CharSequence)value$; break;
    case 53: PAYERACCOUNTTYPE = (CharSequence)value$; break;
    case 54: PAYERCONSENTNAME = (CharSequence)value$; break;
    case 55: PAYERCONSENTTYPE = (CharSequence)value$; break;
    case 56: PAYERCONSENTVALUE = (CharSequence)value$; break;
    case 57: ADJCODE = (CharSequence)value$; break;
    case 58: ADJFLAG = (CharSequence)value$; break;
    case 59: CREATE_DATE = (CharSequence)value$; break;
    case 60: CREDITACCTNARRATION_103 = (CharSequence)value$; break;
    case 61: DE46 = (CharSequence)value$; break;
    case 62: DEBITACCTNARRATION_102 = (CharSequence)value$; break;
    case 63: GST = (CharSequence)value$; break;
    case 64: LOANNUMBER = (CharSequence)value$; break;
    case 65: LOCALTIME = (CharSequence)value$; break;
    case 66: NARRATION_125 = (CharSequence)value$; break;
    case 67: P2PTXNCHARGES = (CharSequence)value$; break;
    case 68: SCHEMECODE = (CharSequence)value$; break;
    case 69: TXNAMOUNT = (CharSequence)value$; break;
    case 70: BATCH_ID = (CharSequence)value$; break;
    case 71: BASEAMOUNT = (CharSequence)value$; break;
    case 72: BASECURR = (CharSequence)value$; break;
    case 73: CONCODE = (CharSequence)value$; break;
    case 74: FX = (CharSequence)value$; break;
    case 75: MKUP = (CharSequence)value$; break;
    case 76: ADDITIONAL4 = (CharSequence)value$; break;
    case 77: D12 = (CharSequence)value$; break;
    case 78: ADDITIONAL1 = (CharSequence)value$; break;
    case 79: ADDITIONAL2 = (CharSequence)value$; break;
    case 80: ADDITIONAL3 = (CharSequence)value$; break;
    case 81: ADDITIONAL5 = (CharSequence)value$; break;
    case 82: CBS_ROUTING = (CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ID' field.
   * @return The value of the 'ID' field.
   */
  public Double getID() {
    return ID;
  }


  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(Double value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'AMOUNT' field.
   * @return The value of the 'AMOUNT' field.
   */
  public CharSequence getAMOUNT() {
    return AMOUNT;
  }


  /**
   * Sets the value of the 'AMOUNT' field.
   * @param value the value to set.
   */
  public void setAMOUNT(CharSequence value) {
    this.AMOUNT = value;
  }

  /**
   * Gets the value of the 'CBSRC' field.
   * @return The value of the 'CBSRC' field.
   */
  public CharSequence getCBSRC() {
    return CBSRC;
  }


  /**
   * Sets the value of the 'CBSRC' field.
   * @param value the value to set.
   */
  public void setCBSRC(CharSequence value) {
    this.CBSRC = value;
  }

  /**
   * Gets the value of the 'CREDITACCOUNT' field.
   * @return The value of the 'CREDITACCOUNT' field.
   */
  public CharSequence getCREDITACCOUNT() {
    return CREDITACCOUNT;
  }


  /**
   * Sets the value of the 'CREDITACCOUNT' field.
   * @param value the value to set.
   */
  public void setCREDITACCOUNT(CharSequence value) {
    this.CREDITACCOUNT = value;
  }

  /**
   * Gets the value of the 'CUSTOMERID' field.
   * @return The value of the 'CUSTOMERID' field.
   */
  public CharSequence getCUSTOMERID() {
    return CUSTOMERID;
  }


  /**
   * Sets the value of the 'CUSTOMERID' field.
   * @param value the value to set.
   */
  public void setCUSTOMERID(CharSequence value) {
    this.CUSTOMERID = value;
  }

  /**
   * Gets the value of the 'DEBITACCOUNT' field.
   * @return The value of the 'DEBITACCOUNT' field.
   */
  public CharSequence getDEBITACCOUNT() {
    return DEBITACCOUNT;
  }


  /**
   * Sets the value of the 'DEBITACCOUNT' field.
   * @param value the value to set.
   */
  public void setDEBITACCOUNT(CharSequence value) {
    this.DEBITACCOUNT = value;
  }

  /**
   * Gets the value of the 'MSGID' field.
   * @return The value of the 'MSGID' field.
   */
  public CharSequence getMSGID() {
    return MSGID;
  }


  /**
   * Sets the value of the 'MSGID' field.
   * @param value the value to set.
   */
  public void setMSGID(CharSequence value) {
    this.MSGID = value;
  }

  /**
   * Gets the value of the 'REVERSAL' field.
   * @return The value of the 'REVERSAL' field.
   */
  public Long getREVERSAL() {
    return REVERSAL;
  }


  /**
   * Sets the value of the 'REVERSAL' field.
   * @param value the value to set.
   */
  public void setREVERSAL(Long value) {
    this.REVERSAL = value;
  }

  /**
   * Gets the value of the 'REVERSALSTATUS' field.
   * @return The value of the 'REVERSALSTATUS' field.
   */
  public CharSequence getREVERSALSTATUS() {
    return REVERSALSTATUS;
  }


  /**
   * Sets the value of the 'REVERSALSTATUS' field.
   * @param value the value to set.
   */
  public void setREVERSALSTATUS(CharSequence value) {
    this.REVERSALSTATUS = value;
  }

  /**
   * Gets the value of the 'RRN' field.
   * @return The value of the 'RRN' field.
   */
  public CharSequence getRRN() {
    return RRN;
  }


  /**
   * Sets the value of the 'RRN' field.
   * @param value the value to set.
   */
  public void setRRN(CharSequence value) {
    this.RRN = value;
  }

  /**
   * Gets the value of the 'STAN' field.
   * @return The value of the 'STAN' field.
   */
  public CharSequence getSTAN() {
    return STAN;
  }


  /**
   * Sets the value of the 'STAN' field.
   * @param value the value to set.
   */
  public void setSTAN(CharSequence value) {
    this.STAN = value;
  }

  /**
   * Gets the value of the 'TXN_DATE' field.
   * @return The value of the 'TXN_DATE' field.
   */
  public CharSequence getTXNDATE() {
    return TXN_DATE;
  }


  /**
   * Sets the value of the 'TXN_DATE' field.
   * @param value the value to set.
   */
  public void setTXNDATE(CharSequence value) {
    this.TXN_DATE = value;
  }

  /**
   * Gets the value of the 'TXNID' field.
   * @return The value of the 'TXNID' field.
   */
  public CharSequence getTXNID() {
    return TXNID;
  }


  /**
   * Sets the value of the 'TXNID' field.
   * @param value the value to set.
   */
  public void setTXNID(CharSequence value) {
    this.TXNID = value;
  }

  /**
   * Gets the value of the 'TYPE' field.
   * @return The value of the 'TYPE' field.
   */
  public CharSequence getTYPE() {
    return TYPE;
  }


  /**
   * Sets the value of the 'TYPE' field.
   * @param value the value to set.
   */
  public void setTYPE(CharSequence value) {
    this.TYPE = value;
  }

  /**
   * Gets the value of the 'UPIRC' field.
   * @return The value of the 'UPIRC' field.
   */
  public CharSequence getUPIRC() {
    return UPIRC;
  }


  /**
   * Sets the value of the 'UPIRC' field.
   * @param value the value to set.
   */
  public void setUPIRC(CharSequence value) {
    this.UPIRC = value;
  }

  /**
   * Gets the value of the 'ORGTXNID' field.
   * @return The value of the 'ORGTXNID' field.
   */
  public CharSequence getORGTXNID() {
    return ORGTXNID;
  }


  /**
   * Sets the value of the 'ORGTXNID' field.
   * @param value the value to set.
   */
  public void setORGTXNID(CharSequence value) {
    this.ORGTXNID = value;
  }

  /**
   * Gets the value of the 'REMARKS' field.
   * @return The value of the 'REMARKS' field.
   */
  public CharSequence getREMARKS() {
    return REMARKS;
  }


  /**
   * Sets the value of the 'REMARKS' field.
   * @param value the value to set.
   */
  public void setREMARKS(CharSequence value) {
    this.REMARKS = value;
  }

  /**
   * Gets the value of the 'CUSTOMERACCOUNT' field.
   * @return The value of the 'CUSTOMERACCOUNT' field.
   */
  public CharSequence getCUSTOMERACCOUNT() {
    return CUSTOMERACCOUNT;
  }


  /**
   * Sets the value of the 'CUSTOMERACCOUNT' field.
   * @param value the value to set.
   */
  public void setCUSTOMERACCOUNT(CharSequence value) {
    this.CUSTOMERACCOUNT = value;
  }

  /**
   * Gets the value of the 'NAME' field.
   * @return The value of the 'NAME' field.
   */
  public CharSequence getNAME() {
    return NAME;
  }


  /**
   * Sets the value of the 'NAME' field.
   * @param value the value to set.
   */
  public void setNAME(CharSequence value) {
    this.NAME = value;
  }

  /**
   * Gets the value of the 'PAYEEVPA' field.
   * @return The value of the 'PAYEEVPA' field.
   */
  public CharSequence getPAYEEVPA() {
    return PAYEEVPA;
  }


  /**
   * Sets the value of the 'PAYEEVPA' field.
   * @param value the value to set.
   */
  public void setPAYEEVPA(CharSequence value) {
    this.PAYEEVPA = value;
  }

  /**
   * Gets the value of the 'PAYERVPA' field.
   * @return The value of the 'PAYERVPA' field.
   */
  public CharSequence getPAYERVPA() {
    return PAYERVPA;
  }


  /**
   * Sets the value of the 'PAYERVPA' field.
   * @param value the value to set.
   */
  public void setPAYERVPA(CharSequence value) {
    this.PAYERVPA = value;
  }

  /**
   * Gets the value of the 'SEQNO' field.
   * @return The value of the 'SEQNO' field.
   */
  public CharSequence getSEQNO() {
    return SEQNO;
  }


  /**
   * Sets the value of the 'SEQNO' field.
   * @param value the value to set.
   */
  public void setSEQNO(CharSequence value) {
    this.SEQNO = value;
  }

  /**
   * Gets the value of the 'COMMISSIONAMOUNT' field.
   * @return The value of the 'COMMISSIONAMOUNT' field.
   */
  public CharSequence getCOMMISSIONAMOUNT() {
    return COMMISSIONAMOUNT;
  }


  /**
   * Sets the value of the 'COMMISSIONAMOUNT' field.
   * @param value the value to set.
   */
  public void setCOMMISSIONAMOUNT(CharSequence value) {
    this.COMMISSIONAMOUNT = value;
  }

  /**
   * Gets the value of the 'CUSTOMERREFID' field.
   * @return The value of the 'CUSTOMERREFID' field.
   */
  public CharSequence getCUSTOMERREFID() {
    return CUSTOMERREFID;
  }


  /**
   * Sets the value of the 'CUSTOMERREFID' field.
   * @param value the value to set.
   */
  public void setCUSTOMERREFID(CharSequence value) {
    this.CUSTOMERREFID = value;
  }

  /**
   * Gets the value of the 'TRANTYPE' field.
   * @return The value of the 'TRANTYPE' field.
   */
  public CharSequence getTRANTYPE() {
    return TRANTYPE;
  }


  /**
   * Sets the value of the 'TRANTYPE' field.
   * @param value the value to set.
   */
  public void setTRANTYPE(CharSequence value) {
    this.TRANTYPE = value;
  }

  /**
   * Gets the value of the 'CREDITBANKNAME' field.
   * @return The value of the 'CREDITBANKNAME' field.
   */
  public CharSequence getCREDITBANKNAME() {
    return CREDITBANKNAME;
  }


  /**
   * Sets the value of the 'CREDITBANKNAME' field.
   * @param value the value to set.
   */
  public void setCREDITBANKNAME(CharSequence value) {
    this.CREDITBANKNAME = value;
  }

  /**
   * Gets the value of the 'DEBITBANKNAME' field.
   * @return The value of the 'DEBITBANKNAME' field.
   */
  public CharSequence getDEBITBANKNAME() {
    return DEBITBANKNAME;
  }


  /**
   * Sets the value of the 'DEBITBANKNAME' field.
   * @param value the value to set.
   */
  public void setDEBITBANKNAME(CharSequence value) {
    this.DEBITBANKNAME = value;
  }

  /**
   * Gets the value of the 'OTHERSACCOUNT' field.
   * @return The value of the 'OTHERSACCOUNT' field.
   */
  public CharSequence getOTHERSACCOUNT() {
    return OTHERSACCOUNT;
  }


  /**
   * Sets the value of the 'OTHERSACCOUNT' field.
   * @param value the value to set.
   */
  public void setOTHERSACCOUNT(CharSequence value) {
    this.OTHERSACCOUNT = value;
  }

  /**
   * Gets the value of the 'CHANNEL' field.
   * @return The value of the 'CHANNEL' field.
   */
  public CharSequence getCHANNEL() {
    return CHANNEL;
  }


  /**
   * Sets the value of the 'CHANNEL' field.
   * @param value the value to set.
   */
  public void setCHANNEL(CharSequence value) {
    this.CHANNEL = value;
  }

  /**
   * Gets the value of the 'APPID' field.
   * @return The value of the 'APPID' field.
   */
  public CharSequence getAPPID() {
    return APPID;
  }


  /**
   * Sets the value of the 'APPID' field.
   * @param value the value to set.
   */
  public void setAPPID(CharSequence value) {
    this.APPID = value;
  }

  /**
   * Gets the value of the 'PREAPPROVED' field.
   * @return The value of the 'PREAPPROVED' field.
   */
  public CharSequence getPREAPPROVED() {
    return PREAPPROVED;
  }


  /**
   * Sets the value of the 'PREAPPROVED' field.
   * @param value the value to set.
   */
  public void setPREAPPROVED(CharSequence value) {
    this.PREAPPROVED = value;
  }

  /**
   * Gets the value of the 'BENEFICIARYNAME' field.
   * @return The value of the 'BENEFICIARYNAME' field.
   */
  public CharSequence getBENEFICIARYNAME() {
    return BENEFICIARYNAME;
  }


  /**
   * Sets the value of the 'BENEFICIARYNAME' field.
   * @param value the value to set.
   */
  public void setBENEFICIARYNAME(CharSequence value) {
    this.BENEFICIARYNAME = value;
  }

  /**
   * Gets the value of the 'OTHERMOBILENO' field.
   * @return The value of the 'OTHERMOBILENO' field.
   */
  public CharSequence getOTHERMOBILENO() {
    return OTHERMOBILENO;
  }


  /**
   * Sets the value of the 'OTHERMOBILENO' field.
   * @param value the value to set.
   */
  public void setOTHERMOBILENO(CharSequence value) {
    this.OTHERMOBILENO = value;
  }

  /**
   * Gets the value of the 'REMITTERNAME' field.
   * @return The value of the 'REMITTERNAME' field.
   */
  public CharSequence getREMITTERNAME() {
    return REMITTERNAME;
  }


  /**
   * Sets the value of the 'REMITTERNAME' field.
   * @param value the value to set.
   */
  public void setREMITTERNAME(CharSequence value) {
    this.REMITTERNAME = value;
  }

  /**
   * Gets the value of the 'APPROVALNUM' field.
   * @return The value of the 'APPROVALNUM' field.
   */
  public CharSequence getAPPROVALNUM() {
    return APPROVALNUM;
  }


  /**
   * Sets the value of the 'APPROVALNUM' field.
   * @param value the value to set.
   */
  public void setAPPROVALNUM(CharSequence value) {
    this.APPROVALNUM = value;
  }

  /**
   * Gets the value of the 'MCCCODE' field.
   * @return The value of the 'MCCCODE' field.
   */
  public CharSequence getMCCCODE() {
    return MCCCODE;
  }


  /**
   * Sets the value of the 'MCCCODE' field.
   * @param value the value to set.
   */
  public void setMCCCODE(CharSequence value) {
    this.MCCCODE = value;
  }

  /**
   * Gets the value of the 'SERVERIP' field.
   * @return The value of the 'SERVERIP' field.
   */
  public CharSequence getSERVERIP() {
    return SERVERIP;
  }


  /**
   * Sets the value of the 'SERVERIP' field.
   * @param value the value to set.
   */
  public void setSERVERIP(CharSequence value) {
    this.SERVERIP = value;
  }

  /**
   * Gets the value of the 'CBSRESP_DATE' field.
   * @return The value of the 'CBSRESP_DATE' field.
   */
  public CharSequence getCBSRESPDATE() {
    return CBSRESP_DATE;
  }


  /**
   * Sets the value of the 'CBSRESP_DATE' field.
   * @param value the value to set.
   */
  public void setCBSRESPDATE(CharSequence value) {
    this.CBSRESP_DATE = value;
  }

  /**
   * Gets the value of the 'INITMODE' field.
   * @return The value of the 'INITMODE' field.
   */
  public CharSequence getINITMODE() {
    return INITMODE;
  }


  /**
   * Sets the value of the 'INITMODE' field.
   * @param value the value to set.
   */
  public void setINITMODE(CharSequence value) {
    this.INITMODE = value;
  }

  /**
   * Gets the value of the 'PURPOSECODE' field.
   * @return The value of the 'PURPOSECODE' field.
   */
  public CharSequence getPURPOSECODE() {
    return PURPOSECODE;
  }


  /**
   * Sets the value of the 'PURPOSECODE' field.
   * @param value the value to set.
   */
  public void setPURPOSECODE(CharSequence value) {
    this.PURPOSECODE = value;
  }

  /**
   * Gets the value of the 'CREDITACCOUNTTYPE' field.
   * @return The value of the 'CREDITACCOUNTTYPE' field.
   */
  public CharSequence getCREDITACCOUNTTYPE() {
    return CREDITACCOUNTTYPE;
  }


  /**
   * Sets the value of the 'CREDITACCOUNTTYPE' field.
   * @param value the value to set.
   */
  public void setCREDITACCOUNTTYPE(CharSequence value) {
    this.CREDITACCOUNTTYPE = value;
  }

  /**
   * Gets the value of the 'CREDITIFSC' field.
   * @return The value of the 'CREDITIFSC' field.
   */
  public CharSequence getCREDITIFSC() {
    return CREDITIFSC;
  }


  /**
   * Sets the value of the 'CREDITIFSC' field.
   * @param value the value to set.
   */
  public void setCREDITIFSC(CharSequence value) {
    this.CREDITIFSC = value;
  }

  /**
   * Gets the value of the 'DEBITACCOUNTTYPE' field.
   * @return The value of the 'DEBITACCOUNTTYPE' field.
   */
  public CharSequence getDEBITACCOUNTTYPE() {
    return DEBITACCOUNTTYPE;
  }


  /**
   * Sets the value of the 'DEBITACCOUNTTYPE' field.
   * @param value the value to set.
   */
  public void setDEBITACCOUNTTYPE(CharSequence value) {
    this.DEBITACCOUNTTYPE = value;
  }

  /**
   * Gets the value of the 'DEBITIFSC' field.
   * @return The value of the 'DEBITIFSC' field.
   */
  public CharSequence getDEBITIFSC() {
    return DEBITIFSC;
  }


  /**
   * Sets the value of the 'DEBITIFSC' field.
   * @param value the value to set.
   */
  public void setDEBITIFSC(CharSequence value) {
    this.DEBITIFSC = value;
  }

  /**
   * Gets the value of the 'ORDERID' field.
   * @return The value of the 'ORDERID' field.
   */
  public CharSequence getORDERID() {
    return ORDERID;
  }


  /**
   * Sets the value of the 'ORDERID' field.
   * @param value the value to set.
   */
  public void setORDERID(CharSequence value) {
    this.ORDERID = value;
  }

  /**
   * Gets the value of the 'PAYEECODE' field.
   * @return The value of the 'PAYEECODE' field.
   */
  public CharSequence getPAYEECODE() {
    return PAYEECODE;
  }


  /**
   * Sets the value of the 'PAYEECODE' field.
   * @param value the value to set.
   */
  public void setPAYEECODE(CharSequence value) {
    this.PAYEECODE = value;
  }

  /**
   * Gets the value of the 'PAYERCODE' field.
   * @return The value of the 'PAYERCODE' field.
   */
  public CharSequence getPAYERCODE() {
    return PAYERCODE;
  }


  /**
   * Sets the value of the 'PAYERCODE' field.
   * @param value the value to set.
   */
  public void setPAYERCODE(CharSequence value) {
    this.PAYERCODE = value;
  }

  /**
   * Gets the value of the 'SUBTYPE' field.
   * @return The value of the 'SUBTYPE' field.
   */
  public CharSequence getSUBTYPE() {
    return SUBTYPE;
  }


  /**
   * Sets the value of the 'SUBTYPE' field.
   * @param value the value to set.
   */
  public void setSUBTYPE(CharSequence value) {
    this.SUBTYPE = value;
  }

  /**
   * Gets the value of the 'REMITTORMOBILENUMBER' field.
   * @return The value of the 'REMITTORMOBILENUMBER' field.
   */
  public CharSequence getREMITTORMOBILENUMBER() {
    return REMITTORMOBILENUMBER;
  }


  /**
   * Sets the value of the 'REMITTORMOBILENUMBER' field.
   * @param value the value to set.
   */
  public void setREMITTORMOBILENUMBER(CharSequence value) {
    this.REMITTORMOBILENUMBER = value;
  }

  /**
   * Gets the value of the 'PAYEEIMEI' field.
   * @return The value of the 'PAYEEIMEI' field.
   */
  public CharSequence getPAYEEIMEI() {
    return PAYEEIMEI;
  }


  /**
   * Sets the value of the 'PAYEEIMEI' field.
   * @param value the value to set.
   */
  public void setPAYEEIMEI(CharSequence value) {
    this.PAYEEIMEI = value;
  }

  /**
   * Gets the value of the 'PAYERIMEI' field.
   * @return The value of the 'PAYERIMEI' field.
   */
  public CharSequence getPAYERIMEI() {
    return PAYERIMEI;
  }


  /**
   * Sets the value of the 'PAYERIMEI' field.
   * @param value the value to set.
   */
  public void setPAYERIMEI(CharSequence value) {
    this.PAYERIMEI = value;
  }

  /**
   * Gets the value of the 'GMTDATE' field.
   * @return The value of the 'GMTDATE' field.
   */
  public CharSequence getGMTDATE() {
    return GMTDATE;
  }


  /**
   * Sets the value of the 'GMTDATE' field.
   * @param value the value to set.
   */
  public void setGMTDATE(CharSequence value) {
    this.GMTDATE = value;
  }

  /**
   * Gets the value of the 'PAYEEACCOUNTTYPE' field.
   * @return The value of the 'PAYEEACCOUNTTYPE' field.
   */
  public CharSequence getPAYEEACCOUNTTYPE() {
    return PAYEEACCOUNTTYPE;
  }


  /**
   * Sets the value of the 'PAYEEACCOUNTTYPE' field.
   * @param value the value to set.
   */
  public void setPAYEEACCOUNTTYPE(CharSequence value) {
    this.PAYEEACCOUNTTYPE = value;
  }

  /**
   * Gets the value of the 'PAYERACCOUNTTYPE' field.
   * @return The value of the 'PAYERACCOUNTTYPE' field.
   */
  public CharSequence getPAYERACCOUNTTYPE() {
    return PAYERACCOUNTTYPE;
  }


  /**
   * Sets the value of the 'PAYERACCOUNTTYPE' field.
   * @param value the value to set.
   */
  public void setPAYERACCOUNTTYPE(CharSequence value) {
    this.PAYERACCOUNTTYPE = value;
  }

  /**
   * Gets the value of the 'PAYERCONSENTNAME' field.
   * @return The value of the 'PAYERCONSENTNAME' field.
   */
  public CharSequence getPAYERCONSENTNAME() {
    return PAYERCONSENTNAME;
  }


  /**
   * Sets the value of the 'PAYERCONSENTNAME' field.
   * @param value the value to set.
   */
  public void setPAYERCONSENTNAME(CharSequence value) {
    this.PAYERCONSENTNAME = value;
  }

  /**
   * Gets the value of the 'PAYERCONSENTTYPE' field.
   * @return The value of the 'PAYERCONSENTTYPE' field.
   */
  public CharSequence getPAYERCONSENTTYPE() {
    return PAYERCONSENTTYPE;
  }


  /**
   * Sets the value of the 'PAYERCONSENTTYPE' field.
   * @param value the value to set.
   */
  public void setPAYERCONSENTTYPE(CharSequence value) {
    this.PAYERCONSENTTYPE = value;
  }

  /**
   * Gets the value of the 'PAYERCONSENTVALUE' field.
   * @return The value of the 'PAYERCONSENTVALUE' field.
   */
  public CharSequence getPAYERCONSENTVALUE() {
    return PAYERCONSENTVALUE;
  }


  /**
   * Sets the value of the 'PAYERCONSENTVALUE' field.
   * @param value the value to set.
   */
  public void setPAYERCONSENTVALUE(CharSequence value) {
    this.PAYERCONSENTVALUE = value;
  }

  /**
   * Gets the value of the 'ADJCODE' field.
   * @return The value of the 'ADJCODE' field.
   */
  public CharSequence getADJCODE() {
    return ADJCODE;
  }


  /**
   * Sets the value of the 'ADJCODE' field.
   * @param value the value to set.
   */
  public void setADJCODE(CharSequence value) {
    this.ADJCODE = value;
  }

  /**
   * Gets the value of the 'ADJFLAG' field.
   * @return The value of the 'ADJFLAG' field.
   */
  public CharSequence getADJFLAG() {
    return ADJFLAG;
  }


  /**
   * Sets the value of the 'ADJFLAG' field.
   * @param value the value to set.
   */
  public void setADJFLAG(CharSequence value) {
    this.ADJFLAG = value;
  }

  /**
   * Gets the value of the 'CREATE_DATE' field.
   * @return The value of the 'CREATE_DATE' field.
   */
  public CharSequence getCREATEDATE() {
    return CREATE_DATE;
  }


  /**
   * Sets the value of the 'CREATE_DATE' field.
   * @param value the value to set.
   */
  public void setCREATEDATE(CharSequence value) {
    this.CREATE_DATE = value;
  }

  /**
   * Gets the value of the 'CREDITACCTNARRATION_103' field.
   * @return The value of the 'CREDITACCTNARRATION_103' field.
   */
  public CharSequence getCREDITACCTNARRATION103() {
    return CREDITACCTNARRATION_103;
  }


  /**
   * Sets the value of the 'CREDITACCTNARRATION_103' field.
   * @param value the value to set.
   */
  public void setCREDITACCTNARRATION103(CharSequence value) {
    this.CREDITACCTNARRATION_103 = value;
  }

  /**
   * Gets the value of the 'DE46' field.
   * @return The value of the 'DE46' field.
   */
  public CharSequence getDE46() {
    return DE46;
  }


  /**
   * Sets the value of the 'DE46' field.
   * @param value the value to set.
   */
  public void setDE46(CharSequence value) {
    this.DE46 = value;
  }

  /**
   * Gets the value of the 'DEBITACCTNARRATION_102' field.
   * @return The value of the 'DEBITACCTNARRATION_102' field.
   */
  public CharSequence getDEBITACCTNARRATION102() {
    return DEBITACCTNARRATION_102;
  }


  /**
   * Sets the value of the 'DEBITACCTNARRATION_102' field.
   * @param value the value to set.
   */
  public void setDEBITACCTNARRATION102(CharSequence value) {
    this.DEBITACCTNARRATION_102 = value;
  }

  /**
   * Gets the value of the 'GST' field.
   * @return The value of the 'GST' field.
   */
  public CharSequence getGST() {
    return GST;
  }


  /**
   * Sets the value of the 'GST' field.
   * @param value the value to set.
   */
  public void setGST(CharSequence value) {
    this.GST = value;
  }

  /**
   * Gets the value of the 'LOANNUMBER' field.
   * @return The value of the 'LOANNUMBER' field.
   */
  public CharSequence getLOANNUMBER() {
    return LOANNUMBER;
  }


  /**
   * Sets the value of the 'LOANNUMBER' field.
   * @param value the value to set.
   */
  public void setLOANNUMBER(CharSequence value) {
    this.LOANNUMBER = value;
  }

  /**
   * Gets the value of the 'LOCALTIME' field.
   * @return The value of the 'LOCALTIME' field.
   */
  public CharSequence getLOCALTIME() {
    return LOCALTIME;
  }


  /**
   * Sets the value of the 'LOCALTIME' field.
   * @param value the value to set.
   */
  public void setLOCALTIME(CharSequence value) {
    this.LOCALTIME = value;
  }

  /**
   * Gets the value of the 'NARRATION_125' field.
   * @return The value of the 'NARRATION_125' field.
   */
  public CharSequence getNARRATION125() {
    return NARRATION_125;
  }


  /**
   * Sets the value of the 'NARRATION_125' field.
   * @param value the value to set.
   */
  public void setNARRATION125(CharSequence value) {
    this.NARRATION_125 = value;
  }

  /**
   * Gets the value of the 'P2PTXNCHARGES' field.
   * @return The value of the 'P2PTXNCHARGES' field.
   */
  public CharSequence getP2PTXNCHARGES() {
    return P2PTXNCHARGES;
  }


  /**
   * Sets the value of the 'P2PTXNCHARGES' field.
   * @param value the value to set.
   */
  public void setP2PTXNCHARGES(CharSequence value) {
    this.P2PTXNCHARGES = value;
  }

  /**
   * Gets the value of the 'SCHEMECODE' field.
   * @return The value of the 'SCHEMECODE' field.
   */
  public CharSequence getSCHEMECODE() {
    return SCHEMECODE;
  }


  /**
   * Sets the value of the 'SCHEMECODE' field.
   * @param value the value to set.
   */
  public void setSCHEMECODE(CharSequence value) {
    this.SCHEMECODE = value;
  }

  /**
   * Gets the value of the 'TXNAMOUNT' field.
   * @return The value of the 'TXNAMOUNT' field.
   */
  public CharSequence getTXNAMOUNT() {
    return TXNAMOUNT;
  }


  /**
   * Sets the value of the 'TXNAMOUNT' field.
   * @param value the value to set.
   */
  public void setTXNAMOUNT(CharSequence value) {
    this.TXNAMOUNT = value;
  }

  /**
   * Gets the value of the 'BATCH_ID' field.
   * @return The value of the 'BATCH_ID' field.
   */
  public CharSequence getBATCHID() {
    return BATCH_ID;
  }


  /**
   * Sets the value of the 'BATCH_ID' field.
   * @param value the value to set.
   */
  public void setBATCHID(CharSequence value) {
    this.BATCH_ID = value;
  }

  /**
   * Gets the value of the 'BASEAMOUNT' field.
   * @return The value of the 'BASEAMOUNT' field.
   */
  public CharSequence getBASEAMOUNT() {
    return BASEAMOUNT;
  }


  /**
   * Sets the value of the 'BASEAMOUNT' field.
   * @param value the value to set.
   */
  public void setBASEAMOUNT(CharSequence value) {
    this.BASEAMOUNT = value;
  }

  /**
   * Gets the value of the 'BASECURR' field.
   * @return The value of the 'BASECURR' field.
   */
  public CharSequence getBASECURR() {
    return BASECURR;
  }


  /**
   * Sets the value of the 'BASECURR' field.
   * @param value the value to set.
   */
  public void setBASECURR(CharSequence value) {
    this.BASECURR = value;
  }

  /**
   * Gets the value of the 'CONCODE' field.
   * @return The value of the 'CONCODE' field.
   */
  public CharSequence getCONCODE() {
    return CONCODE;
  }


  /**
   * Sets the value of the 'CONCODE' field.
   * @param value the value to set.
   */
  public void setCONCODE(CharSequence value) {
    this.CONCODE = value;
  }

  /**
   * Gets the value of the 'FX' field.
   * @return The value of the 'FX' field.
   */
  public CharSequence getFX() {
    return FX;
  }


  /**
   * Sets the value of the 'FX' field.
   * @param value the value to set.
   */
  public void setFX(CharSequence value) {
    this.FX = value;
  }

  /**
   * Gets the value of the 'MKUP' field.
   * @return The value of the 'MKUP' field.
   */
  public CharSequence getMKUP() {
    return MKUP;
  }


  /**
   * Sets the value of the 'MKUP' field.
   * @param value the value to set.
   */
  public void setMKUP(CharSequence value) {
    this.MKUP = value;
  }

  /**
   * Gets the value of the 'ADDITIONAL4' field.
   * @return The value of the 'ADDITIONAL4' field.
   */
  public CharSequence getADDITIONAL4() {
    return ADDITIONAL4;
  }


  /**
   * Sets the value of the 'ADDITIONAL4' field.
   * @param value the value to set.
   */
  public void setADDITIONAL4(CharSequence value) {
    this.ADDITIONAL4 = value;
  }

  /**
   * Gets the value of the 'D12' field.
   * @return The value of the 'D12' field.
   */
  public CharSequence getD12() {
    return D12;
  }


  /**
   * Sets the value of the 'D12' field.
   * @param value the value to set.
   */
  public void setD12(CharSequence value) {
    this.D12 = value;
  }

  /**
   * Gets the value of the 'ADDITIONAL1' field.
   * @return The value of the 'ADDITIONAL1' field.
   */
  public CharSequence getADDITIONAL1() {
    return ADDITIONAL1;
  }


  /**
   * Sets the value of the 'ADDITIONAL1' field.
   * @param value the value to set.
   */
  public void setADDITIONAL1(CharSequence value) {
    this.ADDITIONAL1 = value;
  }

  /**
   * Gets the value of the 'ADDITIONAL2' field.
   * @return The value of the 'ADDITIONAL2' field.
   */
  public CharSequence getADDITIONAL2() {
    return ADDITIONAL2;
  }


  /**
   * Sets the value of the 'ADDITIONAL2' field.
   * @param value the value to set.
   */
  public void setADDITIONAL2(CharSequence value) {
    this.ADDITIONAL2 = value;
  }

  /**
   * Gets the value of the 'ADDITIONAL3' field.
   * @return The value of the 'ADDITIONAL3' field.
   */
  public CharSequence getADDITIONAL3() {
    return ADDITIONAL3;
  }


  /**
   * Sets the value of the 'ADDITIONAL3' field.
   * @param value the value to set.
   */
  public void setADDITIONAL3(CharSequence value) {
    this.ADDITIONAL3 = value;
  }

  /**
   * Gets the value of the 'ADDITIONAL5' field.
   * @return The value of the 'ADDITIONAL5' field.
   */
  public CharSequence getADDITIONAL5() {
    return ADDITIONAL5;
  }


  /**
   * Sets the value of the 'ADDITIONAL5' field.
   * @param value the value to set.
   */
  public void setADDITIONAL5(CharSequence value) {
    this.ADDITIONAL5 = value;
  }

  /**
   * Gets the value of the 'CBS_ROUTING' field.
   * @return The value of the 'CBS_ROUTING' field.
   */
  public CharSequence getCBSROUTING() {
    return CBS_ROUTING;
  }


  /**
   * Sets the value of the 'CBS_ROUTING' field.
   * @param value the value to set.
   */
  public void setCBSROUTING(CharSequence value) {
    this.CBS_ROUTING = value;
  }

  /**
   * Creates a new CBSTranCol RecordBuilder.
   * @return A new CBSTranCol RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new CBSTranCol RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CBSTranCol RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * Creates a new CBSTranCol RecordBuilder by copying an existing CBSTranCol instance.
   * @param other The existing instance to copy.
   * @return A new CBSTranCol RecordBuilder
   */
  public static Builder newBuilder(CBSTranCol other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * RecordBuilder for CBSTranCol instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CBSTranCol>
    implements org.apache.avro.data.RecordBuilder<CBSTranCol> {

    private Double ID;
    private CharSequence AMOUNT;
    private CharSequence CBSRC;
    private CharSequence CREDITACCOUNT;
    private CharSequence CUSTOMERID;
    private CharSequence DEBITACCOUNT;
    private CharSequence MSGID;
    private Long REVERSAL;
    private CharSequence REVERSALSTATUS;
    private CharSequence RRN;
    private CharSequence STAN;
    private CharSequence TXN_DATE;
    private CharSequence TXNID;
    private CharSequence TYPE;
    private CharSequence UPIRC;
    private CharSequence ORGTXNID;
    private CharSequence REMARKS;
    private CharSequence CUSTOMERACCOUNT;
    private CharSequence NAME;
    private CharSequence PAYEEVPA;
    private CharSequence PAYERVPA;
    private CharSequence SEQNO;
    private CharSequence COMMISSIONAMOUNT;
    private CharSequence CUSTOMERREFID;
    private CharSequence TRANTYPE;
    private CharSequence CREDITBANKNAME;
    private CharSequence DEBITBANKNAME;
    private CharSequence OTHERSACCOUNT;
    private CharSequence CHANNEL;
    private CharSequence APPID;
    private CharSequence PREAPPROVED;
    private CharSequence BENEFICIARYNAME;
    private CharSequence OTHERMOBILENO;
    private CharSequence REMITTERNAME;
    private CharSequence APPROVALNUM;
    private CharSequence MCCCODE;
    private CharSequence SERVERIP;
    private CharSequence CBSRESP_DATE;
    private CharSequence INITMODE;
    private CharSequence PURPOSECODE;
    private CharSequence CREDITACCOUNTTYPE;
    private CharSequence CREDITIFSC;
    private CharSequence DEBITACCOUNTTYPE;
    private CharSequence DEBITIFSC;
    private CharSequence ORDERID;
    private CharSequence PAYEECODE;
    private CharSequence PAYERCODE;
    private CharSequence SUBTYPE;
    private CharSequence REMITTORMOBILENUMBER;
    private CharSequence PAYEEIMEI;
    private CharSequence PAYERIMEI;
    private CharSequence GMTDATE;
    private CharSequence PAYEEACCOUNTTYPE;
    private CharSequence PAYERACCOUNTTYPE;
    private CharSequence PAYERCONSENTNAME;
    private CharSequence PAYERCONSENTTYPE;
    private CharSequence PAYERCONSENTVALUE;
    private CharSequence ADJCODE;
    private CharSequence ADJFLAG;
    private CharSequence CREATE_DATE;
    private CharSequence CREDITACCTNARRATION_103;
    private CharSequence DE46;
    private CharSequence DEBITACCTNARRATION_102;
    private CharSequence GST;
    private CharSequence LOANNUMBER;
    private CharSequence LOCALTIME;
    private CharSequence NARRATION_125;
    private CharSequence P2PTXNCHARGES;
    private CharSequence SCHEMECODE;
    private CharSequence TXNAMOUNT;
    private CharSequence BATCH_ID;
    private CharSequence BASEAMOUNT;
    private CharSequence BASECURR;
    private CharSequence CONCODE;
    private CharSequence FX;
    private CharSequence MKUP;
    private CharSequence ADDITIONAL4;
    private CharSequence D12;
    private CharSequence ADDITIONAL1;
    private CharSequence ADDITIONAL2;
    private CharSequence ADDITIONAL3;
    private CharSequence ADDITIONAL5;
    private CharSequence CBS_ROUTING;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.AMOUNT)) {
        this.AMOUNT = data().deepCopy(fields()[1].schema(), other.AMOUNT);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.CBSRC)) {
        this.CBSRC = data().deepCopy(fields()[2].schema(), other.CBSRC);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.CREDITACCOUNT)) {
        this.CREDITACCOUNT = data().deepCopy(fields()[3].schema(), other.CREDITACCOUNT);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.CUSTOMERID)) {
        this.CUSTOMERID = data().deepCopy(fields()[4].schema(), other.CUSTOMERID);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.DEBITACCOUNT)) {
        this.DEBITACCOUNT = data().deepCopy(fields()[5].schema(), other.DEBITACCOUNT);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.MSGID)) {
        this.MSGID = data().deepCopy(fields()[6].schema(), other.MSGID);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.REVERSAL)) {
        this.REVERSAL = data().deepCopy(fields()[7].schema(), other.REVERSAL);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.REVERSALSTATUS)) {
        this.REVERSALSTATUS = data().deepCopy(fields()[8].schema(), other.REVERSALSTATUS);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.RRN)) {
        this.RRN = data().deepCopy(fields()[9].schema(), other.RRN);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.STAN)) {
        this.STAN = data().deepCopy(fields()[10].schema(), other.STAN);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.TXN_DATE)) {
        this.TXN_DATE = data().deepCopy(fields()[11].schema(), other.TXN_DATE);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.TXNID)) {
        this.TXNID = data().deepCopy(fields()[12].schema(), other.TXNID);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.TYPE)) {
        this.TYPE = data().deepCopy(fields()[13].schema(), other.TYPE);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.UPIRC)) {
        this.UPIRC = data().deepCopy(fields()[14].schema(), other.UPIRC);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.ORGTXNID)) {
        this.ORGTXNID = data().deepCopy(fields()[15].schema(), other.ORGTXNID);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.REMARKS)) {
        this.REMARKS = data().deepCopy(fields()[16].schema(), other.REMARKS);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.CUSTOMERACCOUNT)) {
        this.CUSTOMERACCOUNT = data().deepCopy(fields()[17].schema(), other.CUSTOMERACCOUNT);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.NAME)) {
        this.NAME = data().deepCopy(fields()[18].schema(), other.NAME);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.PAYEEVPA)) {
        this.PAYEEVPA = data().deepCopy(fields()[19].schema(), other.PAYEEVPA);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.PAYERVPA)) {
        this.PAYERVPA = data().deepCopy(fields()[20].schema(), other.PAYERVPA);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.SEQNO)) {
        this.SEQNO = data().deepCopy(fields()[21].schema(), other.SEQNO);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.COMMISSIONAMOUNT)) {
        this.COMMISSIONAMOUNT = data().deepCopy(fields()[22].schema(), other.COMMISSIONAMOUNT);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.CUSTOMERREFID)) {
        this.CUSTOMERREFID = data().deepCopy(fields()[23].schema(), other.CUSTOMERREFID);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.TRANTYPE)) {
        this.TRANTYPE = data().deepCopy(fields()[24].schema(), other.TRANTYPE);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.CREDITBANKNAME)) {
        this.CREDITBANKNAME = data().deepCopy(fields()[25].schema(), other.CREDITBANKNAME);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.DEBITBANKNAME)) {
        this.DEBITBANKNAME = data().deepCopy(fields()[26].schema(), other.DEBITBANKNAME);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.OTHERSACCOUNT)) {
        this.OTHERSACCOUNT = data().deepCopy(fields()[27].schema(), other.OTHERSACCOUNT);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.CHANNEL)) {
        this.CHANNEL = data().deepCopy(fields()[28].schema(), other.CHANNEL);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.APPID)) {
        this.APPID = data().deepCopy(fields()[29].schema(), other.APPID);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.PREAPPROVED)) {
        this.PREAPPROVED = data().deepCopy(fields()[30].schema(), other.PREAPPROVED);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.BENEFICIARYNAME)) {
        this.BENEFICIARYNAME = data().deepCopy(fields()[31].schema(), other.BENEFICIARYNAME);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.OTHERMOBILENO)) {
        this.OTHERMOBILENO = data().deepCopy(fields()[32].schema(), other.OTHERMOBILENO);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.REMITTERNAME)) {
        this.REMITTERNAME = data().deepCopy(fields()[33].schema(), other.REMITTERNAME);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.APPROVALNUM)) {
        this.APPROVALNUM = data().deepCopy(fields()[34].schema(), other.APPROVALNUM);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.MCCCODE)) {
        this.MCCCODE = data().deepCopy(fields()[35].schema(), other.MCCCODE);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.SERVERIP)) {
        this.SERVERIP = data().deepCopy(fields()[36].schema(), other.SERVERIP);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.CBSRESP_DATE)) {
        this.CBSRESP_DATE = data().deepCopy(fields()[37].schema(), other.CBSRESP_DATE);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (isValidValue(fields()[38], other.INITMODE)) {
        this.INITMODE = data().deepCopy(fields()[38].schema(), other.INITMODE);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (isValidValue(fields()[39], other.PURPOSECODE)) {
        this.PURPOSECODE = data().deepCopy(fields()[39].schema(), other.PURPOSECODE);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
      if (isValidValue(fields()[40], other.CREDITACCOUNTTYPE)) {
        this.CREDITACCOUNTTYPE = data().deepCopy(fields()[40].schema(), other.CREDITACCOUNTTYPE);
        fieldSetFlags()[40] = other.fieldSetFlags()[40];
      }
      if (isValidValue(fields()[41], other.CREDITIFSC)) {
        this.CREDITIFSC = data().deepCopy(fields()[41].schema(), other.CREDITIFSC);
        fieldSetFlags()[41] = other.fieldSetFlags()[41];
      }
      if (isValidValue(fields()[42], other.DEBITACCOUNTTYPE)) {
        this.DEBITACCOUNTTYPE = data().deepCopy(fields()[42].schema(), other.DEBITACCOUNTTYPE);
        fieldSetFlags()[42] = other.fieldSetFlags()[42];
      }
      if (isValidValue(fields()[43], other.DEBITIFSC)) {
        this.DEBITIFSC = data().deepCopy(fields()[43].schema(), other.DEBITIFSC);
        fieldSetFlags()[43] = other.fieldSetFlags()[43];
      }
      if (isValidValue(fields()[44], other.ORDERID)) {
        this.ORDERID = data().deepCopy(fields()[44].schema(), other.ORDERID);
        fieldSetFlags()[44] = other.fieldSetFlags()[44];
      }
      if (isValidValue(fields()[45], other.PAYEECODE)) {
        this.PAYEECODE = data().deepCopy(fields()[45].schema(), other.PAYEECODE);
        fieldSetFlags()[45] = other.fieldSetFlags()[45];
      }
      if (isValidValue(fields()[46], other.PAYERCODE)) {
        this.PAYERCODE = data().deepCopy(fields()[46].schema(), other.PAYERCODE);
        fieldSetFlags()[46] = other.fieldSetFlags()[46];
      }
      if (isValidValue(fields()[47], other.SUBTYPE)) {
        this.SUBTYPE = data().deepCopy(fields()[47].schema(), other.SUBTYPE);
        fieldSetFlags()[47] = other.fieldSetFlags()[47];
      }
      if (isValidValue(fields()[48], other.REMITTORMOBILENUMBER)) {
        this.REMITTORMOBILENUMBER = data().deepCopy(fields()[48].schema(), other.REMITTORMOBILENUMBER);
        fieldSetFlags()[48] = other.fieldSetFlags()[48];
      }
      if (isValidValue(fields()[49], other.PAYEEIMEI)) {
        this.PAYEEIMEI = data().deepCopy(fields()[49].schema(), other.PAYEEIMEI);
        fieldSetFlags()[49] = other.fieldSetFlags()[49];
      }
      if (isValidValue(fields()[50], other.PAYERIMEI)) {
        this.PAYERIMEI = data().deepCopy(fields()[50].schema(), other.PAYERIMEI);
        fieldSetFlags()[50] = other.fieldSetFlags()[50];
      }
      if (isValidValue(fields()[51], other.GMTDATE)) {
        this.GMTDATE = data().deepCopy(fields()[51].schema(), other.GMTDATE);
        fieldSetFlags()[51] = other.fieldSetFlags()[51];
      }
      if (isValidValue(fields()[52], other.PAYEEACCOUNTTYPE)) {
        this.PAYEEACCOUNTTYPE = data().deepCopy(fields()[52].schema(), other.PAYEEACCOUNTTYPE);
        fieldSetFlags()[52] = other.fieldSetFlags()[52];
      }
      if (isValidValue(fields()[53], other.PAYERACCOUNTTYPE)) {
        this.PAYERACCOUNTTYPE = data().deepCopy(fields()[53].schema(), other.PAYERACCOUNTTYPE);
        fieldSetFlags()[53] = other.fieldSetFlags()[53];
      }
      if (isValidValue(fields()[54], other.PAYERCONSENTNAME)) {
        this.PAYERCONSENTNAME = data().deepCopy(fields()[54].schema(), other.PAYERCONSENTNAME);
        fieldSetFlags()[54] = other.fieldSetFlags()[54];
      }
      if (isValidValue(fields()[55], other.PAYERCONSENTTYPE)) {
        this.PAYERCONSENTTYPE = data().deepCopy(fields()[55].schema(), other.PAYERCONSENTTYPE);
        fieldSetFlags()[55] = other.fieldSetFlags()[55];
      }
      if (isValidValue(fields()[56], other.PAYERCONSENTVALUE)) {
        this.PAYERCONSENTVALUE = data().deepCopy(fields()[56].schema(), other.PAYERCONSENTVALUE);
        fieldSetFlags()[56] = other.fieldSetFlags()[56];
      }
      if (isValidValue(fields()[57], other.ADJCODE)) {
        this.ADJCODE = data().deepCopy(fields()[57].schema(), other.ADJCODE);
        fieldSetFlags()[57] = other.fieldSetFlags()[57];
      }
      if (isValidValue(fields()[58], other.ADJFLAG)) {
        this.ADJFLAG = data().deepCopy(fields()[58].schema(), other.ADJFLAG);
        fieldSetFlags()[58] = other.fieldSetFlags()[58];
      }
      if (isValidValue(fields()[59], other.CREATE_DATE)) {
        this.CREATE_DATE = data().deepCopy(fields()[59].schema(), other.CREATE_DATE);
        fieldSetFlags()[59] = other.fieldSetFlags()[59];
      }
      if (isValidValue(fields()[60], other.CREDITACCTNARRATION_103)) {
        this.CREDITACCTNARRATION_103 = data().deepCopy(fields()[60].schema(), other.CREDITACCTNARRATION_103);
        fieldSetFlags()[60] = other.fieldSetFlags()[60];
      }
      if (isValidValue(fields()[61], other.DE46)) {
        this.DE46 = data().deepCopy(fields()[61].schema(), other.DE46);
        fieldSetFlags()[61] = other.fieldSetFlags()[61];
      }
      if (isValidValue(fields()[62], other.DEBITACCTNARRATION_102)) {
        this.DEBITACCTNARRATION_102 = data().deepCopy(fields()[62].schema(), other.DEBITACCTNARRATION_102);
        fieldSetFlags()[62] = other.fieldSetFlags()[62];
      }
      if (isValidValue(fields()[63], other.GST)) {
        this.GST = data().deepCopy(fields()[63].schema(), other.GST);
        fieldSetFlags()[63] = other.fieldSetFlags()[63];
      }
      if (isValidValue(fields()[64], other.LOANNUMBER)) {
        this.LOANNUMBER = data().deepCopy(fields()[64].schema(), other.LOANNUMBER);
        fieldSetFlags()[64] = other.fieldSetFlags()[64];
      }
      if (isValidValue(fields()[65], other.LOCALTIME)) {
        this.LOCALTIME = data().deepCopy(fields()[65].schema(), other.LOCALTIME);
        fieldSetFlags()[65] = other.fieldSetFlags()[65];
      }
      if (isValidValue(fields()[66], other.NARRATION_125)) {
        this.NARRATION_125 = data().deepCopy(fields()[66].schema(), other.NARRATION_125);
        fieldSetFlags()[66] = other.fieldSetFlags()[66];
      }
      if (isValidValue(fields()[67], other.P2PTXNCHARGES)) {
        this.P2PTXNCHARGES = data().deepCopy(fields()[67].schema(), other.P2PTXNCHARGES);
        fieldSetFlags()[67] = other.fieldSetFlags()[67];
      }
      if (isValidValue(fields()[68], other.SCHEMECODE)) {
        this.SCHEMECODE = data().deepCopy(fields()[68].schema(), other.SCHEMECODE);
        fieldSetFlags()[68] = other.fieldSetFlags()[68];
      }
      if (isValidValue(fields()[69], other.TXNAMOUNT)) {
        this.TXNAMOUNT = data().deepCopy(fields()[69].schema(), other.TXNAMOUNT);
        fieldSetFlags()[69] = other.fieldSetFlags()[69];
      }
      if (isValidValue(fields()[70], other.BATCH_ID)) {
        this.BATCH_ID = data().deepCopy(fields()[70].schema(), other.BATCH_ID);
        fieldSetFlags()[70] = other.fieldSetFlags()[70];
      }
      if (isValidValue(fields()[71], other.BASEAMOUNT)) {
        this.BASEAMOUNT = data().deepCopy(fields()[71].schema(), other.BASEAMOUNT);
        fieldSetFlags()[71] = other.fieldSetFlags()[71];
      }
      if (isValidValue(fields()[72], other.BASECURR)) {
        this.BASECURR = data().deepCopy(fields()[72].schema(), other.BASECURR);
        fieldSetFlags()[72] = other.fieldSetFlags()[72];
      }
      if (isValidValue(fields()[73], other.CONCODE)) {
        this.CONCODE = data().deepCopy(fields()[73].schema(), other.CONCODE);
        fieldSetFlags()[73] = other.fieldSetFlags()[73];
      }
      if (isValidValue(fields()[74], other.FX)) {
        this.FX = data().deepCopy(fields()[74].schema(), other.FX);
        fieldSetFlags()[74] = other.fieldSetFlags()[74];
      }
      if (isValidValue(fields()[75], other.MKUP)) {
        this.MKUP = data().deepCopy(fields()[75].schema(), other.MKUP);
        fieldSetFlags()[75] = other.fieldSetFlags()[75];
      }
      if (isValidValue(fields()[76], other.ADDITIONAL4)) {
        this.ADDITIONAL4 = data().deepCopy(fields()[76].schema(), other.ADDITIONAL4);
        fieldSetFlags()[76] = other.fieldSetFlags()[76];
      }
      if (isValidValue(fields()[77], other.D12)) {
        this.D12 = data().deepCopy(fields()[77].schema(), other.D12);
        fieldSetFlags()[77] = other.fieldSetFlags()[77];
      }
      if (isValidValue(fields()[78], other.ADDITIONAL1)) {
        this.ADDITIONAL1 = data().deepCopy(fields()[78].schema(), other.ADDITIONAL1);
        fieldSetFlags()[78] = other.fieldSetFlags()[78];
      }
      if (isValidValue(fields()[79], other.ADDITIONAL2)) {
        this.ADDITIONAL2 = data().deepCopy(fields()[79].schema(), other.ADDITIONAL2);
        fieldSetFlags()[79] = other.fieldSetFlags()[79];
      }
      if (isValidValue(fields()[80], other.ADDITIONAL3)) {
        this.ADDITIONAL3 = data().deepCopy(fields()[80].schema(), other.ADDITIONAL3);
        fieldSetFlags()[80] = other.fieldSetFlags()[80];
      }
      if (isValidValue(fields()[81], other.ADDITIONAL5)) {
        this.ADDITIONAL5 = data().deepCopy(fields()[81].schema(), other.ADDITIONAL5);
        fieldSetFlags()[81] = other.fieldSetFlags()[81];
      }
      if (isValidValue(fields()[82], other.CBS_ROUTING)) {
        this.CBS_ROUTING = data().deepCopy(fields()[82].schema(), other.CBS_ROUTING);
        fieldSetFlags()[82] = other.fieldSetFlags()[82];
      }
    }

    /**
     * Creates a Builder by copying an existing CBSTranCol instance
     * @param other The existing instance to copy.
     */
    private Builder(CBSTranCol other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.AMOUNT)) {
        this.AMOUNT = data().deepCopy(fields()[1].schema(), other.AMOUNT);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CBSRC)) {
        this.CBSRC = data().deepCopy(fields()[2].schema(), other.CBSRC);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CREDITACCOUNT)) {
        this.CREDITACCOUNT = data().deepCopy(fields()[3].schema(), other.CREDITACCOUNT);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CUSTOMERID)) {
        this.CUSTOMERID = data().deepCopy(fields()[4].schema(), other.CUSTOMERID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.DEBITACCOUNT)) {
        this.DEBITACCOUNT = data().deepCopy(fields()[5].schema(), other.DEBITACCOUNT);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.MSGID)) {
        this.MSGID = data().deepCopy(fields()[6].schema(), other.MSGID);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.REVERSAL)) {
        this.REVERSAL = data().deepCopy(fields()[7].schema(), other.REVERSAL);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.REVERSALSTATUS)) {
        this.REVERSALSTATUS = data().deepCopy(fields()[8].schema(), other.REVERSALSTATUS);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.RRN)) {
        this.RRN = data().deepCopy(fields()[9].schema(), other.RRN);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.STAN)) {
        this.STAN = data().deepCopy(fields()[10].schema(), other.STAN);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.TXN_DATE)) {
        this.TXN_DATE = data().deepCopy(fields()[11].schema(), other.TXN_DATE);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.TXNID)) {
        this.TXNID = data().deepCopy(fields()[12].schema(), other.TXNID);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.TYPE)) {
        this.TYPE = data().deepCopy(fields()[13].schema(), other.TYPE);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.UPIRC)) {
        this.UPIRC = data().deepCopy(fields()[14].schema(), other.UPIRC);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.ORGTXNID)) {
        this.ORGTXNID = data().deepCopy(fields()[15].schema(), other.ORGTXNID);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.REMARKS)) {
        this.REMARKS = data().deepCopy(fields()[16].schema(), other.REMARKS);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.CUSTOMERACCOUNT)) {
        this.CUSTOMERACCOUNT = data().deepCopy(fields()[17].schema(), other.CUSTOMERACCOUNT);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.NAME)) {
        this.NAME = data().deepCopy(fields()[18].schema(), other.NAME);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.PAYEEVPA)) {
        this.PAYEEVPA = data().deepCopy(fields()[19].schema(), other.PAYEEVPA);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.PAYERVPA)) {
        this.PAYERVPA = data().deepCopy(fields()[20].schema(), other.PAYERVPA);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.SEQNO)) {
        this.SEQNO = data().deepCopy(fields()[21].schema(), other.SEQNO);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.COMMISSIONAMOUNT)) {
        this.COMMISSIONAMOUNT = data().deepCopy(fields()[22].schema(), other.COMMISSIONAMOUNT);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.CUSTOMERREFID)) {
        this.CUSTOMERREFID = data().deepCopy(fields()[23].schema(), other.CUSTOMERREFID);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.TRANTYPE)) {
        this.TRANTYPE = data().deepCopy(fields()[24].schema(), other.TRANTYPE);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.CREDITBANKNAME)) {
        this.CREDITBANKNAME = data().deepCopy(fields()[25].schema(), other.CREDITBANKNAME);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.DEBITBANKNAME)) {
        this.DEBITBANKNAME = data().deepCopy(fields()[26].schema(), other.DEBITBANKNAME);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.OTHERSACCOUNT)) {
        this.OTHERSACCOUNT = data().deepCopy(fields()[27].schema(), other.OTHERSACCOUNT);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.CHANNEL)) {
        this.CHANNEL = data().deepCopy(fields()[28].schema(), other.CHANNEL);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.APPID)) {
        this.APPID = data().deepCopy(fields()[29].schema(), other.APPID);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.PREAPPROVED)) {
        this.PREAPPROVED = data().deepCopy(fields()[30].schema(), other.PREAPPROVED);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.BENEFICIARYNAME)) {
        this.BENEFICIARYNAME = data().deepCopy(fields()[31].schema(), other.BENEFICIARYNAME);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.OTHERMOBILENO)) {
        this.OTHERMOBILENO = data().deepCopy(fields()[32].schema(), other.OTHERMOBILENO);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.REMITTERNAME)) {
        this.REMITTERNAME = data().deepCopy(fields()[33].schema(), other.REMITTERNAME);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.APPROVALNUM)) {
        this.APPROVALNUM = data().deepCopy(fields()[34].schema(), other.APPROVALNUM);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.MCCCODE)) {
        this.MCCCODE = data().deepCopy(fields()[35].schema(), other.MCCCODE);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.SERVERIP)) {
        this.SERVERIP = data().deepCopy(fields()[36].schema(), other.SERVERIP);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.CBSRESP_DATE)) {
        this.CBSRESP_DATE = data().deepCopy(fields()[37].schema(), other.CBSRESP_DATE);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.INITMODE)) {
        this.INITMODE = data().deepCopy(fields()[38].schema(), other.INITMODE);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.PURPOSECODE)) {
        this.PURPOSECODE = data().deepCopy(fields()[39].schema(), other.PURPOSECODE);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.CREDITACCOUNTTYPE)) {
        this.CREDITACCOUNTTYPE = data().deepCopy(fields()[40].schema(), other.CREDITACCOUNTTYPE);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.CREDITIFSC)) {
        this.CREDITIFSC = data().deepCopy(fields()[41].schema(), other.CREDITIFSC);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.DEBITACCOUNTTYPE)) {
        this.DEBITACCOUNTTYPE = data().deepCopy(fields()[42].schema(), other.DEBITACCOUNTTYPE);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.DEBITIFSC)) {
        this.DEBITIFSC = data().deepCopy(fields()[43].schema(), other.DEBITIFSC);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.ORDERID)) {
        this.ORDERID = data().deepCopy(fields()[44].schema(), other.ORDERID);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.PAYEECODE)) {
        this.PAYEECODE = data().deepCopy(fields()[45].schema(), other.PAYEECODE);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.PAYERCODE)) {
        this.PAYERCODE = data().deepCopy(fields()[46].schema(), other.PAYERCODE);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SUBTYPE)) {
        this.SUBTYPE = data().deepCopy(fields()[47].schema(), other.SUBTYPE);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.REMITTORMOBILENUMBER)) {
        this.REMITTORMOBILENUMBER = data().deepCopy(fields()[48].schema(), other.REMITTORMOBILENUMBER);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.PAYEEIMEI)) {
        this.PAYEEIMEI = data().deepCopy(fields()[49].schema(), other.PAYEEIMEI);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.PAYERIMEI)) {
        this.PAYERIMEI = data().deepCopy(fields()[50].schema(), other.PAYERIMEI);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.GMTDATE)) {
        this.GMTDATE = data().deepCopy(fields()[51].schema(), other.GMTDATE);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.PAYEEACCOUNTTYPE)) {
        this.PAYEEACCOUNTTYPE = data().deepCopy(fields()[52].schema(), other.PAYEEACCOUNTTYPE);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.PAYERACCOUNTTYPE)) {
        this.PAYERACCOUNTTYPE = data().deepCopy(fields()[53].schema(), other.PAYERACCOUNTTYPE);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.PAYERCONSENTNAME)) {
        this.PAYERCONSENTNAME = data().deepCopy(fields()[54].schema(), other.PAYERCONSENTNAME);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.PAYERCONSENTTYPE)) {
        this.PAYERCONSENTTYPE = data().deepCopy(fields()[55].schema(), other.PAYERCONSENTTYPE);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.PAYERCONSENTVALUE)) {
        this.PAYERCONSENTVALUE = data().deepCopy(fields()[56].schema(), other.PAYERCONSENTVALUE);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.ADJCODE)) {
        this.ADJCODE = data().deepCopy(fields()[57].schema(), other.ADJCODE);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.ADJFLAG)) {
        this.ADJFLAG = data().deepCopy(fields()[58].schema(), other.ADJFLAG);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.CREATE_DATE)) {
        this.CREATE_DATE = data().deepCopy(fields()[59].schema(), other.CREATE_DATE);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.CREDITACCTNARRATION_103)) {
        this.CREDITACCTNARRATION_103 = data().deepCopy(fields()[60].schema(), other.CREDITACCTNARRATION_103);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.DE46)) {
        this.DE46 = data().deepCopy(fields()[61].schema(), other.DE46);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.DEBITACCTNARRATION_102)) {
        this.DEBITACCTNARRATION_102 = data().deepCopy(fields()[62].schema(), other.DEBITACCTNARRATION_102);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.GST)) {
        this.GST = data().deepCopy(fields()[63].schema(), other.GST);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.LOANNUMBER)) {
        this.LOANNUMBER = data().deepCopy(fields()[64].schema(), other.LOANNUMBER);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.LOCALTIME)) {
        this.LOCALTIME = data().deepCopy(fields()[65].schema(), other.LOCALTIME);
        fieldSetFlags()[65] = true;
      }
      if (isValidValue(fields()[66], other.NARRATION_125)) {
        this.NARRATION_125 = data().deepCopy(fields()[66].schema(), other.NARRATION_125);
        fieldSetFlags()[66] = true;
      }
      if (isValidValue(fields()[67], other.P2PTXNCHARGES)) {
        this.P2PTXNCHARGES = data().deepCopy(fields()[67].schema(), other.P2PTXNCHARGES);
        fieldSetFlags()[67] = true;
      }
      if (isValidValue(fields()[68], other.SCHEMECODE)) {
        this.SCHEMECODE = data().deepCopy(fields()[68].schema(), other.SCHEMECODE);
        fieldSetFlags()[68] = true;
      }
      if (isValidValue(fields()[69], other.TXNAMOUNT)) {
        this.TXNAMOUNT = data().deepCopy(fields()[69].schema(), other.TXNAMOUNT);
        fieldSetFlags()[69] = true;
      }
      if (isValidValue(fields()[70], other.BATCH_ID)) {
        this.BATCH_ID = data().deepCopy(fields()[70].schema(), other.BATCH_ID);
        fieldSetFlags()[70] = true;
      }
      if (isValidValue(fields()[71], other.BASEAMOUNT)) {
        this.BASEAMOUNT = data().deepCopy(fields()[71].schema(), other.BASEAMOUNT);
        fieldSetFlags()[71] = true;
      }
      if (isValidValue(fields()[72], other.BASECURR)) {
        this.BASECURR = data().deepCopy(fields()[72].schema(), other.BASECURR);
        fieldSetFlags()[72] = true;
      }
      if (isValidValue(fields()[73], other.CONCODE)) {
        this.CONCODE = data().deepCopy(fields()[73].schema(), other.CONCODE);
        fieldSetFlags()[73] = true;
      }
      if (isValidValue(fields()[74], other.FX)) {
        this.FX = data().deepCopy(fields()[74].schema(), other.FX);
        fieldSetFlags()[74] = true;
      }
      if (isValidValue(fields()[75], other.MKUP)) {
        this.MKUP = data().deepCopy(fields()[75].schema(), other.MKUP);
        fieldSetFlags()[75] = true;
      }
      if (isValidValue(fields()[76], other.ADDITIONAL4)) {
        this.ADDITIONAL4 = data().deepCopy(fields()[76].schema(), other.ADDITIONAL4);
        fieldSetFlags()[76] = true;
      }
      if (isValidValue(fields()[77], other.D12)) {
        this.D12 = data().deepCopy(fields()[77].schema(), other.D12);
        fieldSetFlags()[77] = true;
      }
      if (isValidValue(fields()[78], other.ADDITIONAL1)) {
        this.ADDITIONAL1 = data().deepCopy(fields()[78].schema(), other.ADDITIONAL1);
        fieldSetFlags()[78] = true;
      }
      if (isValidValue(fields()[79], other.ADDITIONAL2)) {
        this.ADDITIONAL2 = data().deepCopy(fields()[79].schema(), other.ADDITIONAL2);
        fieldSetFlags()[79] = true;
      }
      if (isValidValue(fields()[80], other.ADDITIONAL3)) {
        this.ADDITIONAL3 = data().deepCopy(fields()[80].schema(), other.ADDITIONAL3);
        fieldSetFlags()[80] = true;
      }
      if (isValidValue(fields()[81], other.ADDITIONAL5)) {
        this.ADDITIONAL5 = data().deepCopy(fields()[81].schema(), other.ADDITIONAL5);
        fieldSetFlags()[81] = true;
      }
      if (isValidValue(fields()[82], other.CBS_ROUTING)) {
        this.CBS_ROUTING = data().deepCopy(fields()[82].schema(), other.CBS_ROUTING);
        fieldSetFlags()[82] = true;
      }
    }

    /**
      * Gets the value of the 'ID' field.
      * @return The value.
      */
    public Double getID() {
      return ID;
    }


    /**
      * Sets the value of the 'ID' field.
      * @param value The value of 'ID'.
      * @return This builder.
      */
    public Builder setID(Double value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ID' field has been set.
      * @return True if the 'ID' field has been set, false otherwise.
      */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ID' field.
      * @return This builder.
      */
    public Builder clearID() {
      ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'AMOUNT' field.
      * @return The value.
      */
    public CharSequence getAMOUNT() {
      return AMOUNT;
    }


    /**
      * Sets the value of the 'AMOUNT' field.
      * @param value The value of 'AMOUNT'.
      * @return This builder.
      */
    public Builder setAMOUNT(CharSequence value) {
      validate(fields()[1], value);
      this.AMOUNT = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'AMOUNT' field has been set.
      * @return True if the 'AMOUNT' field has been set, false otherwise.
      */
    public boolean hasAMOUNT() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'AMOUNT' field.
      * @return This builder.
      */
    public Builder clearAMOUNT() {
      AMOUNT = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'CBSRC' field.
      * @return The value.
      */
    public CharSequence getCBSRC() {
      return CBSRC;
    }


    /**
      * Sets the value of the 'CBSRC' field.
      * @param value The value of 'CBSRC'.
      * @return This builder.
      */
    public Builder setCBSRC(CharSequence value) {
      validate(fields()[2], value);
      this.CBSRC = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'CBSRC' field has been set.
      * @return True if the 'CBSRC' field has been set, false otherwise.
      */
    public boolean hasCBSRC() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'CBSRC' field.
      * @return This builder.
      */
    public Builder clearCBSRC() {
      CBSRC = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'CREDITACCOUNT' field.
      * @return The value.
      */
    public CharSequence getCREDITACCOUNT() {
      return CREDITACCOUNT;
    }


    /**
      * Sets the value of the 'CREDITACCOUNT' field.
      * @param value The value of 'CREDITACCOUNT'.
      * @return This builder.
      */
    public Builder setCREDITACCOUNT(CharSequence value) {
      validate(fields()[3], value);
      this.CREDITACCOUNT = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'CREDITACCOUNT' field has been set.
      * @return True if the 'CREDITACCOUNT' field has been set, false otherwise.
      */
    public boolean hasCREDITACCOUNT() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'CREDITACCOUNT' field.
      * @return This builder.
      */
    public Builder clearCREDITACCOUNT() {
      CREDITACCOUNT = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'CUSTOMERID' field.
      * @return The value.
      */
    public CharSequence getCUSTOMERID() {
      return CUSTOMERID;
    }


    /**
      * Sets the value of the 'CUSTOMERID' field.
      * @param value The value of 'CUSTOMERID'.
      * @return This builder.
      */
    public Builder setCUSTOMERID(CharSequence value) {
      validate(fields()[4], value);
      this.CUSTOMERID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'CUSTOMERID' field has been set.
      * @return True if the 'CUSTOMERID' field has been set, false otherwise.
      */
    public boolean hasCUSTOMERID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'CUSTOMERID' field.
      * @return This builder.
      */
    public Builder clearCUSTOMERID() {
      CUSTOMERID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'DEBITACCOUNT' field.
      * @return The value.
      */
    public CharSequence getDEBITACCOUNT() {
      return DEBITACCOUNT;
    }


    /**
      * Sets the value of the 'DEBITACCOUNT' field.
      * @param value The value of 'DEBITACCOUNT'.
      * @return This builder.
      */
    public Builder setDEBITACCOUNT(CharSequence value) {
      validate(fields()[5], value);
      this.DEBITACCOUNT = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'DEBITACCOUNT' field has been set.
      * @return True if the 'DEBITACCOUNT' field has been set, false otherwise.
      */
    public boolean hasDEBITACCOUNT() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'DEBITACCOUNT' field.
      * @return This builder.
      */
    public Builder clearDEBITACCOUNT() {
      DEBITACCOUNT = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'MSGID' field.
      * @return The value.
      */
    public CharSequence getMSGID() {
      return MSGID;
    }


    /**
      * Sets the value of the 'MSGID' field.
      * @param value The value of 'MSGID'.
      * @return This builder.
      */
    public Builder setMSGID(CharSequence value) {
      validate(fields()[6], value);
      this.MSGID = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'MSGID' field has been set.
      * @return True if the 'MSGID' field has been set, false otherwise.
      */
    public boolean hasMSGID() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'MSGID' field.
      * @return This builder.
      */
    public Builder clearMSGID() {
      MSGID = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'REVERSAL' field.
      * @return The value.
      */
    public Long getREVERSAL() {
      return REVERSAL;
    }


    /**
      * Sets the value of the 'REVERSAL' field.
      * @param value The value of 'REVERSAL'.
      * @return This builder.
      */
    public Builder setREVERSAL(Long value) {
      validate(fields()[7], value);
      this.REVERSAL = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'REVERSAL' field has been set.
      * @return True if the 'REVERSAL' field has been set, false otherwise.
      */
    public boolean hasREVERSAL() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'REVERSAL' field.
      * @return This builder.
      */
    public Builder clearREVERSAL() {
      REVERSAL = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'REVERSALSTATUS' field.
      * @return The value.
      */
    public CharSequence getREVERSALSTATUS() {
      return REVERSALSTATUS;
    }


    /**
      * Sets the value of the 'REVERSALSTATUS' field.
      * @param value The value of 'REVERSALSTATUS'.
      * @return This builder.
      */
    public Builder setREVERSALSTATUS(CharSequence value) {
      validate(fields()[8], value);
      this.REVERSALSTATUS = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'REVERSALSTATUS' field has been set.
      * @return True if the 'REVERSALSTATUS' field has been set, false otherwise.
      */
    public boolean hasREVERSALSTATUS() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'REVERSALSTATUS' field.
      * @return This builder.
      */
    public Builder clearREVERSALSTATUS() {
      REVERSALSTATUS = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'RRN' field.
      * @return The value.
      */
    public CharSequence getRRN() {
      return RRN;
    }


    /**
      * Sets the value of the 'RRN' field.
      * @param value The value of 'RRN'.
      * @return This builder.
      */
    public Builder setRRN(CharSequence value) {
      validate(fields()[9], value);
      this.RRN = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'RRN' field has been set.
      * @return True if the 'RRN' field has been set, false otherwise.
      */
    public boolean hasRRN() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'RRN' field.
      * @return This builder.
      */
    public Builder clearRRN() {
      RRN = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'STAN' field.
      * @return The value.
      */
    public CharSequence getSTAN() {
      return STAN;
    }


    /**
      * Sets the value of the 'STAN' field.
      * @param value The value of 'STAN'.
      * @return This builder.
      */
    public Builder setSTAN(CharSequence value) {
      validate(fields()[10], value);
      this.STAN = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'STAN' field has been set.
      * @return True if the 'STAN' field has been set, false otherwise.
      */
    public boolean hasSTAN() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'STAN' field.
      * @return This builder.
      */
    public Builder clearSTAN() {
      STAN = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'TXN_DATE' field.
      * @return The value.
      */
    public CharSequence getTXNDATE() {
      return TXN_DATE;
    }


    /**
      * Sets the value of the 'TXN_DATE' field.
      * @param value The value of 'TXN_DATE'.
      * @return This builder.
      */
    public Builder setTXNDATE(CharSequence value) {
      validate(fields()[11], value);
      this.TXN_DATE = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'TXN_DATE' field has been set.
      * @return True if the 'TXN_DATE' field has been set, false otherwise.
      */
    public boolean hasTXNDATE() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'TXN_DATE' field.
      * @return This builder.
      */
    public Builder clearTXNDATE() {
      TXN_DATE = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'TXNID' field.
      * @return The value.
      */
    public CharSequence getTXNID() {
      return TXNID;
    }


    /**
      * Sets the value of the 'TXNID' field.
      * @param value The value of 'TXNID'.
      * @return This builder.
      */
    public Builder setTXNID(CharSequence value) {
      validate(fields()[12], value);
      this.TXNID = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'TXNID' field has been set.
      * @return True if the 'TXNID' field has been set, false otherwise.
      */
    public boolean hasTXNID() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'TXNID' field.
      * @return This builder.
      */
    public Builder clearTXNID() {
      TXNID = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'TYPE' field.
      * @return The value.
      */
    public CharSequence getTYPE() {
      return TYPE;
    }


    /**
      * Sets the value of the 'TYPE' field.
      * @param value The value of 'TYPE'.
      * @return This builder.
      */
    public Builder setTYPE(CharSequence value) {
      validate(fields()[13], value);
      this.TYPE = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'TYPE' field has been set.
      * @return True if the 'TYPE' field has been set, false otherwise.
      */
    public boolean hasTYPE() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'TYPE' field.
      * @return This builder.
      */
    public Builder clearTYPE() {
      TYPE = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'UPIRC' field.
      * @return The value.
      */
    public CharSequence getUPIRC() {
      return UPIRC;
    }


    /**
      * Sets the value of the 'UPIRC' field.
      * @param value The value of 'UPIRC'.
      * @return This builder.
      */
    public Builder setUPIRC(CharSequence value) {
      validate(fields()[14], value);
      this.UPIRC = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'UPIRC' field has been set.
      * @return True if the 'UPIRC' field has been set, false otherwise.
      */
    public boolean hasUPIRC() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'UPIRC' field.
      * @return This builder.
      */
    public Builder clearUPIRC() {
      UPIRC = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'ORGTXNID' field.
      * @return The value.
      */
    public CharSequence getORGTXNID() {
      return ORGTXNID;
    }


    /**
      * Sets the value of the 'ORGTXNID' field.
      * @param value The value of 'ORGTXNID'.
      * @return This builder.
      */
    public Builder setORGTXNID(CharSequence value) {
      validate(fields()[15], value);
      this.ORGTXNID = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'ORGTXNID' field has been set.
      * @return True if the 'ORGTXNID' field has been set, false otherwise.
      */
    public boolean hasORGTXNID() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'ORGTXNID' field.
      * @return This builder.
      */
    public Builder clearORGTXNID() {
      ORGTXNID = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'REMARKS' field.
      * @return The value.
      */
    public CharSequence getREMARKS() {
      return REMARKS;
    }


    /**
      * Sets the value of the 'REMARKS' field.
      * @param value The value of 'REMARKS'.
      * @return This builder.
      */
    public Builder setREMARKS(CharSequence value) {
      validate(fields()[16], value);
      this.REMARKS = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'REMARKS' field has been set.
      * @return True if the 'REMARKS' field has been set, false otherwise.
      */
    public boolean hasREMARKS() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'REMARKS' field.
      * @return This builder.
      */
    public Builder clearREMARKS() {
      REMARKS = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'CUSTOMERACCOUNT' field.
      * @return The value.
      */
    public CharSequence getCUSTOMERACCOUNT() {
      return CUSTOMERACCOUNT;
    }


    /**
      * Sets the value of the 'CUSTOMERACCOUNT' field.
      * @param value The value of 'CUSTOMERACCOUNT'.
      * @return This builder.
      */
    public Builder setCUSTOMERACCOUNT(CharSequence value) {
      validate(fields()[17], value);
      this.CUSTOMERACCOUNT = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'CUSTOMERACCOUNT' field has been set.
      * @return True if the 'CUSTOMERACCOUNT' field has been set, false otherwise.
      */
    public boolean hasCUSTOMERACCOUNT() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'CUSTOMERACCOUNT' field.
      * @return This builder.
      */
    public Builder clearCUSTOMERACCOUNT() {
      CUSTOMERACCOUNT = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'NAME' field.
      * @return The value.
      */
    public CharSequence getNAME() {
      return NAME;
    }


    /**
      * Sets the value of the 'NAME' field.
      * @param value The value of 'NAME'.
      * @return This builder.
      */
    public Builder setNAME(CharSequence value) {
      validate(fields()[18], value);
      this.NAME = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'NAME' field has been set.
      * @return True if the 'NAME' field has been set, false otherwise.
      */
    public boolean hasNAME() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'NAME' field.
      * @return This builder.
      */
    public Builder clearNAME() {
      NAME = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYEEVPA' field.
      * @return The value.
      */
    public CharSequence getPAYEEVPA() {
      return PAYEEVPA;
    }


    /**
      * Sets the value of the 'PAYEEVPA' field.
      * @param value The value of 'PAYEEVPA'.
      * @return This builder.
      */
    public Builder setPAYEEVPA(CharSequence value) {
      validate(fields()[19], value);
      this.PAYEEVPA = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYEEVPA' field has been set.
      * @return True if the 'PAYEEVPA' field has been set, false otherwise.
      */
    public boolean hasPAYEEVPA() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'PAYEEVPA' field.
      * @return This builder.
      */
    public Builder clearPAYEEVPA() {
      PAYEEVPA = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYERVPA' field.
      * @return The value.
      */
    public CharSequence getPAYERVPA() {
      return PAYERVPA;
    }


    /**
      * Sets the value of the 'PAYERVPA' field.
      * @param value The value of 'PAYERVPA'.
      * @return This builder.
      */
    public Builder setPAYERVPA(CharSequence value) {
      validate(fields()[20], value);
      this.PAYERVPA = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYERVPA' field has been set.
      * @return True if the 'PAYERVPA' field has been set, false otherwise.
      */
    public boolean hasPAYERVPA() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'PAYERVPA' field.
      * @return This builder.
      */
    public Builder clearPAYERVPA() {
      PAYERVPA = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'SEQNO' field.
      * @return The value.
      */
    public CharSequence getSEQNO() {
      return SEQNO;
    }


    /**
      * Sets the value of the 'SEQNO' field.
      * @param value The value of 'SEQNO'.
      * @return This builder.
      */
    public Builder setSEQNO(CharSequence value) {
      validate(fields()[21], value);
      this.SEQNO = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'SEQNO' field has been set.
      * @return True if the 'SEQNO' field has been set, false otherwise.
      */
    public boolean hasSEQNO() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'SEQNO' field.
      * @return This builder.
      */
    public Builder clearSEQNO() {
      SEQNO = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'COMMISSIONAMOUNT' field.
      * @return The value.
      */
    public CharSequence getCOMMISSIONAMOUNT() {
      return COMMISSIONAMOUNT;
    }


    /**
      * Sets the value of the 'COMMISSIONAMOUNT' field.
      * @param value The value of 'COMMISSIONAMOUNT'.
      * @return This builder.
      */
    public Builder setCOMMISSIONAMOUNT(CharSequence value) {
      validate(fields()[22], value);
      this.COMMISSIONAMOUNT = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'COMMISSIONAMOUNT' field has been set.
      * @return True if the 'COMMISSIONAMOUNT' field has been set, false otherwise.
      */
    public boolean hasCOMMISSIONAMOUNT() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'COMMISSIONAMOUNT' field.
      * @return This builder.
      */
    public Builder clearCOMMISSIONAMOUNT() {
      COMMISSIONAMOUNT = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'CUSTOMERREFID' field.
      * @return The value.
      */
    public CharSequence getCUSTOMERREFID() {
      return CUSTOMERREFID;
    }


    /**
      * Sets the value of the 'CUSTOMERREFID' field.
      * @param value The value of 'CUSTOMERREFID'.
      * @return This builder.
      */
    public Builder setCUSTOMERREFID(CharSequence value) {
      validate(fields()[23], value);
      this.CUSTOMERREFID = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'CUSTOMERREFID' field has been set.
      * @return True if the 'CUSTOMERREFID' field has been set, false otherwise.
      */
    public boolean hasCUSTOMERREFID() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'CUSTOMERREFID' field.
      * @return This builder.
      */
    public Builder clearCUSTOMERREFID() {
      CUSTOMERREFID = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'TRANTYPE' field.
      * @return The value.
      */
    public CharSequence getTRANTYPE() {
      return TRANTYPE;
    }


    /**
      * Sets the value of the 'TRANTYPE' field.
      * @param value The value of 'TRANTYPE'.
      * @return This builder.
      */
    public Builder setTRANTYPE(CharSequence value) {
      validate(fields()[24], value);
      this.TRANTYPE = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'TRANTYPE' field has been set.
      * @return True if the 'TRANTYPE' field has been set, false otherwise.
      */
    public boolean hasTRANTYPE() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'TRANTYPE' field.
      * @return This builder.
      */
    public Builder clearTRANTYPE() {
      TRANTYPE = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'CREDITBANKNAME' field.
      * @return The value.
      */
    public CharSequence getCREDITBANKNAME() {
      return CREDITBANKNAME;
    }


    /**
      * Sets the value of the 'CREDITBANKNAME' field.
      * @param value The value of 'CREDITBANKNAME'.
      * @return This builder.
      */
    public Builder setCREDITBANKNAME(CharSequence value) {
      validate(fields()[25], value);
      this.CREDITBANKNAME = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'CREDITBANKNAME' field has been set.
      * @return True if the 'CREDITBANKNAME' field has been set, false otherwise.
      */
    public boolean hasCREDITBANKNAME() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'CREDITBANKNAME' field.
      * @return This builder.
      */
    public Builder clearCREDITBANKNAME() {
      CREDITBANKNAME = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'DEBITBANKNAME' field.
      * @return The value.
      */
    public CharSequence getDEBITBANKNAME() {
      return DEBITBANKNAME;
    }


    /**
      * Sets the value of the 'DEBITBANKNAME' field.
      * @param value The value of 'DEBITBANKNAME'.
      * @return This builder.
      */
    public Builder setDEBITBANKNAME(CharSequence value) {
      validate(fields()[26], value);
      this.DEBITBANKNAME = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'DEBITBANKNAME' field has been set.
      * @return True if the 'DEBITBANKNAME' field has been set, false otherwise.
      */
    public boolean hasDEBITBANKNAME() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'DEBITBANKNAME' field.
      * @return This builder.
      */
    public Builder clearDEBITBANKNAME() {
      DEBITBANKNAME = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'OTHERSACCOUNT' field.
      * @return The value.
      */
    public CharSequence getOTHERSACCOUNT() {
      return OTHERSACCOUNT;
    }


    /**
      * Sets the value of the 'OTHERSACCOUNT' field.
      * @param value The value of 'OTHERSACCOUNT'.
      * @return This builder.
      */
    public Builder setOTHERSACCOUNT(CharSequence value) {
      validate(fields()[27], value);
      this.OTHERSACCOUNT = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'OTHERSACCOUNT' field has been set.
      * @return True if the 'OTHERSACCOUNT' field has been set, false otherwise.
      */
    public boolean hasOTHERSACCOUNT() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'OTHERSACCOUNT' field.
      * @return This builder.
      */
    public Builder clearOTHERSACCOUNT() {
      OTHERSACCOUNT = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'CHANNEL' field.
      * @return The value.
      */
    public CharSequence getCHANNEL() {
      return CHANNEL;
    }


    /**
      * Sets the value of the 'CHANNEL' field.
      * @param value The value of 'CHANNEL'.
      * @return This builder.
      */
    public Builder setCHANNEL(CharSequence value) {
      validate(fields()[28], value);
      this.CHANNEL = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'CHANNEL' field has been set.
      * @return True if the 'CHANNEL' field has been set, false otherwise.
      */
    public boolean hasCHANNEL() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'CHANNEL' field.
      * @return This builder.
      */
    public Builder clearCHANNEL() {
      CHANNEL = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'APPID' field.
      * @return The value.
      */
    public CharSequence getAPPID() {
      return APPID;
    }


    /**
      * Sets the value of the 'APPID' field.
      * @param value The value of 'APPID'.
      * @return This builder.
      */
    public Builder setAPPID(CharSequence value) {
      validate(fields()[29], value);
      this.APPID = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'APPID' field has been set.
      * @return True if the 'APPID' field has been set, false otherwise.
      */
    public boolean hasAPPID() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'APPID' field.
      * @return This builder.
      */
    public Builder clearAPPID() {
      APPID = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'PREAPPROVED' field.
      * @return The value.
      */
    public CharSequence getPREAPPROVED() {
      return PREAPPROVED;
    }


    /**
      * Sets the value of the 'PREAPPROVED' field.
      * @param value The value of 'PREAPPROVED'.
      * @return This builder.
      */
    public Builder setPREAPPROVED(CharSequence value) {
      validate(fields()[30], value);
      this.PREAPPROVED = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'PREAPPROVED' field has been set.
      * @return True if the 'PREAPPROVED' field has been set, false otherwise.
      */
    public boolean hasPREAPPROVED() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'PREAPPROVED' field.
      * @return This builder.
      */
    public Builder clearPREAPPROVED() {
      PREAPPROVED = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'BENEFICIARYNAME' field.
      * @return The value.
      */
    public CharSequence getBENEFICIARYNAME() {
      return BENEFICIARYNAME;
    }


    /**
      * Sets the value of the 'BENEFICIARYNAME' field.
      * @param value The value of 'BENEFICIARYNAME'.
      * @return This builder.
      */
    public Builder setBENEFICIARYNAME(CharSequence value) {
      validate(fields()[31], value);
      this.BENEFICIARYNAME = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'BENEFICIARYNAME' field has been set.
      * @return True if the 'BENEFICIARYNAME' field has been set, false otherwise.
      */
    public boolean hasBENEFICIARYNAME() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'BENEFICIARYNAME' field.
      * @return This builder.
      */
    public Builder clearBENEFICIARYNAME() {
      BENEFICIARYNAME = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'OTHERMOBILENO' field.
      * @return The value.
      */
    public CharSequence getOTHERMOBILENO() {
      return OTHERMOBILENO;
    }


    /**
      * Sets the value of the 'OTHERMOBILENO' field.
      * @param value The value of 'OTHERMOBILENO'.
      * @return This builder.
      */
    public Builder setOTHERMOBILENO(CharSequence value) {
      validate(fields()[32], value);
      this.OTHERMOBILENO = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'OTHERMOBILENO' field has been set.
      * @return True if the 'OTHERMOBILENO' field has been set, false otherwise.
      */
    public boolean hasOTHERMOBILENO() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'OTHERMOBILENO' field.
      * @return This builder.
      */
    public Builder clearOTHERMOBILENO() {
      OTHERMOBILENO = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'REMITTERNAME' field.
      * @return The value.
      */
    public CharSequence getREMITTERNAME() {
      return REMITTERNAME;
    }


    /**
      * Sets the value of the 'REMITTERNAME' field.
      * @param value The value of 'REMITTERNAME'.
      * @return This builder.
      */
    public Builder setREMITTERNAME(CharSequence value) {
      validate(fields()[33], value);
      this.REMITTERNAME = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'REMITTERNAME' field has been set.
      * @return True if the 'REMITTERNAME' field has been set, false otherwise.
      */
    public boolean hasREMITTERNAME() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'REMITTERNAME' field.
      * @return This builder.
      */
    public Builder clearREMITTERNAME() {
      REMITTERNAME = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'APPROVALNUM' field.
      * @return The value.
      */
    public CharSequence getAPPROVALNUM() {
      return APPROVALNUM;
    }


    /**
      * Sets the value of the 'APPROVALNUM' field.
      * @param value The value of 'APPROVALNUM'.
      * @return This builder.
      */
    public Builder setAPPROVALNUM(CharSequence value) {
      validate(fields()[34], value);
      this.APPROVALNUM = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'APPROVALNUM' field has been set.
      * @return True if the 'APPROVALNUM' field has been set, false otherwise.
      */
    public boolean hasAPPROVALNUM() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'APPROVALNUM' field.
      * @return This builder.
      */
    public Builder clearAPPROVALNUM() {
      APPROVALNUM = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'MCCCODE' field.
      * @return The value.
      */
    public CharSequence getMCCCODE() {
      return MCCCODE;
    }


    /**
      * Sets the value of the 'MCCCODE' field.
      * @param value The value of 'MCCCODE'.
      * @return This builder.
      */
    public Builder setMCCCODE(CharSequence value) {
      validate(fields()[35], value);
      this.MCCCODE = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'MCCCODE' field has been set.
      * @return True if the 'MCCCODE' field has been set, false otherwise.
      */
    public boolean hasMCCCODE() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'MCCCODE' field.
      * @return This builder.
      */
    public Builder clearMCCCODE() {
      MCCCODE = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'SERVERIP' field.
      * @return The value.
      */
    public CharSequence getSERVERIP() {
      return SERVERIP;
    }


    /**
      * Sets the value of the 'SERVERIP' field.
      * @param value The value of 'SERVERIP'.
      * @return This builder.
      */
    public Builder setSERVERIP(CharSequence value) {
      validate(fields()[36], value);
      this.SERVERIP = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'SERVERIP' field has been set.
      * @return True if the 'SERVERIP' field has been set, false otherwise.
      */
    public boolean hasSERVERIP() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'SERVERIP' field.
      * @return This builder.
      */
    public Builder clearSERVERIP() {
      SERVERIP = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'CBSRESP_DATE' field.
      * @return The value.
      */
    public CharSequence getCBSRESPDATE() {
      return CBSRESP_DATE;
    }


    /**
      * Sets the value of the 'CBSRESP_DATE' field.
      * @param value The value of 'CBSRESP_DATE'.
      * @return This builder.
      */
    public Builder setCBSRESPDATE(CharSequence value) {
      validate(fields()[37], value);
      this.CBSRESP_DATE = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'CBSRESP_DATE' field has been set.
      * @return True if the 'CBSRESP_DATE' field has been set, false otherwise.
      */
    public boolean hasCBSRESPDATE() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'CBSRESP_DATE' field.
      * @return This builder.
      */
    public Builder clearCBSRESPDATE() {
      CBSRESP_DATE = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'INITMODE' field.
      * @return The value.
      */
    public CharSequence getINITMODE() {
      return INITMODE;
    }


    /**
      * Sets the value of the 'INITMODE' field.
      * @param value The value of 'INITMODE'.
      * @return This builder.
      */
    public Builder setINITMODE(CharSequence value) {
      validate(fields()[38], value);
      this.INITMODE = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'INITMODE' field has been set.
      * @return True if the 'INITMODE' field has been set, false otherwise.
      */
    public boolean hasINITMODE() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'INITMODE' field.
      * @return This builder.
      */
    public Builder clearINITMODE() {
      INITMODE = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'PURPOSECODE' field.
      * @return The value.
      */
    public CharSequence getPURPOSECODE() {
      return PURPOSECODE;
    }


    /**
      * Sets the value of the 'PURPOSECODE' field.
      * @param value The value of 'PURPOSECODE'.
      * @return This builder.
      */
    public Builder setPURPOSECODE(CharSequence value) {
      validate(fields()[39], value);
      this.PURPOSECODE = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'PURPOSECODE' field has been set.
      * @return True if the 'PURPOSECODE' field has been set, false otherwise.
      */
    public boolean hasPURPOSECODE() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'PURPOSECODE' field.
      * @return This builder.
      */
    public Builder clearPURPOSECODE() {
      PURPOSECODE = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'CREDITACCOUNTTYPE' field.
      * @return The value.
      */
    public CharSequence getCREDITACCOUNTTYPE() {
      return CREDITACCOUNTTYPE;
    }


    /**
      * Sets the value of the 'CREDITACCOUNTTYPE' field.
      * @param value The value of 'CREDITACCOUNTTYPE'.
      * @return This builder.
      */
    public Builder setCREDITACCOUNTTYPE(CharSequence value) {
      validate(fields()[40], value);
      this.CREDITACCOUNTTYPE = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'CREDITACCOUNTTYPE' field has been set.
      * @return True if the 'CREDITACCOUNTTYPE' field has been set, false otherwise.
      */
    public boolean hasCREDITACCOUNTTYPE() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'CREDITACCOUNTTYPE' field.
      * @return This builder.
      */
    public Builder clearCREDITACCOUNTTYPE() {
      CREDITACCOUNTTYPE = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'CREDITIFSC' field.
      * @return The value.
      */
    public CharSequence getCREDITIFSC() {
      return CREDITIFSC;
    }


    /**
      * Sets the value of the 'CREDITIFSC' field.
      * @param value The value of 'CREDITIFSC'.
      * @return This builder.
      */
    public Builder setCREDITIFSC(CharSequence value) {
      validate(fields()[41], value);
      this.CREDITIFSC = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'CREDITIFSC' field has been set.
      * @return True if the 'CREDITIFSC' field has been set, false otherwise.
      */
    public boolean hasCREDITIFSC() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'CREDITIFSC' field.
      * @return This builder.
      */
    public Builder clearCREDITIFSC() {
      CREDITIFSC = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'DEBITACCOUNTTYPE' field.
      * @return The value.
      */
    public CharSequence getDEBITACCOUNTTYPE() {
      return DEBITACCOUNTTYPE;
    }


    /**
      * Sets the value of the 'DEBITACCOUNTTYPE' field.
      * @param value The value of 'DEBITACCOUNTTYPE'.
      * @return This builder.
      */
    public Builder setDEBITACCOUNTTYPE(CharSequence value) {
      validate(fields()[42], value);
      this.DEBITACCOUNTTYPE = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'DEBITACCOUNTTYPE' field has been set.
      * @return True if the 'DEBITACCOUNTTYPE' field has been set, false otherwise.
      */
    public boolean hasDEBITACCOUNTTYPE() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'DEBITACCOUNTTYPE' field.
      * @return This builder.
      */
    public Builder clearDEBITACCOUNTTYPE() {
      DEBITACCOUNTTYPE = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'DEBITIFSC' field.
      * @return The value.
      */
    public CharSequence getDEBITIFSC() {
      return DEBITIFSC;
    }


    /**
      * Sets the value of the 'DEBITIFSC' field.
      * @param value The value of 'DEBITIFSC'.
      * @return This builder.
      */
    public Builder setDEBITIFSC(CharSequence value) {
      validate(fields()[43], value);
      this.DEBITIFSC = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'DEBITIFSC' field has been set.
      * @return True if the 'DEBITIFSC' field has been set, false otherwise.
      */
    public boolean hasDEBITIFSC() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'DEBITIFSC' field.
      * @return This builder.
      */
    public Builder clearDEBITIFSC() {
      DEBITIFSC = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'ORDERID' field.
      * @return The value.
      */
    public CharSequence getORDERID() {
      return ORDERID;
    }


    /**
      * Sets the value of the 'ORDERID' field.
      * @param value The value of 'ORDERID'.
      * @return This builder.
      */
    public Builder setORDERID(CharSequence value) {
      validate(fields()[44], value);
      this.ORDERID = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'ORDERID' field has been set.
      * @return True if the 'ORDERID' field has been set, false otherwise.
      */
    public boolean hasORDERID() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'ORDERID' field.
      * @return This builder.
      */
    public Builder clearORDERID() {
      ORDERID = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYEECODE' field.
      * @return The value.
      */
    public CharSequence getPAYEECODE() {
      return PAYEECODE;
    }


    /**
      * Sets the value of the 'PAYEECODE' field.
      * @param value The value of 'PAYEECODE'.
      * @return This builder.
      */
    public Builder setPAYEECODE(CharSequence value) {
      validate(fields()[45], value);
      this.PAYEECODE = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYEECODE' field has been set.
      * @return True if the 'PAYEECODE' field has been set, false otherwise.
      */
    public boolean hasPAYEECODE() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'PAYEECODE' field.
      * @return This builder.
      */
    public Builder clearPAYEECODE() {
      PAYEECODE = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYERCODE' field.
      * @return The value.
      */
    public CharSequence getPAYERCODE() {
      return PAYERCODE;
    }


    /**
      * Sets the value of the 'PAYERCODE' field.
      * @param value The value of 'PAYERCODE'.
      * @return This builder.
      */
    public Builder setPAYERCODE(CharSequence value) {
      validate(fields()[46], value);
      this.PAYERCODE = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYERCODE' field has been set.
      * @return True if the 'PAYERCODE' field has been set, false otherwise.
      */
    public boolean hasPAYERCODE() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'PAYERCODE' field.
      * @return This builder.
      */
    public Builder clearPAYERCODE() {
      PAYERCODE = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'SUBTYPE' field.
      * @return The value.
      */
    public CharSequence getSUBTYPE() {
      return SUBTYPE;
    }


    /**
      * Sets the value of the 'SUBTYPE' field.
      * @param value The value of 'SUBTYPE'.
      * @return This builder.
      */
    public Builder setSUBTYPE(CharSequence value) {
      validate(fields()[47], value);
      this.SUBTYPE = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'SUBTYPE' field has been set.
      * @return True if the 'SUBTYPE' field has been set, false otherwise.
      */
    public boolean hasSUBTYPE() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'SUBTYPE' field.
      * @return This builder.
      */
    public Builder clearSUBTYPE() {
      SUBTYPE = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'REMITTORMOBILENUMBER' field.
      * @return The value.
      */
    public CharSequence getREMITTORMOBILENUMBER() {
      return REMITTORMOBILENUMBER;
    }


    /**
      * Sets the value of the 'REMITTORMOBILENUMBER' field.
      * @param value The value of 'REMITTORMOBILENUMBER'.
      * @return This builder.
      */
    public Builder setREMITTORMOBILENUMBER(CharSequence value) {
      validate(fields()[48], value);
      this.REMITTORMOBILENUMBER = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'REMITTORMOBILENUMBER' field has been set.
      * @return True if the 'REMITTORMOBILENUMBER' field has been set, false otherwise.
      */
    public boolean hasREMITTORMOBILENUMBER() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'REMITTORMOBILENUMBER' field.
      * @return This builder.
      */
    public Builder clearREMITTORMOBILENUMBER() {
      REMITTORMOBILENUMBER = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYEEIMEI' field.
      * @return The value.
      */
    public CharSequence getPAYEEIMEI() {
      return PAYEEIMEI;
    }


    /**
      * Sets the value of the 'PAYEEIMEI' field.
      * @param value The value of 'PAYEEIMEI'.
      * @return This builder.
      */
    public Builder setPAYEEIMEI(CharSequence value) {
      validate(fields()[49], value);
      this.PAYEEIMEI = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYEEIMEI' field has been set.
      * @return True if the 'PAYEEIMEI' field has been set, false otherwise.
      */
    public boolean hasPAYEEIMEI() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'PAYEEIMEI' field.
      * @return This builder.
      */
    public Builder clearPAYEEIMEI() {
      PAYEEIMEI = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYERIMEI' field.
      * @return The value.
      */
    public CharSequence getPAYERIMEI() {
      return PAYERIMEI;
    }


    /**
      * Sets the value of the 'PAYERIMEI' field.
      * @param value The value of 'PAYERIMEI'.
      * @return This builder.
      */
    public Builder setPAYERIMEI(CharSequence value) {
      validate(fields()[50], value);
      this.PAYERIMEI = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYERIMEI' field has been set.
      * @return True if the 'PAYERIMEI' field has been set, false otherwise.
      */
    public boolean hasPAYERIMEI() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'PAYERIMEI' field.
      * @return This builder.
      */
    public Builder clearPAYERIMEI() {
      PAYERIMEI = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'GMTDATE' field.
      * @return The value.
      */
    public CharSequence getGMTDATE() {
      return GMTDATE;
    }


    /**
      * Sets the value of the 'GMTDATE' field.
      * @param value The value of 'GMTDATE'.
      * @return This builder.
      */
    public Builder setGMTDATE(CharSequence value) {
      validate(fields()[51], value);
      this.GMTDATE = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'GMTDATE' field has been set.
      * @return True if the 'GMTDATE' field has been set, false otherwise.
      */
    public boolean hasGMTDATE() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'GMTDATE' field.
      * @return This builder.
      */
    public Builder clearGMTDATE() {
      GMTDATE = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYEEACCOUNTTYPE' field.
      * @return The value.
      */
    public CharSequence getPAYEEACCOUNTTYPE() {
      return PAYEEACCOUNTTYPE;
    }


    /**
      * Sets the value of the 'PAYEEACCOUNTTYPE' field.
      * @param value The value of 'PAYEEACCOUNTTYPE'.
      * @return This builder.
      */
    public Builder setPAYEEACCOUNTTYPE(CharSequence value) {
      validate(fields()[52], value);
      this.PAYEEACCOUNTTYPE = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYEEACCOUNTTYPE' field has been set.
      * @return True if the 'PAYEEACCOUNTTYPE' field has been set, false otherwise.
      */
    public boolean hasPAYEEACCOUNTTYPE() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'PAYEEACCOUNTTYPE' field.
      * @return This builder.
      */
    public Builder clearPAYEEACCOUNTTYPE() {
      PAYEEACCOUNTTYPE = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYERACCOUNTTYPE' field.
      * @return The value.
      */
    public CharSequence getPAYERACCOUNTTYPE() {
      return PAYERACCOUNTTYPE;
    }


    /**
      * Sets the value of the 'PAYERACCOUNTTYPE' field.
      * @param value The value of 'PAYERACCOUNTTYPE'.
      * @return This builder.
      */
    public Builder setPAYERACCOUNTTYPE(CharSequence value) {
      validate(fields()[53], value);
      this.PAYERACCOUNTTYPE = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYERACCOUNTTYPE' field has been set.
      * @return True if the 'PAYERACCOUNTTYPE' field has been set, false otherwise.
      */
    public boolean hasPAYERACCOUNTTYPE() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'PAYERACCOUNTTYPE' field.
      * @return This builder.
      */
    public Builder clearPAYERACCOUNTTYPE() {
      PAYERACCOUNTTYPE = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYERCONSENTNAME' field.
      * @return The value.
      */
    public CharSequence getPAYERCONSENTNAME() {
      return PAYERCONSENTNAME;
    }


    /**
      * Sets the value of the 'PAYERCONSENTNAME' field.
      * @param value The value of 'PAYERCONSENTNAME'.
      * @return This builder.
      */
    public Builder setPAYERCONSENTNAME(CharSequence value) {
      validate(fields()[54], value);
      this.PAYERCONSENTNAME = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYERCONSENTNAME' field has been set.
      * @return True if the 'PAYERCONSENTNAME' field has been set, false otherwise.
      */
    public boolean hasPAYERCONSENTNAME() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'PAYERCONSENTNAME' field.
      * @return This builder.
      */
    public Builder clearPAYERCONSENTNAME() {
      PAYERCONSENTNAME = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYERCONSENTTYPE' field.
      * @return The value.
      */
    public CharSequence getPAYERCONSENTTYPE() {
      return PAYERCONSENTTYPE;
    }


    /**
      * Sets the value of the 'PAYERCONSENTTYPE' field.
      * @param value The value of 'PAYERCONSENTTYPE'.
      * @return This builder.
      */
    public Builder setPAYERCONSENTTYPE(CharSequence value) {
      validate(fields()[55], value);
      this.PAYERCONSENTTYPE = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYERCONSENTTYPE' field has been set.
      * @return True if the 'PAYERCONSENTTYPE' field has been set, false otherwise.
      */
    public boolean hasPAYERCONSENTTYPE() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'PAYERCONSENTTYPE' field.
      * @return This builder.
      */
    public Builder clearPAYERCONSENTTYPE() {
      PAYERCONSENTTYPE = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'PAYERCONSENTVALUE' field.
      * @return The value.
      */
    public CharSequence getPAYERCONSENTVALUE() {
      return PAYERCONSENTVALUE;
    }


    /**
      * Sets the value of the 'PAYERCONSENTVALUE' field.
      * @param value The value of 'PAYERCONSENTVALUE'.
      * @return This builder.
      */
    public Builder setPAYERCONSENTVALUE(CharSequence value) {
      validate(fields()[56], value);
      this.PAYERCONSENTVALUE = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'PAYERCONSENTVALUE' field has been set.
      * @return True if the 'PAYERCONSENTVALUE' field has been set, false otherwise.
      */
    public boolean hasPAYERCONSENTVALUE() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'PAYERCONSENTVALUE' field.
      * @return This builder.
      */
    public Builder clearPAYERCONSENTVALUE() {
      PAYERCONSENTVALUE = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADJCODE' field.
      * @return The value.
      */
    public CharSequence getADJCODE() {
      return ADJCODE;
    }


    /**
      * Sets the value of the 'ADJCODE' field.
      * @param value The value of 'ADJCODE'.
      * @return This builder.
      */
    public Builder setADJCODE(CharSequence value) {
      validate(fields()[57], value);
      this.ADJCODE = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'ADJCODE' field has been set.
      * @return True if the 'ADJCODE' field has been set, false otherwise.
      */
    public boolean hasADJCODE() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'ADJCODE' field.
      * @return This builder.
      */
    public Builder clearADJCODE() {
      ADJCODE = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADJFLAG' field.
      * @return The value.
      */
    public CharSequence getADJFLAG() {
      return ADJFLAG;
    }


    /**
      * Sets the value of the 'ADJFLAG' field.
      * @param value The value of 'ADJFLAG'.
      * @return This builder.
      */
    public Builder setADJFLAG(CharSequence value) {
      validate(fields()[58], value);
      this.ADJFLAG = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'ADJFLAG' field has been set.
      * @return True if the 'ADJFLAG' field has been set, false otherwise.
      */
    public boolean hasADJFLAG() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'ADJFLAG' field.
      * @return This builder.
      */
    public Builder clearADJFLAG() {
      ADJFLAG = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'CREATE_DATE' field.
      * @return The value.
      */
    public CharSequence getCREATEDATE() {
      return CREATE_DATE;
    }


    /**
      * Sets the value of the 'CREATE_DATE' field.
      * @param value The value of 'CREATE_DATE'.
      * @return This builder.
      */
    public Builder setCREATEDATE(CharSequence value) {
      validate(fields()[59], value);
      this.CREATE_DATE = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'CREATE_DATE' field has been set.
      * @return True if the 'CREATE_DATE' field has been set, false otherwise.
      */
    public boolean hasCREATEDATE() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'CREATE_DATE' field.
      * @return This builder.
      */
    public Builder clearCREATEDATE() {
      CREATE_DATE = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'CREDITACCTNARRATION_103' field.
      * @return The value.
      */
    public CharSequence getCREDITACCTNARRATION103() {
      return CREDITACCTNARRATION_103;
    }


    /**
      * Sets the value of the 'CREDITACCTNARRATION_103' field.
      * @param value The value of 'CREDITACCTNARRATION_103'.
      * @return This builder.
      */
    public Builder setCREDITACCTNARRATION103(CharSequence value) {
      validate(fields()[60], value);
      this.CREDITACCTNARRATION_103 = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'CREDITACCTNARRATION_103' field has been set.
      * @return True if the 'CREDITACCTNARRATION_103' field has been set, false otherwise.
      */
    public boolean hasCREDITACCTNARRATION103() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'CREDITACCTNARRATION_103' field.
      * @return This builder.
      */
    public Builder clearCREDITACCTNARRATION103() {
      CREDITACCTNARRATION_103 = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'DE46' field.
      * @return The value.
      */
    public CharSequence getDE46() {
      return DE46;
    }


    /**
      * Sets the value of the 'DE46' field.
      * @param value The value of 'DE46'.
      * @return This builder.
      */
    public Builder setDE46(CharSequence value) {
      validate(fields()[61], value);
      this.DE46 = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'DE46' field has been set.
      * @return True if the 'DE46' field has been set, false otherwise.
      */
    public boolean hasDE46() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'DE46' field.
      * @return This builder.
      */
    public Builder clearDE46() {
      DE46 = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'DEBITACCTNARRATION_102' field.
      * @return The value.
      */
    public CharSequence getDEBITACCTNARRATION102() {
      return DEBITACCTNARRATION_102;
    }


    /**
      * Sets the value of the 'DEBITACCTNARRATION_102' field.
      * @param value The value of 'DEBITACCTNARRATION_102'.
      * @return This builder.
      */
    public Builder setDEBITACCTNARRATION102(CharSequence value) {
      validate(fields()[62], value);
      this.DEBITACCTNARRATION_102 = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'DEBITACCTNARRATION_102' field has been set.
      * @return True if the 'DEBITACCTNARRATION_102' field has been set, false otherwise.
      */
    public boolean hasDEBITACCTNARRATION102() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'DEBITACCTNARRATION_102' field.
      * @return This builder.
      */
    public Builder clearDEBITACCTNARRATION102() {
      DEBITACCTNARRATION_102 = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /**
      * Gets the value of the 'GST' field.
      * @return The value.
      */
    public CharSequence getGST() {
      return GST;
    }


    /**
      * Sets the value of the 'GST' field.
      * @param value The value of 'GST'.
      * @return This builder.
      */
    public Builder setGST(CharSequence value) {
      validate(fields()[63], value);
      this.GST = value;
      fieldSetFlags()[63] = true;
      return this;
    }

    /**
      * Checks whether the 'GST' field has been set.
      * @return True if the 'GST' field has been set, false otherwise.
      */
    public boolean hasGST() {
      return fieldSetFlags()[63];
    }


    /**
      * Clears the value of the 'GST' field.
      * @return This builder.
      */
    public Builder clearGST() {
      GST = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOANNUMBER' field.
      * @return The value.
      */
    public CharSequence getLOANNUMBER() {
      return LOANNUMBER;
    }


    /**
      * Sets the value of the 'LOANNUMBER' field.
      * @param value The value of 'LOANNUMBER'.
      * @return This builder.
      */
    public Builder setLOANNUMBER(CharSequence value) {
      validate(fields()[64], value);
      this.LOANNUMBER = value;
      fieldSetFlags()[64] = true;
      return this;
    }

    /**
      * Checks whether the 'LOANNUMBER' field has been set.
      * @return True if the 'LOANNUMBER' field has been set, false otherwise.
      */
    public boolean hasLOANNUMBER() {
      return fieldSetFlags()[64];
    }


    /**
      * Clears the value of the 'LOANNUMBER' field.
      * @return This builder.
      */
    public Builder clearLOANNUMBER() {
      LOANNUMBER = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOCALTIME' field.
      * @return The value.
      */
    public CharSequence getLOCALTIME() {
      return LOCALTIME;
    }


    /**
      * Sets the value of the 'LOCALTIME' field.
      * @param value The value of 'LOCALTIME'.
      * @return This builder.
      */
    public Builder setLOCALTIME(CharSequence value) {
      validate(fields()[65], value);
      this.LOCALTIME = value;
      fieldSetFlags()[65] = true;
      return this;
    }

    /**
      * Checks whether the 'LOCALTIME' field has been set.
      * @return True if the 'LOCALTIME' field has been set, false otherwise.
      */
    public boolean hasLOCALTIME() {
      return fieldSetFlags()[65];
    }


    /**
      * Clears the value of the 'LOCALTIME' field.
      * @return This builder.
      */
    public Builder clearLOCALTIME() {
      LOCALTIME = null;
      fieldSetFlags()[65] = false;
      return this;
    }

    /**
      * Gets the value of the 'NARRATION_125' field.
      * @return The value.
      */
    public CharSequence getNARRATION125() {
      return NARRATION_125;
    }


    /**
      * Sets the value of the 'NARRATION_125' field.
      * @param value The value of 'NARRATION_125'.
      * @return This builder.
      */
    public Builder setNARRATION125(CharSequence value) {
      validate(fields()[66], value);
      this.NARRATION_125 = value;
      fieldSetFlags()[66] = true;
      return this;
    }

    /**
      * Checks whether the 'NARRATION_125' field has been set.
      * @return True if the 'NARRATION_125' field has been set, false otherwise.
      */
    public boolean hasNARRATION125() {
      return fieldSetFlags()[66];
    }


    /**
      * Clears the value of the 'NARRATION_125' field.
      * @return This builder.
      */
    public Builder clearNARRATION125() {
      NARRATION_125 = null;
      fieldSetFlags()[66] = false;
      return this;
    }

    /**
      * Gets the value of the 'P2PTXNCHARGES' field.
      * @return The value.
      */
    public CharSequence getP2PTXNCHARGES() {
      return P2PTXNCHARGES;
    }


    /**
      * Sets the value of the 'P2PTXNCHARGES' field.
      * @param value The value of 'P2PTXNCHARGES'.
      * @return This builder.
      */
    public Builder setP2PTXNCHARGES(CharSequence value) {
      validate(fields()[67], value);
      this.P2PTXNCHARGES = value;
      fieldSetFlags()[67] = true;
      return this;
    }

    /**
      * Checks whether the 'P2PTXNCHARGES' field has been set.
      * @return True if the 'P2PTXNCHARGES' field has been set, false otherwise.
      */
    public boolean hasP2PTXNCHARGES() {
      return fieldSetFlags()[67];
    }


    /**
      * Clears the value of the 'P2PTXNCHARGES' field.
      * @return This builder.
      */
    public Builder clearP2PTXNCHARGES() {
      P2PTXNCHARGES = null;
      fieldSetFlags()[67] = false;
      return this;
    }

    /**
      * Gets the value of the 'SCHEMECODE' field.
      * @return The value.
      */
    public CharSequence getSCHEMECODE() {
      return SCHEMECODE;
    }


    /**
      * Sets the value of the 'SCHEMECODE' field.
      * @param value The value of 'SCHEMECODE'.
      * @return This builder.
      */
    public Builder setSCHEMECODE(CharSequence value) {
      validate(fields()[68], value);
      this.SCHEMECODE = value;
      fieldSetFlags()[68] = true;
      return this;
    }

    /**
      * Checks whether the 'SCHEMECODE' field has been set.
      * @return True if the 'SCHEMECODE' field has been set, false otherwise.
      */
    public boolean hasSCHEMECODE() {
      return fieldSetFlags()[68];
    }


    /**
      * Clears the value of the 'SCHEMECODE' field.
      * @return This builder.
      */
    public Builder clearSCHEMECODE() {
      SCHEMECODE = null;
      fieldSetFlags()[68] = false;
      return this;
    }

    /**
      * Gets the value of the 'TXNAMOUNT' field.
      * @return The value.
      */
    public CharSequence getTXNAMOUNT() {
      return TXNAMOUNT;
    }


    /**
      * Sets the value of the 'TXNAMOUNT' field.
      * @param value The value of 'TXNAMOUNT'.
      * @return This builder.
      */
    public Builder setTXNAMOUNT(CharSequence value) {
      validate(fields()[69], value);
      this.TXNAMOUNT = value;
      fieldSetFlags()[69] = true;
      return this;
    }

    /**
      * Checks whether the 'TXNAMOUNT' field has been set.
      * @return True if the 'TXNAMOUNT' field has been set, false otherwise.
      */
    public boolean hasTXNAMOUNT() {
      return fieldSetFlags()[69];
    }


    /**
      * Clears the value of the 'TXNAMOUNT' field.
      * @return This builder.
      */
    public Builder clearTXNAMOUNT() {
      TXNAMOUNT = null;
      fieldSetFlags()[69] = false;
      return this;
    }

    /**
      * Gets the value of the 'BATCH_ID' field.
      * @return The value.
      */
    public CharSequence getBATCHID() {
      return BATCH_ID;
    }


    /**
      * Sets the value of the 'BATCH_ID' field.
      * @param value The value of 'BATCH_ID'.
      * @return This builder.
      */
    public Builder setBATCHID(CharSequence value) {
      validate(fields()[70], value);
      this.BATCH_ID = value;
      fieldSetFlags()[70] = true;
      return this;
    }

    /**
      * Checks whether the 'BATCH_ID' field has been set.
      * @return True if the 'BATCH_ID' field has been set, false otherwise.
      */
    public boolean hasBATCHID() {
      return fieldSetFlags()[70];
    }


    /**
      * Clears the value of the 'BATCH_ID' field.
      * @return This builder.
      */
    public Builder clearBATCHID() {
      BATCH_ID = null;
      fieldSetFlags()[70] = false;
      return this;
    }

    /**
      * Gets the value of the 'BASEAMOUNT' field.
      * @return The value.
      */
    public CharSequence getBASEAMOUNT() {
      return BASEAMOUNT;
    }


    /**
      * Sets the value of the 'BASEAMOUNT' field.
      * @param value The value of 'BASEAMOUNT'.
      * @return This builder.
      */
    public Builder setBASEAMOUNT(CharSequence value) {
      validate(fields()[71], value);
      this.BASEAMOUNT = value;
      fieldSetFlags()[71] = true;
      return this;
    }

    /**
      * Checks whether the 'BASEAMOUNT' field has been set.
      * @return True if the 'BASEAMOUNT' field has been set, false otherwise.
      */
    public boolean hasBASEAMOUNT() {
      return fieldSetFlags()[71];
    }


    /**
      * Clears the value of the 'BASEAMOUNT' field.
      * @return This builder.
      */
    public Builder clearBASEAMOUNT() {
      BASEAMOUNT = null;
      fieldSetFlags()[71] = false;
      return this;
    }

    /**
      * Gets the value of the 'BASECURR' field.
      * @return The value.
      */
    public CharSequence getBASECURR() {
      return BASECURR;
    }


    /**
      * Sets the value of the 'BASECURR' field.
      * @param value The value of 'BASECURR'.
      * @return This builder.
      */
    public Builder setBASECURR(CharSequence value) {
      validate(fields()[72], value);
      this.BASECURR = value;
      fieldSetFlags()[72] = true;
      return this;
    }

    /**
      * Checks whether the 'BASECURR' field has been set.
      * @return True if the 'BASECURR' field has been set, false otherwise.
      */
    public boolean hasBASECURR() {
      return fieldSetFlags()[72];
    }


    /**
      * Clears the value of the 'BASECURR' field.
      * @return This builder.
      */
    public Builder clearBASECURR() {
      BASECURR = null;
      fieldSetFlags()[72] = false;
      return this;
    }

    /**
      * Gets the value of the 'CONCODE' field.
      * @return The value.
      */
    public CharSequence getCONCODE() {
      return CONCODE;
    }


    /**
      * Sets the value of the 'CONCODE' field.
      * @param value The value of 'CONCODE'.
      * @return This builder.
      */
    public Builder setCONCODE(CharSequence value) {
      validate(fields()[73], value);
      this.CONCODE = value;
      fieldSetFlags()[73] = true;
      return this;
    }

    /**
      * Checks whether the 'CONCODE' field has been set.
      * @return True if the 'CONCODE' field has been set, false otherwise.
      */
    public boolean hasCONCODE() {
      return fieldSetFlags()[73];
    }


    /**
      * Clears the value of the 'CONCODE' field.
      * @return This builder.
      */
    public Builder clearCONCODE() {
      CONCODE = null;
      fieldSetFlags()[73] = false;
      return this;
    }

    /**
      * Gets the value of the 'FX' field.
      * @return The value.
      */
    public CharSequence getFX() {
      return FX;
    }


    /**
      * Sets the value of the 'FX' field.
      * @param value The value of 'FX'.
      * @return This builder.
      */
    public Builder setFX(CharSequence value) {
      validate(fields()[74], value);
      this.FX = value;
      fieldSetFlags()[74] = true;
      return this;
    }

    /**
      * Checks whether the 'FX' field has been set.
      * @return True if the 'FX' field has been set, false otherwise.
      */
    public boolean hasFX() {
      return fieldSetFlags()[74];
    }


    /**
      * Clears the value of the 'FX' field.
      * @return This builder.
      */
    public Builder clearFX() {
      FX = null;
      fieldSetFlags()[74] = false;
      return this;
    }

    /**
      * Gets the value of the 'MKUP' field.
      * @return The value.
      */
    public CharSequence getMKUP() {
      return MKUP;
    }


    /**
      * Sets the value of the 'MKUP' field.
      * @param value The value of 'MKUP'.
      * @return This builder.
      */
    public Builder setMKUP(CharSequence value) {
      validate(fields()[75], value);
      this.MKUP = value;
      fieldSetFlags()[75] = true;
      return this;
    }

    /**
      * Checks whether the 'MKUP' field has been set.
      * @return True if the 'MKUP' field has been set, false otherwise.
      */
    public boolean hasMKUP() {
      return fieldSetFlags()[75];
    }


    /**
      * Clears the value of the 'MKUP' field.
      * @return This builder.
      */
    public Builder clearMKUP() {
      MKUP = null;
      fieldSetFlags()[75] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADDITIONAL4' field.
      * @return The value.
      */
    public CharSequence getADDITIONAL4() {
      return ADDITIONAL4;
    }


    /**
      * Sets the value of the 'ADDITIONAL4' field.
      * @param value The value of 'ADDITIONAL4'.
      * @return This builder.
      */
    public Builder setADDITIONAL4(CharSequence value) {
      validate(fields()[76], value);
      this.ADDITIONAL4 = value;
      fieldSetFlags()[76] = true;
      return this;
    }

    /**
      * Checks whether the 'ADDITIONAL4' field has been set.
      * @return True if the 'ADDITIONAL4' field has been set, false otherwise.
      */
    public boolean hasADDITIONAL4() {
      return fieldSetFlags()[76];
    }


    /**
      * Clears the value of the 'ADDITIONAL4' field.
      * @return This builder.
      */
    public Builder clearADDITIONAL4() {
      ADDITIONAL4 = null;
      fieldSetFlags()[76] = false;
      return this;
    }

    /**
      * Gets the value of the 'D12' field.
      * @return The value.
      */
    public CharSequence getD12() {
      return D12;
    }


    /**
      * Sets the value of the 'D12' field.
      * @param value The value of 'D12'.
      * @return This builder.
      */
    public Builder setD12(CharSequence value) {
      validate(fields()[77], value);
      this.D12 = value;
      fieldSetFlags()[77] = true;
      return this;
    }

    /**
      * Checks whether the 'D12' field has been set.
      * @return True if the 'D12' field has been set, false otherwise.
      */
    public boolean hasD12() {
      return fieldSetFlags()[77];
    }


    /**
      * Clears the value of the 'D12' field.
      * @return This builder.
      */
    public Builder clearD12() {
      D12 = null;
      fieldSetFlags()[77] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADDITIONAL1' field.
      * @return The value.
      */
    public CharSequence getADDITIONAL1() {
      return ADDITIONAL1;
    }


    /**
      * Sets the value of the 'ADDITIONAL1' field.
      * @param value The value of 'ADDITIONAL1'.
      * @return This builder.
      */
    public Builder setADDITIONAL1(CharSequence value) {
      validate(fields()[78], value);
      this.ADDITIONAL1 = value;
      fieldSetFlags()[78] = true;
      return this;
    }

    /**
      * Checks whether the 'ADDITIONAL1' field has been set.
      * @return True if the 'ADDITIONAL1' field has been set, false otherwise.
      */
    public boolean hasADDITIONAL1() {
      return fieldSetFlags()[78];
    }


    /**
      * Clears the value of the 'ADDITIONAL1' field.
      * @return This builder.
      */
    public Builder clearADDITIONAL1() {
      ADDITIONAL1 = null;
      fieldSetFlags()[78] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADDITIONAL2' field.
      * @return The value.
      */
    public CharSequence getADDITIONAL2() {
      return ADDITIONAL2;
    }


    /**
      * Sets the value of the 'ADDITIONAL2' field.
      * @param value The value of 'ADDITIONAL2'.
      * @return This builder.
      */
    public Builder setADDITIONAL2(CharSequence value) {
      validate(fields()[79], value);
      this.ADDITIONAL2 = value;
      fieldSetFlags()[79] = true;
      return this;
    }

    /**
      * Checks whether the 'ADDITIONAL2' field has been set.
      * @return True if the 'ADDITIONAL2' field has been set, false otherwise.
      */
    public boolean hasADDITIONAL2() {
      return fieldSetFlags()[79];
    }


    /**
      * Clears the value of the 'ADDITIONAL2' field.
      * @return This builder.
      */
    public Builder clearADDITIONAL2() {
      ADDITIONAL2 = null;
      fieldSetFlags()[79] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADDITIONAL3' field.
      * @return The value.
      */
    public CharSequence getADDITIONAL3() {
      return ADDITIONAL3;
    }


    /**
      * Sets the value of the 'ADDITIONAL3' field.
      * @param value The value of 'ADDITIONAL3'.
      * @return This builder.
      */
    public Builder setADDITIONAL3(CharSequence value) {
      validate(fields()[80], value);
      this.ADDITIONAL3 = value;
      fieldSetFlags()[80] = true;
      return this;
    }

    /**
      * Checks whether the 'ADDITIONAL3' field has been set.
      * @return True if the 'ADDITIONAL3' field has been set, false otherwise.
      */
    public boolean hasADDITIONAL3() {
      return fieldSetFlags()[80];
    }


    /**
      * Clears the value of the 'ADDITIONAL3' field.
      * @return This builder.
      */
    public Builder clearADDITIONAL3() {
      ADDITIONAL3 = null;
      fieldSetFlags()[80] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADDITIONAL5' field.
      * @return The value.
      */
    public CharSequence getADDITIONAL5() {
      return ADDITIONAL5;
    }


    /**
      * Sets the value of the 'ADDITIONAL5' field.
      * @param value The value of 'ADDITIONAL5'.
      * @return This builder.
      */
    public Builder setADDITIONAL5(CharSequence value) {
      validate(fields()[81], value);
      this.ADDITIONAL5 = value;
      fieldSetFlags()[81] = true;
      return this;
    }

    /**
      * Checks whether the 'ADDITIONAL5' field has been set.
      * @return True if the 'ADDITIONAL5' field has been set, false otherwise.
      */
    public boolean hasADDITIONAL5() {
      return fieldSetFlags()[81];
    }


    /**
      * Clears the value of the 'ADDITIONAL5' field.
      * @return This builder.
      */
    public Builder clearADDITIONAL5() {
      ADDITIONAL5 = null;
      fieldSetFlags()[81] = false;
      return this;
    }

    /**
      * Gets the value of the 'CBS_ROUTING' field.
      * @return The value.
      */
    public CharSequence getCBSROUTING() {
      return CBS_ROUTING;
    }


    /**
      * Sets the value of the 'CBS_ROUTING' field.
      * @param value The value of 'CBS_ROUTING'.
      * @return This builder.
      */
    public Builder setCBSROUTING(CharSequence value) {
      validate(fields()[82], value);
      this.CBS_ROUTING = value;
      fieldSetFlags()[82] = true;
      return this;
    }

    /**
      * Checks whether the 'CBS_ROUTING' field has been set.
      * @return True if the 'CBS_ROUTING' field has been set, false otherwise.
      */
    public boolean hasCBSROUTING() {
      return fieldSetFlags()[82];
    }


    /**
      * Clears the value of the 'CBS_ROUTING' field.
      * @return This builder.
      */
    public Builder clearCBSROUTING() {
      CBS_ROUTING = null;
      fieldSetFlags()[82] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CBSTranCol build() {
      try {
        CBSTranCol record = new CBSTranCol();
        record.ID = fieldSetFlags()[0] ? this.ID : (Double) defaultValue(fields()[0]);
        record.AMOUNT = fieldSetFlags()[1] ? this.AMOUNT : (CharSequence) defaultValue(fields()[1]);
        record.CBSRC = fieldSetFlags()[2] ? this.CBSRC : (CharSequence) defaultValue(fields()[2]);
        record.CREDITACCOUNT = fieldSetFlags()[3] ? this.CREDITACCOUNT : (CharSequence) defaultValue(fields()[3]);
        record.CUSTOMERID = fieldSetFlags()[4] ? this.CUSTOMERID : (CharSequence) defaultValue(fields()[4]);
        record.DEBITACCOUNT = fieldSetFlags()[5] ? this.DEBITACCOUNT : (CharSequence) defaultValue(fields()[5]);
        record.MSGID = fieldSetFlags()[6] ? this.MSGID : (CharSequence) defaultValue(fields()[6]);
        record.REVERSAL = fieldSetFlags()[7] ? this.REVERSAL : (Long) defaultValue(fields()[7]);
        record.REVERSALSTATUS = fieldSetFlags()[8] ? this.REVERSALSTATUS : (CharSequence) defaultValue(fields()[8]);
        record.RRN = fieldSetFlags()[9] ? this.RRN : (CharSequence) defaultValue(fields()[9]);
        record.STAN = fieldSetFlags()[10] ? this.STAN : (CharSequence) defaultValue(fields()[10]);
        record.TXN_DATE = fieldSetFlags()[11] ? this.TXN_DATE : (CharSequence) defaultValue(fields()[11]);
        record.TXNID = fieldSetFlags()[12] ? this.TXNID : (CharSequence) defaultValue(fields()[12]);
        record.TYPE = fieldSetFlags()[13] ? this.TYPE : (CharSequence) defaultValue(fields()[13]);
        record.UPIRC = fieldSetFlags()[14] ? this.UPIRC : (CharSequence) defaultValue(fields()[14]);
        record.ORGTXNID = fieldSetFlags()[15] ? this.ORGTXNID : (CharSequence) defaultValue(fields()[15]);
        record.REMARKS = fieldSetFlags()[16] ? this.REMARKS : (CharSequence) defaultValue(fields()[16]);
        record.CUSTOMERACCOUNT = fieldSetFlags()[17] ? this.CUSTOMERACCOUNT : (CharSequence) defaultValue(fields()[17]);
        record.NAME = fieldSetFlags()[18] ? this.NAME : (CharSequence) defaultValue(fields()[18]);
        record.PAYEEVPA = fieldSetFlags()[19] ? this.PAYEEVPA : (CharSequence) defaultValue(fields()[19]);
        record.PAYERVPA = fieldSetFlags()[20] ? this.PAYERVPA : (CharSequence) defaultValue(fields()[20]);
        record.SEQNO = fieldSetFlags()[21] ? this.SEQNO : (CharSequence) defaultValue(fields()[21]);
        record.COMMISSIONAMOUNT = fieldSetFlags()[22] ? this.COMMISSIONAMOUNT : (CharSequence) defaultValue(fields()[22]);
        record.CUSTOMERREFID = fieldSetFlags()[23] ? this.CUSTOMERREFID : (CharSequence) defaultValue(fields()[23]);
        record.TRANTYPE = fieldSetFlags()[24] ? this.TRANTYPE : (CharSequence) defaultValue(fields()[24]);
        record.CREDITBANKNAME = fieldSetFlags()[25] ? this.CREDITBANKNAME : (CharSequence) defaultValue(fields()[25]);
        record.DEBITBANKNAME = fieldSetFlags()[26] ? this.DEBITBANKNAME : (CharSequence) defaultValue(fields()[26]);
        record.OTHERSACCOUNT = fieldSetFlags()[27] ? this.OTHERSACCOUNT : (CharSequence) defaultValue(fields()[27]);
        record.CHANNEL = fieldSetFlags()[28] ? this.CHANNEL : (CharSequence) defaultValue(fields()[28]);
        record.APPID = fieldSetFlags()[29] ? this.APPID : (CharSequence) defaultValue(fields()[29]);
        record.PREAPPROVED = fieldSetFlags()[30] ? this.PREAPPROVED : (CharSequence) defaultValue(fields()[30]);
        record.BENEFICIARYNAME = fieldSetFlags()[31] ? this.BENEFICIARYNAME : (CharSequence) defaultValue(fields()[31]);
        record.OTHERMOBILENO = fieldSetFlags()[32] ? this.OTHERMOBILENO : (CharSequence) defaultValue(fields()[32]);
        record.REMITTERNAME = fieldSetFlags()[33] ? this.REMITTERNAME : (CharSequence) defaultValue(fields()[33]);
        record.APPROVALNUM = fieldSetFlags()[34] ? this.APPROVALNUM : (CharSequence) defaultValue(fields()[34]);
        record.MCCCODE = fieldSetFlags()[35] ? this.MCCCODE : (CharSequence) defaultValue(fields()[35]);
        record.SERVERIP = fieldSetFlags()[36] ? this.SERVERIP : (CharSequence) defaultValue(fields()[36]);
        record.CBSRESP_DATE = fieldSetFlags()[37] ? this.CBSRESP_DATE : (CharSequence) defaultValue(fields()[37]);
        record.INITMODE = fieldSetFlags()[38] ? this.INITMODE : (CharSequence) defaultValue(fields()[38]);
        record.PURPOSECODE = fieldSetFlags()[39] ? this.PURPOSECODE : (CharSequence) defaultValue(fields()[39]);
        record.CREDITACCOUNTTYPE = fieldSetFlags()[40] ? this.CREDITACCOUNTTYPE : (CharSequence) defaultValue(fields()[40]);
        record.CREDITIFSC = fieldSetFlags()[41] ? this.CREDITIFSC : (CharSequence) defaultValue(fields()[41]);
        record.DEBITACCOUNTTYPE = fieldSetFlags()[42] ? this.DEBITACCOUNTTYPE : (CharSequence) defaultValue(fields()[42]);
        record.DEBITIFSC = fieldSetFlags()[43] ? this.DEBITIFSC : (CharSequence) defaultValue(fields()[43]);
        record.ORDERID = fieldSetFlags()[44] ? this.ORDERID : (CharSequence) defaultValue(fields()[44]);
        record.PAYEECODE = fieldSetFlags()[45] ? this.PAYEECODE : (CharSequence) defaultValue(fields()[45]);
        record.PAYERCODE = fieldSetFlags()[46] ? this.PAYERCODE : (CharSequence) defaultValue(fields()[46]);
        record.SUBTYPE = fieldSetFlags()[47] ? this.SUBTYPE : (CharSequence) defaultValue(fields()[47]);
        record.REMITTORMOBILENUMBER = fieldSetFlags()[48] ? this.REMITTORMOBILENUMBER : (CharSequence) defaultValue(fields()[48]);
        record.PAYEEIMEI = fieldSetFlags()[49] ? this.PAYEEIMEI : (CharSequence) defaultValue(fields()[49]);
        record.PAYERIMEI = fieldSetFlags()[50] ? this.PAYERIMEI : (CharSequence) defaultValue(fields()[50]);
        record.GMTDATE = fieldSetFlags()[51] ? this.GMTDATE : (CharSequence) defaultValue(fields()[51]);
        record.PAYEEACCOUNTTYPE = fieldSetFlags()[52] ? this.PAYEEACCOUNTTYPE : (CharSequence) defaultValue(fields()[52]);
        record.PAYERACCOUNTTYPE = fieldSetFlags()[53] ? this.PAYERACCOUNTTYPE : (CharSequence) defaultValue(fields()[53]);
        record.PAYERCONSENTNAME = fieldSetFlags()[54] ? this.PAYERCONSENTNAME : (CharSequence) defaultValue(fields()[54]);
        record.PAYERCONSENTTYPE = fieldSetFlags()[55] ? this.PAYERCONSENTTYPE : (CharSequence) defaultValue(fields()[55]);
        record.PAYERCONSENTVALUE = fieldSetFlags()[56] ? this.PAYERCONSENTVALUE : (CharSequence) defaultValue(fields()[56]);
        record.ADJCODE = fieldSetFlags()[57] ? this.ADJCODE : (CharSequence) defaultValue(fields()[57]);
        record.ADJFLAG = fieldSetFlags()[58] ? this.ADJFLAG : (CharSequence) defaultValue(fields()[58]);
        record.CREATE_DATE = fieldSetFlags()[59] ? this.CREATE_DATE : (CharSequence) defaultValue(fields()[59]);
        record.CREDITACCTNARRATION_103 = fieldSetFlags()[60] ? this.CREDITACCTNARRATION_103 : (CharSequence) defaultValue(fields()[60]);
        record.DE46 = fieldSetFlags()[61] ? this.DE46 : (CharSequence) defaultValue(fields()[61]);
        record.DEBITACCTNARRATION_102 = fieldSetFlags()[62] ? this.DEBITACCTNARRATION_102 : (CharSequence) defaultValue(fields()[62]);
        record.GST = fieldSetFlags()[63] ? this.GST : (CharSequence) defaultValue(fields()[63]);
        record.LOANNUMBER = fieldSetFlags()[64] ? this.LOANNUMBER : (CharSequence) defaultValue(fields()[64]);
        record.LOCALTIME = fieldSetFlags()[65] ? this.LOCALTIME : (CharSequence) defaultValue(fields()[65]);
        record.NARRATION_125 = fieldSetFlags()[66] ? this.NARRATION_125 : (CharSequence) defaultValue(fields()[66]);
        record.P2PTXNCHARGES = fieldSetFlags()[67] ? this.P2PTXNCHARGES : (CharSequence) defaultValue(fields()[67]);
        record.SCHEMECODE = fieldSetFlags()[68] ? this.SCHEMECODE : (CharSequence) defaultValue(fields()[68]);
        record.TXNAMOUNT = fieldSetFlags()[69] ? this.TXNAMOUNT : (CharSequence) defaultValue(fields()[69]);
        record.BATCH_ID = fieldSetFlags()[70] ? this.BATCH_ID : (CharSequence) defaultValue(fields()[70]);
        record.BASEAMOUNT = fieldSetFlags()[71] ? this.BASEAMOUNT : (CharSequence) defaultValue(fields()[71]);
        record.BASECURR = fieldSetFlags()[72] ? this.BASECURR : (CharSequence) defaultValue(fields()[72]);
        record.CONCODE = fieldSetFlags()[73] ? this.CONCODE : (CharSequence) defaultValue(fields()[73]);
        record.FX = fieldSetFlags()[74] ? this.FX : (CharSequence) defaultValue(fields()[74]);
        record.MKUP = fieldSetFlags()[75] ? this.MKUP : (CharSequence) defaultValue(fields()[75]);
        record.ADDITIONAL4 = fieldSetFlags()[76] ? this.ADDITIONAL4 : (CharSequence) defaultValue(fields()[76]);
        record.D12 = fieldSetFlags()[77] ? this.D12 : (CharSequence) defaultValue(fields()[77]);
        record.ADDITIONAL1 = fieldSetFlags()[78] ? this.ADDITIONAL1 : (CharSequence) defaultValue(fields()[78]);
        record.ADDITIONAL2 = fieldSetFlags()[79] ? this.ADDITIONAL2 : (CharSequence) defaultValue(fields()[79]);
        record.ADDITIONAL3 = fieldSetFlags()[80] ? this.ADDITIONAL3 : (CharSequence) defaultValue(fields()[80]);
        record.ADDITIONAL5 = fieldSetFlags()[81] ? this.ADDITIONAL5 : (CharSequence) defaultValue(fields()[81]);
        record.CBS_ROUTING = fieldSetFlags()[82] ? this.CBS_ROUTING : (CharSequence) defaultValue(fields()[82]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CBSTranCol>
    WRITER$ = (org.apache.avro.io.DatumWriter<CBSTranCol>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CBSTranCol>
    READER$ = (org.apache.avro.io.DatumReader<CBSTranCol>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.ID);
    }

    if (this.AMOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.AMOUNT);
    }

    if (this.CBSRC == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CBSRC);
    }

    if (this.CREDITACCOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CREDITACCOUNT);
    }

    if (this.CUSTOMERID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CUSTOMERID);
    }

    if (this.DEBITACCOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DEBITACCOUNT);
    }

    if (this.MSGID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.MSGID);
    }

    if (this.REVERSAL == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.REVERSAL);
    }

    if (this.REVERSALSTATUS == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.REVERSALSTATUS);
    }

    if (this.RRN == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.RRN);
    }

    if (this.STAN == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.STAN);
    }

    if (this.TXN_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TXN_DATE);
    }

    if (this.TXNID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TXNID);
    }

    if (this.TYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TYPE);
    }

    if (this.UPIRC == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.UPIRC);
    }

    if (this.ORGTXNID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ORGTXNID);
    }

    if (this.REMARKS == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.REMARKS);
    }

    if (this.CUSTOMERACCOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CUSTOMERACCOUNT);
    }

    if (this.NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.NAME);
    }

    if (this.PAYEEVPA == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYEEVPA);
    }

    if (this.PAYERVPA == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYERVPA);
    }

    if (this.SEQNO == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SEQNO);
    }

    if (this.COMMISSIONAMOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.COMMISSIONAMOUNT);
    }

    if (this.CUSTOMERREFID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CUSTOMERREFID);
    }

    if (this.TRANTYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TRANTYPE);
    }

    if (this.CREDITBANKNAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CREDITBANKNAME);
    }

    if (this.DEBITBANKNAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DEBITBANKNAME);
    }

    if (this.OTHERSACCOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.OTHERSACCOUNT);
    }

    if (this.CHANNEL == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CHANNEL);
    }

    if (this.APPID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.APPID);
    }

    if (this.PREAPPROVED == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PREAPPROVED);
    }

    if (this.BENEFICIARYNAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.BENEFICIARYNAME);
    }

    if (this.OTHERMOBILENO == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.OTHERMOBILENO);
    }

    if (this.REMITTERNAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.REMITTERNAME);
    }

    if (this.APPROVALNUM == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.APPROVALNUM);
    }

    if (this.MCCCODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.MCCCODE);
    }

    if (this.SERVERIP == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SERVERIP);
    }

    if (this.CBSRESP_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CBSRESP_DATE);
    }

    if (this.INITMODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.INITMODE);
    }

    if (this.PURPOSECODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PURPOSECODE);
    }

    if (this.CREDITACCOUNTTYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CREDITACCOUNTTYPE);
    }

    if (this.CREDITIFSC == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CREDITIFSC);
    }

    if (this.DEBITACCOUNTTYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DEBITACCOUNTTYPE);
    }

    if (this.DEBITIFSC == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DEBITIFSC);
    }

    if (this.ORDERID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ORDERID);
    }

    if (this.PAYEECODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYEECODE);
    }

    if (this.PAYERCODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYERCODE);
    }

    if (this.SUBTYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SUBTYPE);
    }

    if (this.REMITTORMOBILENUMBER == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.REMITTORMOBILENUMBER);
    }

    if (this.PAYEEIMEI == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYEEIMEI);
    }

    if (this.PAYERIMEI == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYERIMEI);
    }

    if (this.GMTDATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.GMTDATE);
    }

    if (this.PAYEEACCOUNTTYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYEEACCOUNTTYPE);
    }

    if (this.PAYERACCOUNTTYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYERACCOUNTTYPE);
    }

    if (this.PAYERCONSENTNAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYERCONSENTNAME);
    }

    if (this.PAYERCONSENTTYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYERCONSENTTYPE);
    }

    if (this.PAYERCONSENTVALUE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PAYERCONSENTVALUE);
    }

    if (this.ADJCODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ADJCODE);
    }

    if (this.ADJFLAG == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ADJFLAG);
    }

    if (this.CREATE_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CREATE_DATE);
    }

    if (this.CREDITACCTNARRATION_103 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CREDITACCTNARRATION_103);
    }

    if (this.DE46 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DE46);
    }

    if (this.DEBITACCTNARRATION_102 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DEBITACCTNARRATION_102);
    }

    if (this.GST == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.GST);
    }

    if (this.LOANNUMBER == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOANNUMBER);
    }

    if (this.LOCALTIME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOCALTIME);
    }

    if (this.NARRATION_125 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.NARRATION_125);
    }

    if (this.P2PTXNCHARGES == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.P2PTXNCHARGES);
    }

    if (this.SCHEMECODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SCHEMECODE);
    }

    if (this.TXNAMOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TXNAMOUNT);
    }

    if (this.BATCH_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.BATCH_ID);
    }

    if (this.BASEAMOUNT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.BASEAMOUNT);
    }

    if (this.BASECURR == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.BASECURR);
    }

    if (this.CONCODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CONCODE);
    }

    if (this.FX == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.FX);
    }

    if (this.MKUP == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.MKUP);
    }

    if (this.ADDITIONAL4 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ADDITIONAL4);
    }

    if (this.D12 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.D12);
    }

    if (this.ADDITIONAL1 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ADDITIONAL1);
    }

    if (this.ADDITIONAL2 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ADDITIONAL2);
    }

    if (this.ADDITIONAL3 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ADDITIONAL3);
    }

    if (this.ADDITIONAL5 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ADDITIONAL5);
    }

    if (this.CBS_ROUTING == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CBS_ROUTING);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.ID = null;
      } else {
        this.ID = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.AMOUNT = null;
      } else {
        this.AMOUNT = in.readString(this.AMOUNT instanceof Utf8 ? (Utf8)this.AMOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CBSRC = null;
      } else {
        this.CBSRC = in.readString(this.CBSRC instanceof Utf8 ? (Utf8)this.CBSRC : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CREDITACCOUNT = null;
      } else {
        this.CREDITACCOUNT = in.readString(this.CREDITACCOUNT instanceof Utf8 ? (Utf8)this.CREDITACCOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CUSTOMERID = null;
      } else {
        this.CUSTOMERID = in.readString(this.CUSTOMERID instanceof Utf8 ? (Utf8)this.CUSTOMERID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DEBITACCOUNT = null;
      } else {
        this.DEBITACCOUNT = in.readString(this.DEBITACCOUNT instanceof Utf8 ? (Utf8)this.DEBITACCOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.MSGID = null;
      } else {
        this.MSGID = in.readString(this.MSGID instanceof Utf8 ? (Utf8)this.MSGID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.REVERSAL = null;
      } else {
        this.REVERSAL = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.REVERSALSTATUS = null;
      } else {
        this.REVERSALSTATUS = in.readString(this.REVERSALSTATUS instanceof Utf8 ? (Utf8)this.REVERSALSTATUS : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.RRN = null;
      } else {
        this.RRN = in.readString(this.RRN instanceof Utf8 ? (Utf8)this.RRN : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.STAN = null;
      } else {
        this.STAN = in.readString(this.STAN instanceof Utf8 ? (Utf8)this.STAN : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TXN_DATE = null;
      } else {
        this.TXN_DATE = in.readString(this.TXN_DATE instanceof Utf8 ? (Utf8)this.TXN_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TXNID = null;
      } else {
        this.TXNID = in.readString(this.TXNID instanceof Utf8 ? (Utf8)this.TXNID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TYPE = null;
      } else {
        this.TYPE = in.readString(this.TYPE instanceof Utf8 ? (Utf8)this.TYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.UPIRC = null;
      } else {
        this.UPIRC = in.readString(this.UPIRC instanceof Utf8 ? (Utf8)this.UPIRC : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ORGTXNID = null;
      } else {
        this.ORGTXNID = in.readString(this.ORGTXNID instanceof Utf8 ? (Utf8)this.ORGTXNID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.REMARKS = null;
      } else {
        this.REMARKS = in.readString(this.REMARKS instanceof Utf8 ? (Utf8)this.REMARKS : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CUSTOMERACCOUNT = null;
      } else {
        this.CUSTOMERACCOUNT = in.readString(this.CUSTOMERACCOUNT instanceof Utf8 ? (Utf8)this.CUSTOMERACCOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.NAME = null;
      } else {
        this.NAME = in.readString(this.NAME instanceof Utf8 ? (Utf8)this.NAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYEEVPA = null;
      } else {
        this.PAYEEVPA = in.readString(this.PAYEEVPA instanceof Utf8 ? (Utf8)this.PAYEEVPA : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYERVPA = null;
      } else {
        this.PAYERVPA = in.readString(this.PAYERVPA instanceof Utf8 ? (Utf8)this.PAYERVPA : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SEQNO = null;
      } else {
        this.SEQNO = in.readString(this.SEQNO instanceof Utf8 ? (Utf8)this.SEQNO : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.COMMISSIONAMOUNT = null;
      } else {
        this.COMMISSIONAMOUNT = in.readString(this.COMMISSIONAMOUNT instanceof Utf8 ? (Utf8)this.COMMISSIONAMOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CUSTOMERREFID = null;
      } else {
        this.CUSTOMERREFID = in.readString(this.CUSTOMERREFID instanceof Utf8 ? (Utf8)this.CUSTOMERREFID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TRANTYPE = null;
      } else {
        this.TRANTYPE = in.readString(this.TRANTYPE instanceof Utf8 ? (Utf8)this.TRANTYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CREDITBANKNAME = null;
      } else {
        this.CREDITBANKNAME = in.readString(this.CREDITBANKNAME instanceof Utf8 ? (Utf8)this.CREDITBANKNAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DEBITBANKNAME = null;
      } else {
        this.DEBITBANKNAME = in.readString(this.DEBITBANKNAME instanceof Utf8 ? (Utf8)this.DEBITBANKNAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.OTHERSACCOUNT = null;
      } else {
        this.OTHERSACCOUNT = in.readString(this.OTHERSACCOUNT instanceof Utf8 ? (Utf8)this.OTHERSACCOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CHANNEL = null;
      } else {
        this.CHANNEL = in.readString(this.CHANNEL instanceof Utf8 ? (Utf8)this.CHANNEL : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.APPID = null;
      } else {
        this.APPID = in.readString(this.APPID instanceof Utf8 ? (Utf8)this.APPID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PREAPPROVED = null;
      } else {
        this.PREAPPROVED = in.readString(this.PREAPPROVED instanceof Utf8 ? (Utf8)this.PREAPPROVED : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.BENEFICIARYNAME = null;
      } else {
        this.BENEFICIARYNAME = in.readString(this.BENEFICIARYNAME instanceof Utf8 ? (Utf8)this.BENEFICIARYNAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.OTHERMOBILENO = null;
      } else {
        this.OTHERMOBILENO = in.readString(this.OTHERMOBILENO instanceof Utf8 ? (Utf8)this.OTHERMOBILENO : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.REMITTERNAME = null;
      } else {
        this.REMITTERNAME = in.readString(this.REMITTERNAME instanceof Utf8 ? (Utf8)this.REMITTERNAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.APPROVALNUM = null;
      } else {
        this.APPROVALNUM = in.readString(this.APPROVALNUM instanceof Utf8 ? (Utf8)this.APPROVALNUM : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.MCCCODE = null;
      } else {
        this.MCCCODE = in.readString(this.MCCCODE instanceof Utf8 ? (Utf8)this.MCCCODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SERVERIP = null;
      } else {
        this.SERVERIP = in.readString(this.SERVERIP instanceof Utf8 ? (Utf8)this.SERVERIP : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CBSRESP_DATE = null;
      } else {
        this.CBSRESP_DATE = in.readString(this.CBSRESP_DATE instanceof Utf8 ? (Utf8)this.CBSRESP_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.INITMODE = null;
      } else {
        this.INITMODE = in.readString(this.INITMODE instanceof Utf8 ? (Utf8)this.INITMODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PURPOSECODE = null;
      } else {
        this.PURPOSECODE = in.readString(this.PURPOSECODE instanceof Utf8 ? (Utf8)this.PURPOSECODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CREDITACCOUNTTYPE = null;
      } else {
        this.CREDITACCOUNTTYPE = in.readString(this.CREDITACCOUNTTYPE instanceof Utf8 ? (Utf8)this.CREDITACCOUNTTYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CREDITIFSC = null;
      } else {
        this.CREDITIFSC = in.readString(this.CREDITIFSC instanceof Utf8 ? (Utf8)this.CREDITIFSC : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DEBITACCOUNTTYPE = null;
      } else {
        this.DEBITACCOUNTTYPE = in.readString(this.DEBITACCOUNTTYPE instanceof Utf8 ? (Utf8)this.DEBITACCOUNTTYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DEBITIFSC = null;
      } else {
        this.DEBITIFSC = in.readString(this.DEBITIFSC instanceof Utf8 ? (Utf8)this.DEBITIFSC : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ORDERID = null;
      } else {
        this.ORDERID = in.readString(this.ORDERID instanceof Utf8 ? (Utf8)this.ORDERID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYEECODE = null;
      } else {
        this.PAYEECODE = in.readString(this.PAYEECODE instanceof Utf8 ? (Utf8)this.PAYEECODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYERCODE = null;
      } else {
        this.PAYERCODE = in.readString(this.PAYERCODE instanceof Utf8 ? (Utf8)this.PAYERCODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SUBTYPE = null;
      } else {
        this.SUBTYPE = in.readString(this.SUBTYPE instanceof Utf8 ? (Utf8)this.SUBTYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.REMITTORMOBILENUMBER = null;
      } else {
        this.REMITTORMOBILENUMBER = in.readString(this.REMITTORMOBILENUMBER instanceof Utf8 ? (Utf8)this.REMITTORMOBILENUMBER : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYEEIMEI = null;
      } else {
        this.PAYEEIMEI = in.readString(this.PAYEEIMEI instanceof Utf8 ? (Utf8)this.PAYEEIMEI : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYERIMEI = null;
      } else {
        this.PAYERIMEI = in.readString(this.PAYERIMEI instanceof Utf8 ? (Utf8)this.PAYERIMEI : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GMTDATE = null;
      } else {
        this.GMTDATE = in.readString(this.GMTDATE instanceof Utf8 ? (Utf8)this.GMTDATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYEEACCOUNTTYPE = null;
      } else {
        this.PAYEEACCOUNTTYPE = in.readString(this.PAYEEACCOUNTTYPE instanceof Utf8 ? (Utf8)this.PAYEEACCOUNTTYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYERACCOUNTTYPE = null;
      } else {
        this.PAYERACCOUNTTYPE = in.readString(this.PAYERACCOUNTTYPE instanceof Utf8 ? (Utf8)this.PAYERACCOUNTTYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYERCONSENTNAME = null;
      } else {
        this.PAYERCONSENTNAME = in.readString(this.PAYERCONSENTNAME instanceof Utf8 ? (Utf8)this.PAYERCONSENTNAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYERCONSENTTYPE = null;
      } else {
        this.PAYERCONSENTTYPE = in.readString(this.PAYERCONSENTTYPE instanceof Utf8 ? (Utf8)this.PAYERCONSENTTYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PAYERCONSENTVALUE = null;
      } else {
        this.PAYERCONSENTVALUE = in.readString(this.PAYERCONSENTVALUE instanceof Utf8 ? (Utf8)this.PAYERCONSENTVALUE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ADJCODE = null;
      } else {
        this.ADJCODE = in.readString(this.ADJCODE instanceof Utf8 ? (Utf8)this.ADJCODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ADJFLAG = null;
      } else {
        this.ADJFLAG = in.readString(this.ADJFLAG instanceof Utf8 ? (Utf8)this.ADJFLAG : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CREATE_DATE = null;
      } else {
        this.CREATE_DATE = in.readString(this.CREATE_DATE instanceof Utf8 ? (Utf8)this.CREATE_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CREDITACCTNARRATION_103 = null;
      } else {
        this.CREDITACCTNARRATION_103 = in.readString(this.CREDITACCTNARRATION_103 instanceof Utf8 ? (Utf8)this.CREDITACCTNARRATION_103 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DE46 = null;
      } else {
        this.DE46 = in.readString(this.DE46 instanceof Utf8 ? (Utf8)this.DE46 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DEBITACCTNARRATION_102 = null;
      } else {
        this.DEBITACCTNARRATION_102 = in.readString(this.DEBITACCTNARRATION_102 instanceof Utf8 ? (Utf8)this.DEBITACCTNARRATION_102 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GST = null;
      } else {
        this.GST = in.readString(this.GST instanceof Utf8 ? (Utf8)this.GST : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOANNUMBER = null;
      } else {
        this.LOANNUMBER = in.readString(this.LOANNUMBER instanceof Utf8 ? (Utf8)this.LOANNUMBER : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOCALTIME = null;
      } else {
        this.LOCALTIME = in.readString(this.LOCALTIME instanceof Utf8 ? (Utf8)this.LOCALTIME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.NARRATION_125 = null;
      } else {
        this.NARRATION_125 = in.readString(this.NARRATION_125 instanceof Utf8 ? (Utf8)this.NARRATION_125 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.P2PTXNCHARGES = null;
      } else {
        this.P2PTXNCHARGES = in.readString(this.P2PTXNCHARGES instanceof Utf8 ? (Utf8)this.P2PTXNCHARGES : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SCHEMECODE = null;
      } else {
        this.SCHEMECODE = in.readString(this.SCHEMECODE instanceof Utf8 ? (Utf8)this.SCHEMECODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TXNAMOUNT = null;
      } else {
        this.TXNAMOUNT = in.readString(this.TXNAMOUNT instanceof Utf8 ? (Utf8)this.TXNAMOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.BATCH_ID = null;
      } else {
        this.BATCH_ID = in.readString(this.BATCH_ID instanceof Utf8 ? (Utf8)this.BATCH_ID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.BASEAMOUNT = null;
      } else {
        this.BASEAMOUNT = in.readString(this.BASEAMOUNT instanceof Utf8 ? (Utf8)this.BASEAMOUNT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.BASECURR = null;
      } else {
        this.BASECURR = in.readString(this.BASECURR instanceof Utf8 ? (Utf8)this.BASECURR : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CONCODE = null;
      } else {
        this.CONCODE = in.readString(this.CONCODE instanceof Utf8 ? (Utf8)this.CONCODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.FX = null;
      } else {
        this.FX = in.readString(this.FX instanceof Utf8 ? (Utf8)this.FX : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.MKUP = null;
      } else {
        this.MKUP = in.readString(this.MKUP instanceof Utf8 ? (Utf8)this.MKUP : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ADDITIONAL4 = null;
      } else {
        this.ADDITIONAL4 = in.readString(this.ADDITIONAL4 instanceof Utf8 ? (Utf8)this.ADDITIONAL4 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.D12 = null;
      } else {
        this.D12 = in.readString(this.D12 instanceof Utf8 ? (Utf8)this.D12 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ADDITIONAL1 = null;
      } else {
        this.ADDITIONAL1 = in.readString(this.ADDITIONAL1 instanceof Utf8 ? (Utf8)this.ADDITIONAL1 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ADDITIONAL2 = null;
      } else {
        this.ADDITIONAL2 = in.readString(this.ADDITIONAL2 instanceof Utf8 ? (Utf8)this.ADDITIONAL2 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ADDITIONAL3 = null;
      } else {
        this.ADDITIONAL3 = in.readString(this.ADDITIONAL3 instanceof Utf8 ? (Utf8)this.ADDITIONAL3 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ADDITIONAL5 = null;
      } else {
        this.ADDITIONAL5 = in.readString(this.ADDITIONAL5 instanceof Utf8 ? (Utf8)this.ADDITIONAL5 : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CBS_ROUTING = null;
      } else {
        this.CBS_ROUTING = in.readString(this.CBS_ROUTING instanceof Utf8 ? (Utf8)this.CBS_ROUTING : null);
      }

    } else {
      for (int i = 0; i < 83; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ID = null;
          } else {
            this.ID = in.readDouble();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.AMOUNT = null;
          } else {
            this.AMOUNT = in.readString(this.AMOUNT instanceof Utf8 ? (Utf8)this.AMOUNT : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CBSRC = null;
          } else {
            this.CBSRC = in.readString(this.CBSRC instanceof Utf8 ? (Utf8)this.CBSRC : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CREDITACCOUNT = null;
          } else {
            this.CREDITACCOUNT = in.readString(this.CREDITACCOUNT instanceof Utf8 ? (Utf8)this.CREDITACCOUNT : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CUSTOMERID = null;
          } else {
            this.CUSTOMERID = in.readString(this.CUSTOMERID instanceof Utf8 ? (Utf8)this.CUSTOMERID : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DEBITACCOUNT = null;
          } else {
            this.DEBITACCOUNT = in.readString(this.DEBITACCOUNT instanceof Utf8 ? (Utf8)this.DEBITACCOUNT : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.MSGID = null;
          } else {
            this.MSGID = in.readString(this.MSGID instanceof Utf8 ? (Utf8)this.MSGID : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.REVERSAL = null;
          } else {
            this.REVERSAL = in.readLong();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.REVERSALSTATUS = null;
          } else {
            this.REVERSALSTATUS = in.readString(this.REVERSALSTATUS instanceof Utf8 ? (Utf8)this.REVERSALSTATUS : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.RRN = null;
          } else {
            this.RRN = in.readString(this.RRN instanceof Utf8 ? (Utf8)this.RRN : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.STAN = null;
          } else {
            this.STAN = in.readString(this.STAN instanceof Utf8 ? (Utf8)this.STAN : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TXN_DATE = null;
          } else {
            this.TXN_DATE = in.readString(this.TXN_DATE instanceof Utf8 ? (Utf8)this.TXN_DATE : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TXNID = null;
          } else {
            this.TXNID = in.readString(this.TXNID instanceof Utf8 ? (Utf8)this.TXNID : null);
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TYPE = null;
          } else {
            this.TYPE = in.readString(this.TYPE instanceof Utf8 ? (Utf8)this.TYPE : null);
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.UPIRC = null;
          } else {
            this.UPIRC = in.readString(this.UPIRC instanceof Utf8 ? (Utf8)this.UPIRC : null);
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ORGTXNID = null;
          } else {
            this.ORGTXNID = in.readString(this.ORGTXNID instanceof Utf8 ? (Utf8)this.ORGTXNID : null);
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.REMARKS = null;
          } else {
            this.REMARKS = in.readString(this.REMARKS instanceof Utf8 ? (Utf8)this.REMARKS : null);
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CUSTOMERACCOUNT = null;
          } else {
            this.CUSTOMERACCOUNT = in.readString(this.CUSTOMERACCOUNT instanceof Utf8 ? (Utf8)this.CUSTOMERACCOUNT : null);
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.NAME = null;
          } else {
            this.NAME = in.readString(this.NAME instanceof Utf8 ? (Utf8)this.NAME : null);
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYEEVPA = null;
          } else {
            this.PAYEEVPA = in.readString(this.PAYEEVPA instanceof Utf8 ? (Utf8)this.PAYEEVPA : null);
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYERVPA = null;
          } else {
            this.PAYERVPA = in.readString(this.PAYERVPA instanceof Utf8 ? (Utf8)this.PAYERVPA : null);
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SEQNO = null;
          } else {
            this.SEQNO = in.readString(this.SEQNO instanceof Utf8 ? (Utf8)this.SEQNO : null);
          }
          break;

        case 22:
          if (in.readIndex() != 1) {
            in.readNull();
            this.COMMISSIONAMOUNT = null;
          } else {
            this.COMMISSIONAMOUNT = in.readString(this.COMMISSIONAMOUNT instanceof Utf8 ? (Utf8)this.COMMISSIONAMOUNT : null);
          }
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CUSTOMERREFID = null;
          } else {
            this.CUSTOMERREFID = in.readString(this.CUSTOMERREFID instanceof Utf8 ? (Utf8)this.CUSTOMERREFID : null);
          }
          break;

        case 24:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TRANTYPE = null;
          } else {
            this.TRANTYPE = in.readString(this.TRANTYPE instanceof Utf8 ? (Utf8)this.TRANTYPE : null);
          }
          break;

        case 25:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CREDITBANKNAME = null;
          } else {
            this.CREDITBANKNAME = in.readString(this.CREDITBANKNAME instanceof Utf8 ? (Utf8)this.CREDITBANKNAME : null);
          }
          break;

        case 26:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DEBITBANKNAME = null;
          } else {
            this.DEBITBANKNAME = in.readString(this.DEBITBANKNAME instanceof Utf8 ? (Utf8)this.DEBITBANKNAME : null);
          }
          break;

        case 27:
          if (in.readIndex() != 1) {
            in.readNull();
            this.OTHERSACCOUNT = null;
          } else {
            this.OTHERSACCOUNT = in.readString(this.OTHERSACCOUNT instanceof Utf8 ? (Utf8)this.OTHERSACCOUNT : null);
          }
          break;

        case 28:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CHANNEL = null;
          } else {
            this.CHANNEL = in.readString(this.CHANNEL instanceof Utf8 ? (Utf8)this.CHANNEL : null);
          }
          break;

        case 29:
          if (in.readIndex() != 1) {
            in.readNull();
            this.APPID = null;
          } else {
            this.APPID = in.readString(this.APPID instanceof Utf8 ? (Utf8)this.APPID : null);
          }
          break;

        case 30:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PREAPPROVED = null;
          } else {
            this.PREAPPROVED = in.readString(this.PREAPPROVED instanceof Utf8 ? (Utf8)this.PREAPPROVED : null);
          }
          break;

        case 31:
          if (in.readIndex() != 1) {
            in.readNull();
            this.BENEFICIARYNAME = null;
          } else {
            this.BENEFICIARYNAME = in.readString(this.BENEFICIARYNAME instanceof Utf8 ? (Utf8)this.BENEFICIARYNAME : null);
          }
          break;

        case 32:
          if (in.readIndex() != 1) {
            in.readNull();
            this.OTHERMOBILENO = null;
          } else {
            this.OTHERMOBILENO = in.readString(this.OTHERMOBILENO instanceof Utf8 ? (Utf8)this.OTHERMOBILENO : null);
          }
          break;

        case 33:
          if (in.readIndex() != 1) {
            in.readNull();
            this.REMITTERNAME = null;
          } else {
            this.REMITTERNAME = in.readString(this.REMITTERNAME instanceof Utf8 ? (Utf8)this.REMITTERNAME : null);
          }
          break;

        case 34:
          if (in.readIndex() != 1) {
            in.readNull();
            this.APPROVALNUM = null;
          } else {
            this.APPROVALNUM = in.readString(this.APPROVALNUM instanceof Utf8 ? (Utf8)this.APPROVALNUM : null);
          }
          break;

        case 35:
          if (in.readIndex() != 1) {
            in.readNull();
            this.MCCCODE = null;
          } else {
            this.MCCCODE = in.readString(this.MCCCODE instanceof Utf8 ? (Utf8)this.MCCCODE : null);
          }
          break;

        case 36:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SERVERIP = null;
          } else {
            this.SERVERIP = in.readString(this.SERVERIP instanceof Utf8 ? (Utf8)this.SERVERIP : null);
          }
          break;

        case 37:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CBSRESP_DATE = null;
          } else {
            this.CBSRESP_DATE = in.readString(this.CBSRESP_DATE instanceof Utf8 ? (Utf8)this.CBSRESP_DATE : null);
          }
          break;

        case 38:
          if (in.readIndex() != 1) {
            in.readNull();
            this.INITMODE = null;
          } else {
            this.INITMODE = in.readString(this.INITMODE instanceof Utf8 ? (Utf8)this.INITMODE : null);
          }
          break;

        case 39:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PURPOSECODE = null;
          } else {
            this.PURPOSECODE = in.readString(this.PURPOSECODE instanceof Utf8 ? (Utf8)this.PURPOSECODE : null);
          }
          break;

        case 40:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CREDITACCOUNTTYPE = null;
          } else {
            this.CREDITACCOUNTTYPE = in.readString(this.CREDITACCOUNTTYPE instanceof Utf8 ? (Utf8)this.CREDITACCOUNTTYPE : null);
          }
          break;

        case 41:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CREDITIFSC = null;
          } else {
            this.CREDITIFSC = in.readString(this.CREDITIFSC instanceof Utf8 ? (Utf8)this.CREDITIFSC : null);
          }
          break;

        case 42:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DEBITACCOUNTTYPE = null;
          } else {
            this.DEBITACCOUNTTYPE = in.readString(this.DEBITACCOUNTTYPE instanceof Utf8 ? (Utf8)this.DEBITACCOUNTTYPE : null);
          }
          break;

        case 43:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DEBITIFSC = null;
          } else {
            this.DEBITIFSC = in.readString(this.DEBITIFSC instanceof Utf8 ? (Utf8)this.DEBITIFSC : null);
          }
          break;

        case 44:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ORDERID = null;
          } else {
            this.ORDERID = in.readString(this.ORDERID instanceof Utf8 ? (Utf8)this.ORDERID : null);
          }
          break;

        case 45:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYEECODE = null;
          } else {
            this.PAYEECODE = in.readString(this.PAYEECODE instanceof Utf8 ? (Utf8)this.PAYEECODE : null);
          }
          break;

        case 46:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYERCODE = null;
          } else {
            this.PAYERCODE = in.readString(this.PAYERCODE instanceof Utf8 ? (Utf8)this.PAYERCODE : null);
          }
          break;

        case 47:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SUBTYPE = null;
          } else {
            this.SUBTYPE = in.readString(this.SUBTYPE instanceof Utf8 ? (Utf8)this.SUBTYPE : null);
          }
          break;

        case 48:
          if (in.readIndex() != 1) {
            in.readNull();
            this.REMITTORMOBILENUMBER = null;
          } else {
            this.REMITTORMOBILENUMBER = in.readString(this.REMITTORMOBILENUMBER instanceof Utf8 ? (Utf8)this.REMITTORMOBILENUMBER : null);
          }
          break;

        case 49:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYEEIMEI = null;
          } else {
            this.PAYEEIMEI = in.readString(this.PAYEEIMEI instanceof Utf8 ? (Utf8)this.PAYEEIMEI : null);
          }
          break;

        case 50:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYERIMEI = null;
          } else {
            this.PAYERIMEI = in.readString(this.PAYERIMEI instanceof Utf8 ? (Utf8)this.PAYERIMEI : null);
          }
          break;

        case 51:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GMTDATE = null;
          } else {
            this.GMTDATE = in.readString(this.GMTDATE instanceof Utf8 ? (Utf8)this.GMTDATE : null);
          }
          break;

        case 52:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYEEACCOUNTTYPE = null;
          } else {
            this.PAYEEACCOUNTTYPE = in.readString(this.PAYEEACCOUNTTYPE instanceof Utf8 ? (Utf8)this.PAYEEACCOUNTTYPE : null);
          }
          break;

        case 53:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYERACCOUNTTYPE = null;
          } else {
            this.PAYERACCOUNTTYPE = in.readString(this.PAYERACCOUNTTYPE instanceof Utf8 ? (Utf8)this.PAYERACCOUNTTYPE : null);
          }
          break;

        case 54:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYERCONSENTNAME = null;
          } else {
            this.PAYERCONSENTNAME = in.readString(this.PAYERCONSENTNAME instanceof Utf8 ? (Utf8)this.PAYERCONSENTNAME : null);
          }
          break;

        case 55:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYERCONSENTTYPE = null;
          } else {
            this.PAYERCONSENTTYPE = in.readString(this.PAYERCONSENTTYPE instanceof Utf8 ? (Utf8)this.PAYERCONSENTTYPE : null);
          }
          break;

        case 56:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PAYERCONSENTVALUE = null;
          } else {
            this.PAYERCONSENTVALUE = in.readString(this.PAYERCONSENTVALUE instanceof Utf8 ? (Utf8)this.PAYERCONSENTVALUE : null);
          }
          break;

        case 57:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ADJCODE = null;
          } else {
            this.ADJCODE = in.readString(this.ADJCODE instanceof Utf8 ? (Utf8)this.ADJCODE : null);
          }
          break;

        case 58:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ADJFLAG = null;
          } else {
            this.ADJFLAG = in.readString(this.ADJFLAG instanceof Utf8 ? (Utf8)this.ADJFLAG : null);
          }
          break;

        case 59:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CREATE_DATE = null;
          } else {
            this.CREATE_DATE = in.readString(this.CREATE_DATE instanceof Utf8 ? (Utf8)this.CREATE_DATE : null);
          }
          break;

        case 60:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CREDITACCTNARRATION_103 = null;
          } else {
            this.CREDITACCTNARRATION_103 = in.readString(this.CREDITACCTNARRATION_103 instanceof Utf8 ? (Utf8)this.CREDITACCTNARRATION_103 : null);
          }
          break;

        case 61:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DE46 = null;
          } else {
            this.DE46 = in.readString(this.DE46 instanceof Utf8 ? (Utf8)this.DE46 : null);
          }
          break;

        case 62:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DEBITACCTNARRATION_102 = null;
          } else {
            this.DEBITACCTNARRATION_102 = in.readString(this.DEBITACCTNARRATION_102 instanceof Utf8 ? (Utf8)this.DEBITACCTNARRATION_102 : null);
          }
          break;

        case 63:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GST = null;
          } else {
            this.GST = in.readString(this.GST instanceof Utf8 ? (Utf8)this.GST : null);
          }
          break;

        case 64:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOANNUMBER = null;
          } else {
            this.LOANNUMBER = in.readString(this.LOANNUMBER instanceof Utf8 ? (Utf8)this.LOANNUMBER : null);
          }
          break;

        case 65:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOCALTIME = null;
          } else {
            this.LOCALTIME = in.readString(this.LOCALTIME instanceof Utf8 ? (Utf8)this.LOCALTIME : null);
          }
          break;

        case 66:
          if (in.readIndex() != 1) {
            in.readNull();
            this.NARRATION_125 = null;
          } else {
            this.NARRATION_125 = in.readString(this.NARRATION_125 instanceof Utf8 ? (Utf8)this.NARRATION_125 : null);
          }
          break;

        case 67:
          if (in.readIndex() != 1) {
            in.readNull();
            this.P2PTXNCHARGES = null;
          } else {
            this.P2PTXNCHARGES = in.readString(this.P2PTXNCHARGES instanceof Utf8 ? (Utf8)this.P2PTXNCHARGES : null);
          }
          break;

        case 68:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SCHEMECODE = null;
          } else {
            this.SCHEMECODE = in.readString(this.SCHEMECODE instanceof Utf8 ? (Utf8)this.SCHEMECODE : null);
          }
          break;

        case 69:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TXNAMOUNT = null;
          } else {
            this.TXNAMOUNT = in.readString(this.TXNAMOUNT instanceof Utf8 ? (Utf8)this.TXNAMOUNT : null);
          }
          break;

        case 70:
          if (in.readIndex() != 1) {
            in.readNull();
            this.BATCH_ID = null;
          } else {
            this.BATCH_ID = in.readString(this.BATCH_ID instanceof Utf8 ? (Utf8)this.BATCH_ID : null);
          }
          break;

        case 71:
          if (in.readIndex() != 1) {
            in.readNull();
            this.BASEAMOUNT = null;
          } else {
            this.BASEAMOUNT = in.readString(this.BASEAMOUNT instanceof Utf8 ? (Utf8)this.BASEAMOUNT : null);
          }
          break;

        case 72:
          if (in.readIndex() != 1) {
            in.readNull();
            this.BASECURR = null;
          } else {
            this.BASECURR = in.readString(this.BASECURR instanceof Utf8 ? (Utf8)this.BASECURR : null);
          }
          break;

        case 73:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CONCODE = null;
          } else {
            this.CONCODE = in.readString(this.CONCODE instanceof Utf8 ? (Utf8)this.CONCODE : null);
          }
          break;

        case 74:
          if (in.readIndex() != 1) {
            in.readNull();
            this.FX = null;
          } else {
            this.FX = in.readString(this.FX instanceof Utf8 ? (Utf8)this.FX : null);
          }
          break;

        case 75:
          if (in.readIndex() != 1) {
            in.readNull();
            this.MKUP = null;
          } else {
            this.MKUP = in.readString(this.MKUP instanceof Utf8 ? (Utf8)this.MKUP : null);
          }
          break;

        case 76:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ADDITIONAL4 = null;
          } else {
            this.ADDITIONAL4 = in.readString(this.ADDITIONAL4 instanceof Utf8 ? (Utf8)this.ADDITIONAL4 : null);
          }
          break;

        case 77:
          if (in.readIndex() != 1) {
            in.readNull();
            this.D12 = null;
          } else {
            this.D12 = in.readString(this.D12 instanceof Utf8 ? (Utf8)this.D12 : null);
          }
          break;

        case 78:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ADDITIONAL1 = null;
          } else {
            this.ADDITIONAL1 = in.readString(this.ADDITIONAL1 instanceof Utf8 ? (Utf8)this.ADDITIONAL1 : null);
          }
          break;

        case 79:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ADDITIONAL2 = null;
          } else {
            this.ADDITIONAL2 = in.readString(this.ADDITIONAL2 instanceof Utf8 ? (Utf8)this.ADDITIONAL2 : null);
          }
          break;

        case 80:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ADDITIONAL3 = null;
          } else {
            this.ADDITIONAL3 = in.readString(this.ADDITIONAL3 instanceof Utf8 ? (Utf8)this.ADDITIONAL3 : null);
          }
          break;

        case 81:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ADDITIONAL5 = null;
          } else {
            this.ADDITIONAL5 = in.readString(this.ADDITIONAL5 instanceof Utf8 ? (Utf8)this.ADDITIONAL5 : null);
          }
          break;

        case 82:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CBS_ROUTING = null;
          } else {
            this.CBS_ROUTING = in.readString(this.CBS_ROUTING instanceof Utf8 ? (Utf8)this.CBS_ROUTING : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}
